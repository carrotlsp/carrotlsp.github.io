<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>day02-WebRTC的整体认知</title>
    <link href="/2022/07/25/WebRTC%E6%BA%90%E7%A0%81/day02-WebRTC%E7%9A%84%E6%95%B4%E4%BD%93%E6%9E%B6%E6%9E%84/"/>
    <url>/2022/07/25/WebRTC%E6%BA%90%E7%A0%81/day02-WebRTC%E7%9A%84%E6%95%B4%E4%BD%93%E6%9E%B6%E6%9E%84/</url>
    
    <content type="html"><![CDATA[<h2 id="一、WebRTC学习前言"><a href="#一、WebRTC学习前言" class="headerlink" title="一、WebRTC学习前言"></a>一、WebRTC学习前言</h2><h3 id="1、WebRTC源码的代码量是什么级别？"><a href="#1、WebRTC源码的代码量是什么级别？" class="headerlink" title="1、WebRTC源码的代码量是什么级别？"></a>1、WebRTC源码的代码量是什么级别？</h3><ul><li>WebRTC有 <code>100多万</code> 行代码</li></ul><h3 id="2、音视频的起源？"><a href="#2、音视频的起源？" class="headerlink" title="2、音视频的起源？"></a>2、音视频的起源？</h3><ul><li>千里眼与顺风耳（想象）</li><li>1876年贝尔发明了电话（音频的起源）</li><li>1872年“奔跑的马”（为了证明🐴在奔跑时，四条腿是否出现腾空，借助一组照片，也是视频的起源）</li></ul><h3 id="3、WebRTC由何而来？"><a href="#3、WebRTC由何而来？" class="headerlink" title="3、WebRTC由何而来？"></a>3、WebRTC由何而来？</h3><ul><li>缘起GIPS的独门秘籍</li><li>Google收购GIPS，为了实现浏览器直播的宏大愿景，创建了WebRTC</li><li>WebRTC现在就是音视频网络传输界的霸主</li></ul><h3 id="4、【重要】传统直播和实时互动直播的区别（技术路线、最终形态上分析）？"><a href="#4、【重要】传统直播和实时互动直播的区别（技术路线、最终形态上分析）？" class="headerlink" title="4、【重要】传统直播和实时互动直播的区别（技术路线、最终形态上分析）？"></a>4、【重要】传统直播和实时互动直播的区别（技术路线、最终形态上分析）？</h3><img src="/2022/07/25/WebRTC%E6%BA%90%E7%A0%81/day02-WebRTC%E7%9A%84%E6%95%B4%E4%BD%93%E6%9E%B6%E6%9E%84/image-20220727064848021.png" class="" title="image-20220727064848021"><img src="/2022/07/25/WebRTC%E6%BA%90%E7%A0%81/day02-WebRTC%E7%9A%84%E6%95%B4%E4%BD%93%E6%9E%B6%E6%9E%84/image-20220727065058365.png" class="" title="image-20220727065058365"><h3 id="5、【重要】两种技术的对比？"><a href="#5、【重要】两种技术的对比？" class="headerlink" title="5、【重要】两种技术的对比？"></a>5、【重要】两种技术的对比？</h3><img src="/2022/07/25/WebRTC%E6%BA%90%E7%A0%81/day02-WebRTC%E7%9A%84%E6%95%B4%E4%BD%93%E6%9E%B6%E6%9E%84/image-20220727065259838.png" class="" title="image-20220727065259838"><h2 id="二、实时互动直播的难点在哪里？"><a href="#二、实时互动直播的难点在哪里？" class="headerlink" title="二、实时互动直播的难点在哪里？"></a>二、实时互动直播的难点在哪里？</h2><h3 id="1、对实时要求性高，每个延迟度让用户的体验如何？"><a href="#1、对实时要求性高，每个延迟度让用户的体验如何？" class="headerlink" title="1、对实时要求性高，每个延迟度让用户的体验如何？"></a>1、对实时要求性高，每个延迟度让用户的体验如何？</h3><ul><li>传统直播：<code>平均延迟在3秒以上</code></li><li>实时互动直播：<code>延迟在500毫秒以内</code></li></ul><img src="/2022/07/25/WebRTC%E6%BA%90%E7%A0%81/day02-WebRTC%E7%9A%84%E6%95%B4%E4%BD%93%E6%9E%B6%E6%9E%84/image-20220727065501848.png" class="" title="image-20220727065501848"><h3 id="2、TCP与UDP之争？"><a href="#2、TCP与UDP之争？" class="headerlink" title="2、TCP与UDP之争？"></a>2、TCP与UDP之争？</h3><ul><li><p>如果说UDP做到极致是不是就是自己实现了一套TCP呢？<code>否</code></p></li><li><p>tcp的<code>ack机制和超时重传机制</code>，就限制了tcp是无法做到500毫秒以下的延迟性的</p></li><li><p>因此实时互动直播都是选择借助 <code>UDP</code> 进行包传输</p></li></ul><img src="/2022/07/25/WebRTC%E6%BA%90%E7%A0%81/day02-WebRTC%E7%9A%84%E6%95%B4%E4%BD%93%E6%9E%B6%E6%9E%84/image-20220727070001320.png" class="" title="image-20220727070001320"><img src="/2022/07/25/WebRTC%E6%BA%90%E7%A0%81/day02-WebRTC%E7%9A%84%E6%95%B4%E4%BD%93%E6%9E%B6%E6%9E%84/image-20220727070013911.png" class="" title="image-20220727070013911"><h3 id="3、音视频服务质量与实时性之间的矛盾是什么？"><a href="#3、音视频服务质量与实时性之间的矛盾是什么？" class="headerlink" title="3、音视频服务质量与实时性之间的矛盾是什么？"></a>3、音视频服务质量与实时性之间的矛盾是什么？</h3><ul><li>如果想要提高音视频服务质量，那么就要保证数据包的完整性和数据足够保真，而就会给实时性带来很大挑战。</li></ul><img src="/2022/07/25/WebRTC%E6%BA%90%E7%A0%81/day02-WebRTC%E7%9A%84%E6%95%B4%E4%BD%93%E6%9E%B6%E6%9E%84/image-20220727070211566.png" class="" title="image-20220727070211566"><h3 id="4、实时互动直播为什么还要解决回音、噪音等问题？"><a href="#4、实时互动直播为什么还要解决回音、噪音等问题？" class="headerlink" title="4、实时互动直播为什么还要解决回音、噪音等问题？"></a>4、实时互动直播为什么还要解决回音、噪音等问题？</h3><ul><li>回音消除（之前好像对此认识存在误区）</li><li>降噪</li><li>自动增益</li></ul><img src="/2022/07/25/WebRTC%E6%BA%90%E7%A0%81/day02-WebRTC%E7%9A%84%E6%95%B4%E4%BD%93%E6%9E%B6%E6%9E%84/image-20220727070316704.png" class="" title="image-20220727070316704"><h3 id="5、两种直播的技术要求对比？"><a href="#5、两种直播的技术要求对比？" class="headerlink" title="5、两种直播的技术要求对比？"></a>5、两种直播的技术要求对比？</h3><img src="/2022/07/25/WebRTC%E6%BA%90%E7%A0%81/day02-WebRTC%E7%9A%84%E6%95%B4%E4%BD%93%E6%9E%B6%E6%9E%84/image-20220727070419012.png" class="" title="image-20220727070419012"><img src="/2022/07/25/WebRTC%E6%BA%90%E7%A0%81/day02-WebRTC%E7%9A%84%E6%95%B4%E4%BD%93%E6%9E%B6%E6%9E%84/image-20220727070444375.png" class="" title="image-20220727070444375"><h2 id="三、几个重要指标和评测方法？"><a href="#三、几个重要指标和评测方法？" class="headerlink" title="三、几个重要指标和评测方法？"></a>三、几个重要指标和评测方法？</h2><h3 id="1、实时互动直播的三个重要指标？"><a href="#1、实时互动直播的三个重要指标？" class="headerlink" title="1、实时互动直播的三个重要指标？"></a>1、实时互动直播的三个重要指标？</h3><ul><li>实时通信延迟指标</li><li>音频服务质量评测指标</li><li>视频服务质量评测指标</li></ul><h3 id="2、对实时通信延迟指标的理解？"><a href="#2、对实时通信延迟指标的理解？" class="headerlink" title="2、对实时通信延迟指标的理解？"></a>2、对实时通信延迟指标的理解？</h3><ul><li><code>谨记：</code> 实时互动直播，端到端的延迟评估必须小于500毫秒</li></ul><img src="/2022/07/25/WebRTC%E6%BA%90%E7%A0%81/day02-WebRTC%E7%9A%84%E6%95%B4%E4%BD%93%E6%9E%B6%E6%9E%84/image-20220727070636172.png" class="" title="image-20220727070636172"><h3 id="3、实时性最简单的评估方案？"><a href="#3、实时性最简单的评估方案？" class="headerlink" title="3、实时性最简单的评估方案？"></a>3、实时性最简单的评估方案？</h3><ul><li>放一个电子表，对比观看端看到的时间和真实时间的差距，就能大致评估延迟性了。</li></ul><img src="/2022/07/25/WebRTC%E6%BA%90%E7%A0%81/day02-WebRTC%E7%9A%84%E6%95%B4%E4%BD%93%E6%9E%B6%E6%9E%84/image-20220727070906374.png" class="" title="image-20220727070906374"><h3 id="4、视频质量评测方案？"><a href="#4、视频质量评测方案？" class="headerlink" title="4、视频质量评测方案？"></a>4、视频质量评测方案？</h3><ul><li>也是一般始终主观评测，同时可以借助码流大小辅助评估</li></ul><img src="/2022/07/25/WebRTC%E6%BA%90%E7%A0%81/day02-WebRTC%E7%9A%84%E6%95%B4%E4%BD%93%E6%9E%B6%E6%9E%84/image-20220727071021231.png" class="" title="image-20220727071021231"><img src="/2022/07/25/WebRTC%E6%BA%90%E7%A0%81/day02-WebRTC%E7%9A%84%E6%95%B4%E4%BD%93%E6%9E%B6%E6%9E%84/image-20220727071029799.png" class="" title="image-20220727071029799"><h2 id="四、为什么实时互动直播需要使用WebRTC？"><a href="#四、为什么实时互动直播需要使用WebRTC？" class="headerlink" title="四、为什么实时互动直播需要使用WebRTC？"></a>四、为什么实时互动直播需要使用WebRTC？</h2><h3 id="1、视频直播架构（大方面）"><a href="#1、视频直播架构（大方面）" class="headerlink" title="1、视频直播架构（大方面）"></a>1、视频直播架构（大方面）</h3><img src="/2022/07/25/WebRTC%E6%BA%90%E7%A0%81/day02-WebRTC%E7%9A%84%E6%95%B4%E4%BD%93%E6%9E%B6%E6%9E%84/image-20220727071121779.png" class="" title="image-20220727071121779"><h3 id="2、细化音视频直播架构？"><a href="#2、细化音视频直播架构？" class="headerlink" title="2、细化音视频直播架构？"></a>2、细化音视频直播架构？</h3><img src="/2022/07/25/WebRTC%E6%BA%90%E7%A0%81/day02-WebRTC%E7%9A%84%E6%95%B4%E4%BD%93%E6%9E%B6%E6%9E%84/image-20220727071154392.png" class="" title="image-20220727071154392"><h3 id="3、进一步细化音视频直播架构？"><a href="#3、进一步细化音视频直播架构？" class="headerlink" title="3、进一步细化音视频直播架构？"></a>3、进一步细化音视频直播架构？</h3><img src="/2022/07/25/WebRTC%E6%BA%90%E7%A0%81/day02-WebRTC%E7%9A%84%E6%95%B4%E4%BD%93%E6%9E%B6%E6%9E%84/image-20220727071317662.png" class="" title="image-20220727071317662"><h3 id="4、最终细化后的音视频直播架构？"><a href="#4、最终细化后的音视频直播架构？" class="headerlink" title="4、最终细化后的音视频直播架构？"></a>4、最终细化后的音视频直播架构？</h3><ul><li><code>补充</code>：电话使用的是  g.711 编码</li></ul><img src="/2022/07/25/WebRTC%E6%BA%90%E7%A0%81/day02-WebRTC%E7%9A%84%E6%95%B4%E4%BD%93%E6%9E%B6%E6%9E%84/image-20220727071341870.png" class="" title="image-20220727071341870"><h3 id="5、自研系统与WebRTC的比较？"><a href="#5、自研系统与WebRTC的比较？" class="headerlink" title="5、自研系统与WebRTC的比较？"></a>5、自研系统与WebRTC的比较？</h3><img src="/2022/07/25/WebRTC%E6%BA%90%E7%A0%81/day02-WebRTC%E7%9A%84%E6%95%B4%E4%BD%93%E6%9E%B6%E6%9E%84/image-20220727071447890.png" class="" title="image-20220727071447890">]]></content>
    
    
    <categories>
      
      <category>WebRTC源码</category>
      
    </categories>
    
    
    <tags>
      
      <tag>WebRTC</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>day17-【实战】iOS端的WebRTC代码实现思路</title>
    <link href="/2022/07/18/WebRTC%E5%85%A5%E9%97%A8/day17iOS%E5%AE%9E%E7%8E%B0%E7%AB%AF%E5%AF%B9%E7%AB%AF/"/>
    <url>/2022/07/18/WebRTC%E5%85%A5%E9%97%A8/day17iOS%E5%AE%9E%E7%8E%B0%E7%AB%AF%E5%AF%B9%E7%AB%AF/</url>
    
    <content type="html"><![CDATA[<h2 id="一、单方面准备阶段（设备A）"><a href="#一、单方面准备阶段（设备A）" class="headerlink" title="一、单方面准备阶段（设备A）"></a>一、单方面准备阶段（设备A）</h2><h3 id="1、创建-RTCPeerConnectionFactory-工厂类"><a href="#1、创建-RTCPeerConnectionFactory-工厂类" class="headerlink" title="1、创建 RTCPeerConnectionFactory 工厂类"></a>1、创建 <code>RTCPeerConnectionFactory</code> 工厂类</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></div></td><td class="code"><pre><code class="hljs objective-c">- (void)createPeerConnectionFactory &#123;<br>    //设置SSL传输<br>    [RTCPeerConnectionFactory initialize];<br>    <br>    //如果点对点工厂为空<br>    if (!factory)<br>    &#123;<br>        RTCDefaultVideoDecoderFactory* decoderFactory = [[RTCDefaultVideoDecoderFactory alloc] init];<br>        RTCDefaultVideoEncoderFactory* encoderFactory = [[RTCDefaultVideoEncoderFactory alloc] init];<br>        NSArray* codecs = [encoderFactory supportedCodecs];<br>        [encoderFactory setPreferredCodec:codecs[2]];<br>        <br>        factory = [[RTCPeerConnectionFactory alloc] initWithEncoderFactory: encoderFactory<br>                                                            decoderFactory: decoderFactory];<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="2、初始化本地音视频流"><a href="#2、初始化本地音视频流" class="headerlink" title="2、初始化本地音视频流"></a>2、初始化本地音视频流</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><code class="hljs objective-c">- (void) captureLocalMedia &#123;<br>    NSDictionary* mandatoryConstraints = @&#123;&#125;;<br>    RTCMediaConstraints* constraints =<br>    [[RTCMediaConstraints alloc] initWithMandatoryConstraints:mandatoryConstraints<br>                                          optionalConstraints:nil];<br>    <br>    RTCAudioSource* audioSource = [factory audioSourceWithConstraints: constraints];<br>    //self.audioTrack = [factory audioTrackWithTrackId:@&quot;ARDAMSa0&quot;];<br>    audioTrack = [factory audioTrackWithSource:audioSource trackId:@&quot;ADRAMSa0&quot;];<br>    <br>    NSArray&lt;AVCaptureDevice* &gt;* captureDevices = [RTCCameraVideoCapturer captureDevices];<br>    AVCaptureDevicePosition position = AVCaptureDevicePositionFront;<br>    AVCaptureDevice* device = captureDevices[0];<br>    for (AVCaptureDevice* obj in captureDevices) &#123;<br>        if (obj.position == position) &#123;<br>            device = obj;<br>            break;<br>        &#125;<br>    &#125;<br>    <br>    //检测摄像头权限<br>    AVAuthorizationStatus authStatus = [AVCaptureDevice authorizationStatusForMediaType:AVMediaTypeVideo];<br>    if(authStatus == AVAuthorizationStatusRestricted || authStatus == AVAuthorizationStatusDenied) &#123;<br>        NSLog(@&quot;相机访问受限&quot;);<br>        return;<br>    &#125;<br>    <br>    if (device) &#123;<br>        RTCVideoSource* videoSource = [factory videoSource];<br>        capture = [[RTCCameraVideoCapturer alloc] initWithDelegate:videoSource];<br>        AVCaptureDeviceFormat* format = [[RTCCameraVideoCapturer supportedFormatsForDevice:device] lastObject];<br>        CGFloat fps = [[format videoSupportedFrameRateRanges] firstObject].maxFrameRate;<br>        videoTrack = [factory videoTrackWithSource:videoSource trackId:@&quot;ARDAMSv0&quot;];<br>        self.localVideoView.captureSession = capture.captureSession;<br>        [capture startCaptureWithDevice:device<br>                                     format:format<br>                                        fps:fps];<br>        <br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><ul><li>这时候屏幕上应该可以看到自己的视频流在播放了。</li></ul><h3 id="3、初始化SocketIO，并-connect-连接到信令服务器"><a href="#3、初始化SocketIO，并-connect-连接到信令服务器" class="headerlink" title="3、初始化SocketIO，并 connect 连接到信令服务器"></a>3、初始化SocketIO，并 <code>connect</code> 连接到信令服务器</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br></pre></td><td class="code"><pre><code class="hljs objective-c">- (void)createConnect: (NSString*) addr &#123;<br>    NSLog(@&quot;the server addr is %@&quot;, addr);<br>    /*<br>     log 是否打印日志<br>     forcePolling  是否强制使用轮询<br>     reconnectAttempts 重连次数，-1表示一直重连<br>     reconnectWait 重连间隔时间<br>     forceWebsockets 是否强制使用websocket<br>     */<br>    NSURL* url = [[NSURL alloc] initWithString:addr];<br>    manager = [[SocketManager alloc] initWithSocketURL:url<br>                                                config:@&#123;@&quot;log&quot;: @YES,<br>                                                         @&quot;forcePolling&quot;:@YES,<br>                                                         @&quot;forceWebsockets&quot;:@NO,<br>                                                         @&quot;reconnectAttempts&quot;:@(5),<br>                                                         @&quot;reconnectWait&quot;:@(1)<br>                                                         &#125;];<br>    socket = manager.defaultSocket;<br>    <br>    [socket on:@&quot;connect&quot; callback:^(NSArray* data, SocketAckEmitter* ack) &#123;<br>        NSLog(@&quot;socket connected&quot;);<br>        [self.delegate connected];<br>    &#125;];<br>    <br>    [socket on:@&quot;error&quot; callback:^(NSArray* data, SocketAckEmitter* ack) &#123;<br>        NSLog(@&quot;socket connect_error&quot;);<br>        [self.delegate connect_error];<br>    &#125;];<br>    <br>    [socket on:@&quot;reconnectAttempt&quot; callback:^(NSArray* data, SocketAckEmitter* ack) &#123;<br>        NSLog(@&quot;socket reconnectAttempt&quot;);<br>        [self.delegate reconnectAttempt];<br>    &#125;];<br>   <br>    [socket on:@&quot;joined&quot; callback:^(NSArray * data, SocketAckEmitter * ack) &#123;<br>        NSString* room = [data objectAtIndex:0];<br>        <br>        NSLog(@&quot;joined room(%@)&quot;, room);<br>        <br>        [self.delegate joined:room];<br>        <br>    &#125;];<br>    <br>    [socket on:@&quot;leaved&quot; callback:^(NSArray * data, SocketAckEmitter * ack) &#123;<br>        NSString* room = [data objectAtIndex:0];<br>        <br>        NSLog(@&quot;leaved room(%@)&quot;, room);<br>        <br>        [self.delegate leaved:room];<br>    &#125;];<br>    <br>    [socket on:@&quot;full&quot; callback:^(NSArray * data, SocketAckEmitter * ack) &#123;<br>        NSString* room = [data objectAtIndex:0];<br>        <br>        NSLog(@&quot;room(%@) is full&quot;, room);<br>        [self.delegate full:room];<br>    &#125;];<br>    <br>    [socket on:@&quot;otherjoin&quot; callback:^(NSArray * data, SocketAckEmitter * ack) &#123;<br>        NSString* room = [data objectAtIndex:0];<br>        NSString* uid = [data objectAtIndex:1];<br>        <br>        NSLog(@&quot;other user(%@) has been joined into room(%@)&quot;, room, uid);<br>        [self.delegate otherjoin:room User:uid];<br>    &#125;];<br>    <br>    [socket on:@&quot;bye&quot; callback:^(NSArray * data, SocketAckEmitter * ack) &#123;<br>        NSString* room = [data objectAtIndex:0];<br>        NSString* uid = [data objectAtIndex:1];<br>        <br>        NSLog(@&quot;user(%@) has leaved from room(%@)&quot;, room, uid);<br>        [self.delegate byeFrom:room User:uid];<br>    &#125;];<br>    <br>    [socket on:@&quot;message&quot; callback:^(NSArray * data, SocketAckEmitter * ack)&#123;<br>        NSString* room = [data objectAtIndex:0];<br>        NSDictionary* msg = [data objectAtIndex:1];<br>        <br>        NSLog(@&quot;onMessage, room(%@), data(%@)&quot;, room, msg);<br>        <br>        NSString* type = msg[@&quot;type&quot;];<br>        if( [type isEqualToString:@&quot;offer&quot;])&#123;<br>            [self.delegate offer: room message: msg];<br>        &#125;else if( [type isEqualToString:@&quot;answer&quot;])&#123;<br>            [self.delegate answer:room message: msg];<br>        &#125;else if( [type isEqualToString:@&quot;candidate&quot;])&#123;<br>            [self.delegate candidate:room message: msg];<br>        &#125;else &#123;<br>            NSLog(@&quot;the msg is invalid!&quot;);<br>        &#125;<br>    &#125;];<br>    <br>    // 连接超时时间设置为3秒<br>    [socket connectWithTimeoutAfter: 3.0 withHandler:^(void)&#123;<br>        NSLog(@&quot;socket connect_timeout 3.0s&quot;);<br>        [self.delegate connect_timeout];<br>    &#125;];<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="4、设备A发送-join-指令给服务器，并收到-joined-指令后，会创建-RTCPeerConnection-对象"><a href="#4、设备A发送-join-指令给服务器，并收到-joined-指令后，会创建-RTCPeerConnection-对象" class="headerlink" title="4、设备A发送 join 指令给服务器，并收到 joined 指令后，会创建 RTCPeerConnection 对象"></a>4、设备A发送 <code>join</code> 指令给服务器，并收到 <code>joined</code> 指令后，会创建 <code>RTCPeerConnection</code> 对象</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs objective-c">- (RTCPeerConnection *)createPeerConnection &#123;<br>    //得到ICEServer<br>    if (!ICEServers) &#123;<br>        ICEServers = [NSMutableArray array];<br>        [ICEServers addObject:[self defaultSTUNServer]];<br>    &#125;<br><br>    //用工厂来创建连接<br>    RTCConfiguration* configuration = [[RTCConfiguration alloc] init];<br>    [configuration setIceServers:ICEServers];<br>    RTCPeerConnection* conn = [factory<br>                                     peerConnectionWithConfiguration:configuration<br>                                                         constraints:[self defaultPeerConnContraints]<br>                                                            delegate:self];<br>    <br>    NSArray&lt;NSString*&gt;* mediaStreamLabels = @[@&quot;ARDAMS&quot;];<br>    [conn addTrack:videoTrack streamIds:mediaStreamLabels];<br>    [conn addTrack:audioTrack streamIds:mediaStreamLabels];<br><br>    return conn;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="二、有另一个设备（设备B）加入房间阶段-媒体协商"><a href="#二、有另一个设备（设备B）加入房间阶段-媒体协商" class="headerlink" title="二、有另一个设备（设备B）加入房间阶段 - 媒体协商"></a>二、有另一个设备（设备B）加入房间阶段 - 媒体协商</h2><h3 id="1、A端会触发-otherjoin-信令，此刻有两个peerConnection，进入媒体协商阶段（创建offer、设置localOffer、发送offer）"><a href="#1、A端会触发-otherjoin-信令，此刻有两个peerConnection，进入媒体协商阶段（创建offer、设置localOffer、发送offer）" class="headerlink" title="1、A端会触发 otherjoin 信令，此刻有两个peerConnection，进入媒体协商阶段（创建offer、设置localOffer、发送offer）"></a>1、A端会触发 <code>otherjoin</code> 信令，此刻有两个peerConnection，进入媒体协商阶段（创建offer、设置localOffer、发送offer）</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><code class="hljs objective-c">// 约束信息<br>- (RTCMediaConstraints*)defaultPeerConnContraints &#123;<br>    RTCMediaConstraints* mediaConstraints =<br>    [[RTCMediaConstraints alloc] initWithMandatoryConstraints:@&#123;<br>                                                                kRTCMediaConstraintsOfferToReceiveAudio:kRTCMediaConstraintsValueTrue,<br>                                                                kRTCMediaConstraintsOfferToReceiveVideo:kRTCMediaConstraintsValueTrue<br>                                                                &#125;<br>                                          optionalConstraints:@&#123; @&quot;DtlsSrtpKeyAgreement&quot; : @&quot;true&quot; &#125;];<br>    return mediaConstraints;<br>&#125;<br><br>// 创建offer<br>- (void)doStartCall &#123;<br>    NSLog(@&quot;Start Call, Wait ...&quot;);<br>    [self addLogToScreen: @&quot;Start Call, Wait ...&quot;];<br>    if (!peerConnection) &#123;<br>        peerConnection = [self createPeerConnection];<br>    &#125;<br>    <br>    [peerConnection offerForConstraints:[self defaultPeerConnContraints]<br>                      completionHandler:^(RTCSessionDescription * _Nullable sdp, NSError * _Nullable error) &#123;<br>                          if(error)&#123;<br>                              NSLog(@&quot;Failed to create offer SDP, err=%@&quot;, error);<br>                          &#125; else &#123;<br>                              __weak RTCPeerConnection* weakPeerConnction = self-&gt;peerConnection;<br>                              [self setLocalOffer: weakPeerConnction withSdp: sdp];<br>                          &#125;<br>                      &#125;];<br>&#125;<br><br>// 发送offer给对端<br>- (void)setLocalOffer:(RTCPeerConnection*)pc withSdp:(RTCSessionDescription*) sdp&#123;<br>    <br>    [pc setLocalDescription:sdp completionHandler:^(NSError * _Nullable error) &#123;<br>        if (!error) &#123;<br>            NSLog(@&quot;Successed to set local offer sdp!&quot;);<br>        &#125;else&#123;<br>            NSLog(@&quot;Failed to set local offer sdp, err=%@&quot;, error);<br>        &#125;<br>    &#125;];<br>    <br>    __weak NSString* weakMyRoom = myRoom;<br>    dispatch_async(dispatch_get_main_queue(), ^&#123;<br>        <br>        NSDictionary* dict = [[NSDictionary alloc] initWithObjects:@[@&quot;offer&quot;, sdp.sdp]<br>                                                           forKeys: @[@&quot;type&quot;, @&quot;sdp&quot;]];<br>        <br>        [[SignalClient getInstance] sendMessage: weakMyRoom<br>                                        withMsg: dict];<br>    &#125;);<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="2、B端收到Offer后，会创建answer，并且发送给A端；A端收到answer会触发如下流程"><a href="#2、B端收到Offer后，会创建answer，并且发送给A端；A端收到answer会触发如下流程" class="headerlink" title="2、B端收到Offer后，会创建answer，并且发送给A端；A端收到answer会触发如下流程"></a>2、B端收到Offer后，会创建answer，并且发送给A端；A端收到answer会触发如下流程</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs objective-c">// A端收到来自B端的Answer，并进行设置<br>- (void)answer:(NSString *)room message:(NSDictionary *)dict &#123;<br>    NSLog(@&quot;have received a answer message %@&quot;, dict);<br>    <br>    NSString *remoteAnswerSdp = dict[@&quot;sdp&quot;];<br>    RTCSessionDescription *remoteSdp = [[RTCSessionDescription alloc]<br>                                           initWithType:RTCSdpTypeAnswer<br>                                                    sdp: remoteAnswerSdp];<br>    [peerConnection setRemoteDescription:remoteSdp<br>                       completionHandler:^(NSError * _Nullable error) &#123;<br>        if(!error)&#123;<br>            NSLog(@&quot;Success to set remote Answer SDP&quot;);<br>        &#125;else&#123;<br>            NSLog(@&quot;Failure to set remote Answer SDP, err=%@&quot;, error);<br>        &#125;<br>    &#125;];<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="三、有另一个设备（设备B）加入房间阶段-快速ICE阶段"><a href="#三、有另一个设备（设备B）加入房间阶段-快速ICE阶段" class="headerlink" title="三、有另一个设备（设备B）加入房间阶段 - 快速ICE阶段"></a>三、有另一个设备（设备B）加入房间阶段 - 快速ICE阶段</h2><h3 id="1、创建peerConnection并且设置ICEServer之后，WebRTC就会去收集本设备的candidate信息，并触发如下回调"><a href="#1、创建peerConnection并且设置ICEServer之后，WebRTC就会去收集本设备的candidate信息，并触发如下回调" class="headerlink" title="1、创建peerConnection并且设置ICEServer之后，WebRTC就会去收集本设备的candidate信息，并触发如下回调"></a>1、创建peerConnection并且设置ICEServer之后，WebRTC就会去收集本设备的candidate信息，并触发如下回调</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs objective-c">/** 默默收集candidate信息，然后通过信令服务器发送给对端 */<br>/** New ice candidate has been found. */<br>- (void)peerConnection:(RTCPeerConnection *)peerConnection<br>didGenerateIceCandidate:(RTCIceCandidate *)candidate&#123;<br>    NSLog(@&quot;%s&quot;,__func__);<br>    <br>    NSString* weakMyRoom = myRoom;<br>    dispatch_async(dispatch_get_main_queue(), ^&#123;<br>    <br>        NSDictionary* dict = [[NSDictionary alloc] initWithObjects:@[@&quot;candidate&quot;,<br>                                                                [NSString stringWithFormat:@&quot;%d&quot;, candidate.sdpMLineIndex],<br>                                                                candidate.sdpMid,<br>                                                                candidate.sdp]<br>                                                           forKeys:@[@&quot;type&quot;, @&quot;label&quot;, @&quot;id&quot;, @&quot;candidate&quot;]];<br>    <br>        [[SignalClient getInstance] sendMessage: weakMyRoom<br>                                    withMsg:dict];<br>    &#125;);<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="2、对端收到信令服务器转发而来的candidate，会触发如下操作，完成ICE的candidate交互流程。在所有candidate交互完成后，会自动进入ICE阶段"><a href="#2、对端收到信令服务器转发而来的candidate，会触发如下操作，完成ICE的candidate交互流程。在所有candidate交互完成后，会自动进入ICE阶段" class="headerlink" title="2、对端收到信令服务器转发而来的candidate，会触发如下操作，完成ICE的candidate交互流程。在所有candidate交互完成后，会自动进入ICE阶段"></a>2、对端收到信令服务器转发而来的candidate，会触发如下操作，完成ICE的candidate交互流程。在所有candidate交互完成后，会自动进入ICE阶段</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs objective-c">//收到信令服务器转发而来的candidate<br>- (void)candidate:(NSString *)room message:(NSDictionary *)dict &#123;<br>    NSLog(@&quot;have received a message %@&quot;, dict);<br>    <br>    NSString* desc = dict[@&quot;sdp&quot;];<br>    NSString* sdpMLineIndex = dict[@&quot;label&quot;];<br>    int index = [sdpMLineIndex intValue];<br>    NSString* sdpMid = dict[@&quot;id&quot;];<br>    <br>    <br>    RTCIceCandidate *candidate = [[RTCIceCandidate alloc] initWithSdp:desc<br>                                                        sdpMLineIndex:index<br>                                                               sdpMid:sdpMid];;<br>    [peerConnection addIceCandidate:candidate];<br>&#125;<br></code></pre></td></tr></table></figure><ul><li>至此 <code>媒体协商</code> 和 <code>ICE</code> 流程都已经完成</li></ul><h2 id="四、媒体流传输阶段"><a href="#四、媒体流传输阶段" class="headerlink" title="四、媒体流传输阶段"></a>四、媒体流传输阶段</h2><h3 id="1、收到数据流如何展示？"><a href="#1、收到数据流如何展示？" class="headerlink" title="1、收到数据流如何展示？"></a>1、收到数据流如何展示？</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs objective-c">// 创建remoteTrack播放的视图<br>- (void)viewDidLoad &#123;<br>    [super viewDidLoad];<br>    self.remoteVideoView = [[RTCEAGLVideoView alloc] initWithFrame:self.view.bounds];<br>    self.remoteVideoView.delegate = self;<br>    [self.view addSubview:self.remoteVideoView];<br> &#125;<br><br>/** 当接收到远端的数据流时，进行播放 */<br>/** Called when a receiver and its track are created. */<br>- (void)peerConnection:(RTCPeerConnection *)peerConnection<br>        didAddReceiver:(RTCRtpReceiver *)rtpReceiver<br>               streams:(NSArray&lt;RTCMediaStream *&gt; *)mediaStreams &#123;<br>    NSLog(@&quot;%s&quot;,__func__);<br>    <br>    RTCMediaStreamTrack* track = rtpReceiver.track;<br>    if([track.kind isEqualToString:kRTCMediaStreamTrackKindVideo])&#123;<br>        if(!self.remoteVideoView)&#123;<br>            NSLog(@&quot;error:remoteVideoView have not been created!&quot;);<br>            return;<br>        &#125;<br>        <br>        remoteVideoTrack = (RTCVideoTrack*)track;<br>        [remoteVideoTrack addRenderer: self.remoteVideoView];<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="五、核心代码记录"><a href="#五、核心代码记录" class="headerlink" title="五、核心代码记录"></a>五、核心代码记录</h2><h3 id="1、实现一个房间加入的视图"><a href="#1、实现一个房间加入的视图" class="headerlink" title="1、实现一个房间加入的视图"></a>1、实现一个房间加入的视图</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br></pre></td><td class="code"><pre><code class="hljs objective-c">#import &quot;ViewController.h&quot;<br>#import &quot;CallViewController.h&quot;<br>#import &quot;SignalClient.h&quot;<br><br>@interface ViewController ()<br>&#123;<br>    SignalClient *sigclient;<br>&#125;<br><br>@property (strong, nonatomic) UILabel* addrLabel;<br>@property (strong, nonatomic) UITextField* addr;<br><br>@property (strong, nonatomic) UILabel* roomLabel;<br>@property (strong, nonatomic) UITextField* room;<br><br>@property (strong, nonatomic) UIButton* joinBtn;<br><br>@property (strong, nonatomic) CallViewController* call;<br><br>@end<br><br>@implementation ViewController<br><br>- (void)viewDidLoad &#123;<br>    [super viewDidLoad];<br>    // Do any additional setup after loading the view, typically from a nib.<br><br>    CGFloat width = self.view.bounds.size.width;<br>    <br>    self.addrLabel = [[UILabel alloc] init];<br>    [self.addrLabel setText:@&quot;ADDR:&quot;];<br>    [self.addrLabel setFrame:CGRectMake(20, 100, 60, 40)];<br>    [self.view addSubview:self.addrLabel];<br>    <br>    self.addr = [[UITextField alloc] init];<br>    [self.addr setText:@&quot;https://webrtc.runduck.cn&quot;];<br>    [self.addr setFrame:CGRectMake(80, 100, width-100, 40)];<br>    [self.addr setTextColor:[UIColor blackColor]];<br>    [self.addr setBorderStyle:UITextBorderStyleRoundedRect];<br>    [self.addr setEnabled:TRUE];<br>    [self.view addSubview:self.addr];<br>    <br>    self.roomLabel = [[UILabel alloc] init];<br>    [self.roomLabel setText:@&quot;ROOM:&quot;];<br>    [self.roomLabel setFrame:CGRectMake(20, 150, 60, 40)];<br>    [self.view addSubview:self.roomLabel];<br>    <br>    self.room = [[UITextField alloc] init];<br>    [self.room setText:@&quot;123123&quot;];<br>    [self.room setFrame:CGRectMake(80, 150, width-100, 40)];<br>    [self.room setTextColor:[UIColor blackColor]];<br>    [self.room setBorderStyle:UITextBorderStyleRoundedRect];<br>    [self.room setEnabled:TRUE];<br>    [self.view addSubview:self.room];<br>    <br>    self.joinBtn = [[UIButton alloc] init];<br>    [self.joinBtn setTitleColor:[UIColor whiteColor] forState:UIControlStateNormal];<br>    [self.joinBtn setTintColor:[UIColor whiteColor]];<br>    [self.joinBtn setTitle:@&quot;join&quot; forState:UIControlStateNormal];<br>    [self.joinBtn setBackgroundColor:[UIColor grayColor]];<br>    [self.joinBtn setShowsTouchWhenHighlighted:YES];<br>    [self.joinBtn setFrame:CGRectMake(40, 200, width-80, 40)];<br>    <br>    [self.joinBtn addTarget:self action:@selector(btnClick:) forControlEvents:UIControlEventTouchUpInside];<br>    <br>    [self.view addSubview:self.joinBtn];<br>&#125;<br><br>/** 点击空白处回收键盘 */<br>- (void)touchesBegan:(NSSet&lt;UITouch *&gt; *)touches   withEvent:(UIEvent *)event<br>&#123;<br>    [self.view endEditing:YES];<br>&#125;<br><br>- (void)btnClick:(UIButton*)sender&#123;<br>    NSLog(@&quot;on click!&quot;);<br><br>    self.call = [[CallViewController alloc] initAddr:self.addr.text withRoom: self.room.text];<br>    [self.call.view setFrame:self.view.bounds];<br>    [self.call.view setBackgroundColor:[UIColor whiteColor]];<br><br>    [self addChildViewController:self.call];<br>    [self.call didMoveToParentViewController:self];<br>    <br>    [self.view addSubview:self.call.view];<br>    <br>    [[SignalClient getInstance] createConnect: self.addr.text];<br>&#125;<br><br>#pragma mark protocal EventNotify<br>- (void) leave &#123;<br>//    [self.view removeFromSuperview];<br>    <br>&#125;<br><br><br>@end<br></code></pre></td></tr></table></figure><h3 id="2、信令服务器相关代码"><a href="#2、信令服务器相关代码" class="headerlink" title="2、信令服务器相关代码"></a>2、信令服务器相关代码</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br></pre></td><td class="code"><pre><code class="hljs objective-c">#import &quot;SignalClient.h&quot;<br>@import SocketIO;<br><br>@interface SignalClient()<br>&#123;<br>    <br>    SocketManager* manager;<br>    SocketIOClient* socket;<br>    <br>    NSString* room;<br>&#125;<br><br>@end<br><br>@implementation SignalClient<br><br>static SignalClient* m_instance = nil;<br><br>+ (SignalClient*) getInstance &#123;<br>    <br>    static dispatch_once_t onceToken;<br>    dispatch_once(&amp;onceToken, ^&#123;<br>        m_instance = [[self alloc]init];<br>    &#125;);<br>    <br>    return m_instance;<br>&#125;<br><br>- (void) createConnect: (NSString*) addr &#123;<br>    NSLog(@&quot;the server addr is %@&quot;, addr);<br>    /*<br>     log 是否打印日志<br>     forcePolling  是否强制使用轮询<br>     reconnectAttempts 重连次数，-1表示一直重连<br>     reconnectWait 重连间隔时间<br>     forceWebsockets 是否强制使用websocket<br>     */<br>    NSURL* url = [[NSURL alloc] initWithString:addr];<br>    manager = [[SocketManager alloc] initWithSocketURL:url<br>                                                config:@&#123;@&quot;log&quot;: @YES,<br>                                                         @&quot;forcePolling&quot;:@YES,<br>                                                         @&quot;forceWebsockets&quot;:@NO,<br>                                                         @&quot;reconnectAttempts&quot;:@(5),<br>                                                         @&quot;reconnectWait&quot;:@(1)<br>                                                         &#125;];<br>    socket = manager.defaultSocket;<br>//    socket = [manager socketForNamespace:@&quot;/socket.io&quot;];<br>    <br>//    socket = [manager socketForNamespace:@&quot;&quot;];<br>    <br>    [socket on:@&quot;connect&quot; callback:^(NSArray* data, SocketAckEmitter* ack) &#123;<br>        NSLog(@&quot;socket connected&quot;);<br>        [self.delegate connected];<br>    &#125;];<br>    <br>    [socket on:@&quot;error&quot; callback:^(NSArray* data, SocketAckEmitter* ack) &#123;<br>        NSLog(@&quot;socket connect_error&quot;);<br>        [self.delegate connect_error];<br>    &#125;];<br>    <br>    [socket on:@&quot;reconnectAttempt&quot; callback:^(NSArray* data, SocketAckEmitter* ack) &#123;<br>        NSLog(@&quot;socket reconnectAttempt&quot;);<br>        [self.delegate reconnectAttempt];<br>    &#125;];<br>    //    [socket on:@&quot;currentAmount&quot; callback:^(NSArray* data, SocketAckEmitter* ack) &#123;<br>    //        double cur = [[data objectAtIndex:0] floatValue];<br>    //<br>    //        [[socket emitWithAck:@&quot;canUpdate&quot; with:@[@(cur)]] timingOutAfter:0 callback:^(NSArray* data) &#123;<br>    //            [socket emit:@&quot;update&quot; with:@[@&#123;@&quot;amount&quot;: @(cur + 2.50)&#125;]];<br>    //        &#125;];<br>    //<br>    //        [ack with:@[@&quot;Got your currentAmount, &quot;, @&quot;dude&quot;]];<br>    //    &#125;];<br>    <br>    [socket on:@&quot;joined&quot; callback:^(NSArray * data, SocketAckEmitter * ack) &#123;<br>        NSString* room = [data objectAtIndex:0];<br>        <br>        NSLog(@&quot;joined room(%@)&quot;, room);<br>        <br>        [self.delegate joined:room];<br>        <br>    &#125;];<br>    <br>    [socket on:@&quot;leaved&quot; callback:^(NSArray * data, SocketAckEmitter * ack) &#123;<br>        NSString* room = [data objectAtIndex:0];<br>        <br>        NSLog(@&quot;leaved room(%@)&quot;, room);<br>        <br>        [self.delegate leaved:room];<br>    &#125;];<br>    <br>    [socket on:@&quot;full&quot; callback:^(NSArray * data, SocketAckEmitter * ack) &#123;<br>        NSString* room = [data objectAtIndex:0];<br>        <br>        NSLog(@&quot;room(%@) is full&quot;, room);<br>        [self.delegate full:room];<br>    &#125;];<br>    <br>    [socket on:@&quot;otherjoin&quot; callback:^(NSArray * data, SocketAckEmitter * ack) &#123;<br>        NSString* room = [data objectAtIndex:0];<br>        NSString* uid = [data objectAtIndex:1];<br>        <br>        NSLog(@&quot;other user(%@) has been joined into room(%@)&quot;, room, uid);<br>        [self.delegate otherjoin:room User:uid];<br>    &#125;];<br>    <br>    [socket on:@&quot;bye&quot; callback:^(NSArray * data, SocketAckEmitter * ack) &#123;<br>        NSString* room = [data objectAtIndex:0];<br>        NSString* uid = [data objectAtIndex:1];<br>        <br>        NSLog(@&quot;user(%@) has leaved from room(%@)&quot;, room, uid);<br>        [self.delegate byeFrom:room User:uid];<br>    &#125;];<br>    <br>    [socket on:@&quot;message&quot; callback:^(NSArray * data, SocketAckEmitter * ack)&#123;<br>        NSString* room = [data objectAtIndex:0];<br>        NSDictionary* msg = [data objectAtIndex:1];<br>        <br>        NSLog(@&quot;onMessage, room(%@), data(%@)&quot;, room, msg);<br>        <br>        NSString* type = msg[@&quot;type&quot;];<br>        if( [type isEqualToString:@&quot;offer&quot;])&#123;<br>            [self.delegate offer: room message: msg];<br>        &#125;else if( [type isEqualToString:@&quot;answer&quot;])&#123;<br>            [self.delegate answer:room message: msg];<br>        &#125;else if( [type isEqualToString:@&quot;candidate&quot;])&#123;<br>            [self.delegate candidate:room message: msg];<br>        &#125;else &#123;<br>            NSLog(@&quot;the msg is invalid!&quot;);<br>        &#125;<br>    &#125;];<br>    <br>    // 连接超时时间设置为3秒<br>    [socket connectWithTimeoutAfter: 3.0 withHandler:^(void)&#123;<br>        NSLog(@&quot;socket connect_timeout 3.0s&quot;);<br>        [self.delegate connect_timeout];<br>    &#125;];<br>&#125;<br><br>- (void) joinRoom:(NSString*) room &#123;<br>    NSLog(@&quot;join room(%@)&quot;, room);<br>    <br>    if(socket.status == SocketIOStatusConnected)&#123;<br>        [socket emit:@&quot;join&quot; with:@[room]];<br>    &#125;<br>&#125;<br><br>- (void) leaveRoom:(NSString*) room &#123;<br>    NSLog(@&quot;leave room(%@)&quot;, room);<br>    <br>    if(socket.status == SocketIOStatusConnected)&#123;<br>        [socket emit:@&quot;leave&quot; with:@[room]];<br>    &#125;<br>&#125;<br><br>- (void) sendMessage: (NSString*) room withMsg:(NSDictionary*) msg &#123;<br>    if(socket.status == SocketIOStatusConnected) &#123;<br>        if(msg)&#123;<br>            NSLog(@&quot;json:%@&quot;, msg);<br>            [socket emit:@&quot;message&quot; with:@[room, msg]];<br>        &#125;else&#123;<br>            NSLog(@&quot;error: msg is nil!&quot;);<br>        &#125;<br>        <br>    &#125; else &#123;<br>        NSLog(@&quot;the socket has been disconnect!&quot;);<br>    &#125;<br>&#125;<br><br>@end<br><br></code></pre></td></tr></table></figure><h3 id="3、WebRTC相关代码"><a href="#3、WebRTC相关代码" class="headerlink" title="3、WebRTC相关代码"></a>3、WebRTC相关代码</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br><span class="line">544</span><br><span class="line">545</span><br><span class="line">546</span><br><span class="line">547</span><br><span class="line">548</span><br><span class="line">549</span><br><span class="line">550</span><br><span class="line">551</span><br><span class="line">552</span><br><span class="line">553</span><br><span class="line">554</span><br><span class="line">555</span><br><span class="line">556</span><br><span class="line">557</span><br><span class="line">558</span><br><span class="line">559</span><br><span class="line">560</span><br><span class="line">561</span><br><span class="line">562</span><br><span class="line">563</span><br><span class="line">564</span><br><span class="line">565</span><br><span class="line">566</span><br><span class="line">567</span><br><span class="line">568</span><br><span class="line">569</span><br><span class="line">570</span><br><span class="line">571</span><br><span class="line">572</span><br><span class="line">573</span><br><span class="line">574</span><br><span class="line">575</span><br><span class="line">576</span><br><span class="line">577</span><br><span class="line">578</span><br><span class="line">579</span><br><span class="line">580</span><br><span class="line">581</span><br><span class="line">582</span><br><span class="line">583</span><br><span class="line">584</span><br><span class="line">585</span><br><span class="line">586</span><br><span class="line">587</span><br><span class="line">588</span><br><span class="line">589</span><br><span class="line">590</span><br><span class="line">591</span><br><span class="line">592</span><br><span class="line">593</span><br><span class="line">594</span><br><span class="line">595</span><br><span class="line">596</span><br><span class="line">597</span><br><span class="line">598</span><br><span class="line">599</span><br><span class="line">600</span><br><span class="line">601</span><br><span class="line">602</span><br><span class="line">603</span><br><span class="line">604</span><br><span class="line">605</span><br><span class="line">606</span><br><span class="line">607</span><br><span class="line">608</span><br><span class="line">609</span><br><span class="line">610</span><br><span class="line">611</span><br><span class="line">612</span><br><span class="line">613</span><br><span class="line">614</span><br><span class="line">615</span><br><span class="line">616</span><br><span class="line">617</span><br><span class="line">618</span><br><span class="line">619</span><br><span class="line">620</span><br><span class="line">621</span><br><span class="line">622</span><br><span class="line">623</span><br><span class="line">624</span><br><span class="line">625</span><br><span class="line">626</span><br><span class="line">627</span><br><span class="line">628</span><br><span class="line">629</span><br><span class="line">630</span><br><span class="line">631</span><br><span class="line">632</span><br><span class="line">633</span><br><span class="line">634</span><br><span class="line">635</span><br><span class="line">636</span><br><span class="line">637</span><br><span class="line">638</span><br><span class="line">639</span><br><span class="line">640</span><br><span class="line">641</span><br><span class="line">642</span><br><span class="line">643</span><br><span class="line">644</span><br><span class="line">645</span><br><span class="line">646</span><br></pre></td><td class="code"><pre><code class="hljs objective-c">#import &quot;CallViewController.h&quot;<br>#import &quot;SignalClient.h&quot;<br><br>#import &lt;WebRTC/WebRTC.h&gt;<br>#import &lt;MBProgressHUD/MBProgressHUD.h&gt;<br><br>@interface CallViewController() &lt;SignalEventNotify, RTCPeerConnectionDelegate, RTCVideoViewDelegate&gt;<br>&#123;<br>    <br>    NSString* myAddr;<br>    NSString* myRoom;<br>    <br>    NSString* myState;<br>    <br>    SignalClient* sigclient;<br>    <br>    RTCPeerConnectionFactory* factory;<br>    RTCCameraVideoCapturer* capture;<br>    //RTCMediaStream* localStream; //???<br>    RTCPeerConnection* peerConnection;<br>    <br>    RTCVideoTrack* videoTrack;<br>    RTCAudioTrack* audioTrack;<br>    <br>    RTCVideoTrack* remoteVideoTrack;<br>    CGSize remoteVideoSize;<br>    <br>    NSMutableArray* ICEServers;<br><br>&#125;<br><br>@property (strong, nonatomic) RTCEAGLVideoView *remoteVideoView;<br>@property (strong, nonatomic) RTCCameraPreviewView *localVideoView;<br><br>@property (strong, nonatomic) UIButton* leaveBtn;<br><br><br>@property (strong, nonatomic) dispatch_source_t timer;<br><br>@end<br><br>@implementation CallViewController<br><br>static CGFloat const kLocalVideoViewSize = 120;<br>static CGFloat const kLocalVideoViewPadding = 8;<br><br>//static NSString *const RTCSTUNServerURL = @&quot;stun:stun.l.google.com:19302&quot;;<br>//static NSString *const RTCSTUNServerURL = @&quot;turn:xxx.xxx.xxx:3478&quot;;<br>static NSString *const RTCSTUNServerURL = @&quot;turn:47.95.15.179:3478&quot;;<br>static int logY = 0;<br><br><br><br>- (instancetype) initAddr:(NSString*) addr withRoom:(NSString*) room &#123;<br>    self = [super init];<br>    if (self) &#123;<br>        myAddr = addr;<br>        myRoom = room;<br>    &#125;<br>    return self;<br>&#125;<br><br>- (void)viewDidLoad &#123;<br>    [super viewDidLoad];<br>    logY = 0;<br>    CGRect bounds = self.view.bounds;<br>    <br>    self.remoteVideoView = [[RTCEAGLVideoView alloc] initWithFrame:self.view.bounds];<br>    self.remoteVideoView.delegate = self;<br>    //[self.remoteVideoView set]<br>    //[self.remoteVideoView setBackgroundColor:[UIColor yellowColor]];<br>    [self.view addSubview:self.remoteVideoView];<br>    <br>    self.localVideoView = [[RTCCameraPreviewView alloc] initWithFrame:CGRectZero];<br>    [self.view addSubview:self.localVideoView];<br>    <br>    // Aspect fit local video view into a square box.<br>    CGRect localVideoFrame =<br>    CGRectMake(0, 0, kLocalVideoViewSize, kLocalVideoViewSize);<br>    // Place the view in the bottom right.<br>    localVideoFrame.origin.x = CGRectGetMaxX(bounds)<br>    - localVideoFrame.size.width - kLocalVideoViewPadding;<br>    localVideoFrame.origin.y = CGRectGetMaxY(bounds)<br>    - localVideoFrame.size.height - kLocalVideoViewPadding;<br>    [self.localVideoView setFrame: localVideoFrame];<br><br>    self.leaveBtn = [[UIButton alloc] init];<br>    [self.leaveBtn setTitleColor:[UIColor whiteColor] forState:UIControlStateNormal];<br>    [self.leaveBtn setTintColor:[UIColor whiteColor]];<br>    [self.leaveBtn setTitle:@&quot;leave&quot; forState:UIControlStateNormal];<br>    [self.leaveBtn setBackgroundColor:[UIColor greenColor]];<br>    [self.leaveBtn setShowsTouchWhenHighlighted:YES];<br>    [self.leaveBtn.layer setCornerRadius:40];<br>    [self.leaveBtn.layer setBorderWidth:1];<br>    [self.leaveBtn setClipsToBounds:FALSE];<br>    [self.leaveBtn setFrame:CGRectMake(self.view.bounds.size.width/2-40,<br>                                       self.view.bounds.size.height-140,<br>                                       80,<br>                                       80)];<br>    <br>    [self.leaveBtn addTarget:self<br>                      action:@selector(leaveRoom:)<br>            forControlEvents:UIControlEventTouchUpInside];<br>    <br>    [self.view addSubview:self.leaveBtn];<br>    <br>    [self createPeerConnectionFactory];<br>    <br>    //[self startTimer];<br>    <br>    //创建本地流<br>    [self captureLocalMedia];<br><br>    sigclient = [SignalClient getInstance];<br>    sigclient.delegate = self;<br>    ////[sigclient createConnect:myAddr];<br>    <br>    myState = @&quot;init&quot;;<br>    <br>&#125;<br><br>-(void)addLogToScreen:(NSString *)format, ...&#123;<br>    <br>    va_list paramList;<br>    va_start(paramList,format);<br>    NSString* log = [[NSString alloc]initWithFormat:format arguments:paramList];<br>    va_end(paramList);<br>    <br>    CGRect labelRect = CGRectMake(0, logY++ * 20, 500, 200);<br>    UILabel *label = [[UILabel alloc] initWithFrame:labelRect];<br>    label.text = log;<br>    label.textColor = [UIColor redColor];<br>    [self.view addSubview:label];<br>&#125;<br><br>//- (void) startTimer &#123;<br>//    dispatch_queue_t queue = dispatch_get_global_queue(DISPATCH_QUEUE_PRIORITY_DEFAULT, 0);<br>//    dispatch_source_t timer = dispatch_source_create(DISPATCH_SOURCE_TYPE_TIMER, 0, 0, queue);<br>//    self.timer = timer;<br>//    dispatch_source_set_timer(timer, DISPATCH_TIME_NOW, 200 * NSEC_PER_SEC, 0 * NSEC_PER_SEC);<br>//<br>//    __weak NSString* weakMyState = myState;<br>//    __weak NSString* weakMyRoom = myRoom;<br>//    dispatch_source_set_event_handler(timer, ^&#123;<br>//<br>//        dispatch_<br>//<br>//        if([weakMyState isEqualToString:@&quot;init&quot;]) &#123;<br>//            NSLog(@&quot;%@&quot;,[NSThread currentThread]);<br>//            [[SignalClient getInstance] joinRoom:weakMyRoom];<br>//        &#125;else &#123;<br>//            [timer ]<br>//        &#125;<br>//    &#125;);<br>//    dispatch_resume(timer);<br>//&#125;<br><br>- (void)layoutSubviews &#123;<br>    CGRect bounds = self.view.bounds;<br>    if (remoteVideoSize.width &gt; 0 &amp;&amp; remoteVideoSize.height &gt; 0) &#123;<br>        // Aspect fill remote video into bounds.<br>        CGRect remoteVideoFrame =<br>        AVMakeRectWithAspectRatioInsideRect(remoteVideoSize, bounds);<br>        CGFloat scale = 1;<br>        if (remoteVideoFrame.size.width &gt; remoteVideoFrame.size.height) &#123;<br>            // Scale by height.<br>            scale = bounds.size.height / remoteVideoFrame.size.height;<br>        &#125; else &#123;<br>            // Scale by width.<br>            scale = bounds.size.width / remoteVideoFrame.size.width;<br>        &#125;<br>        remoteVideoFrame.size.height *= scale;<br>        remoteVideoFrame.size.width *= scale;<br>        self.remoteVideoView.frame = remoteVideoFrame;<br>        self.remoteVideoView.center =<br>        CGPointMake(CGRectGetMidX(bounds), CGRectGetMidY(bounds));<br>    &#125; else &#123;<br>        self.remoteVideoView.frame = bounds;<br>    &#125;<br><br>&#125;<br><br>- (void) leaveRoom:(UIButton*) sender &#123;<br>   <br>    [self willMoveToParentViewController:nil];<br>    [self.view removeFromSuperview];<br>    [self removeFromParentViewController];<br>    <br>    if (!sigclient) &#123;<br>        sigclient = [SignalClient getInstance];<br>    &#125;<br>    <br>    if(![myState isEqualToString:@&quot;leaved&quot;])&#123;<br>        [sigclient leaveRoom: myRoom];<br>    &#125;<br>    <br>    if(peerConnection)&#123;<br>        [peerConnection close];<br>        peerConnection = nil;<br>    &#125;<br>    <br>    NSLog(@&quot;leave room(%@)&quot;, myRoom);<br>    [self addLogToScreen: @&quot;leave room(%@)&quot;, myRoom];<br>&#125;<br><br>#pragma mark - SignalEventNotify<br><br>- (void) leaved:(NSString *)room &#123;<br>    NSLog(@&quot;leaved room(%@) notify!&quot;, room);<br>    [self addLogToScreen: @&quot;leaved room(%@) notify!&quot;, room];<br>&#125;<br><br>- (void) joined:(NSString *)room &#123;<br>    NSLog(@&quot;joined room(%@) notify!&quot;, room);<br>    [self addLogToScreen: @&quot;joined room(%@) notify!&quot;, room];<br>    <br>    myState = @&quot;joined&quot;;<br>    <br>    //这里应该创建PeerConnection<br>    if (!peerConnection) &#123;<br>        peerConnection = [self createPeerConnection];<br>    &#125;<br>&#125;<br><br>- (void) otherjoin:(NSString *)room User:(NSString *)uid &#123;<br>    NSLog(@&quot;other user(%@) has been joined into room(%@) notify!&quot;, uid, room);<br>    [self addLogToScreen: @&quot;other user(%@) has been joined into room(%@) notify!&quot;, uid, room];<br>    if([myState isEqualToString:@&quot;joined_unbind&quot;])&#123;<br>        if (!peerConnection) &#123;<br>            peerConnection = [self createPeerConnection];<br>        &#125;<br>    &#125;<br>    <br>    myState =@&quot;joined_conn&quot;;<br>    //调用call， 进行媒体协商<br>    [self doStartCall];<br>    <br>&#125;<br><br>- (void) full:(NSString *)room &#123;<br>    NSLog(@&quot;the room(%@) is full notify!&quot;, room);<br>    [self addLogToScreen: @&quot;the room(%@) is full notify!&quot;, room];<br>    myState = @&quot;leaved&quot;;<br>    <br>    if(peerConnection) &#123;<br>        [peerConnection close];<br>        peerConnection = nil;<br>    &#125;<br>    <br>    //弹出提醒添加成功<br>    MBProgressHUD *hud= [[MBProgressHUD alloc] initWithView:self.view];<br>    [hud setRemoveFromSuperViewOnHide:YES];<br>    hud.label.text = @&quot;房间已满&quot;;<br>    UIView* view = [[UIView alloc] initWithFrame:CGRectMake(0,0, 50, 50)];<br>    [hud setCustomView:view];<br>    [hud setMode:MBProgressHUDModeCustomView];<br>    [self.view addSubview:hud];<br>    [hud showAnimated:YES];<br>    [hud hideAnimated:YES afterDelay:1.0]; //设置1秒钟后自动消失<br>    <br>    if(self.localVideoView) &#123;<br>        //[self.localVideoView removeFromSuperview];<br>        //self.localVideoView = nil;<br>    &#125;<br>    <br>    if(self.remoteVideoView) &#123;<br>        //[self.localVideoView removeFromSuperview];<br>        //self.remoteVideoView = nil;<br>    &#125;<br>    <br>    if(capture) &#123;<br>        [capture stopCapture];<br>        capture = nil;<br>    &#125;<br>    <br>    if(factory) &#123;<br>        factory = nil;<br>    &#125;<br>&#125;<br><br>- (void) byeFrom:(NSString *)room User:(NSString *)uid &#123;<br>    NSLog(@&quot;the user(%@) has leaved from room(%@) notify!&quot;, uid, room);<br>    [self addLogToScreen: @&quot;the user(%@) has leaved from room(%@) notify!&quot;, uid, room];<br>    myState = @&quot;joined_unbind&quot;;<br>    <br>    [peerConnection close];<br>    peerConnection = nil;<br>    <br>&#125;<br><br>- (void)answer:(NSString *)room message:(NSDictionary *)dict &#123;<br>    NSLog(@&quot;have received a answer message %@&quot;, dict);<br>    <br>    NSString *remoteAnswerSdp = dict[@&quot;sdp&quot;];<br>    RTCSessionDescription *remoteSdp = [[RTCSessionDescription alloc]<br>                                           initWithType:RTCSdpTypeAnswer<br>                                                    sdp: remoteAnswerSdp];<br>    [peerConnection setRemoteDescription:remoteSdp<br>                       completionHandler:^(NSError * _Nullable error) &#123;<br>        if(!error)&#123;<br>            NSLog(@&quot;Success to set remote Answer SDP&quot;);<br>        &#125;else&#123;<br>            NSLog(@&quot;Failure to set remote Answer SDP, err=%@&quot;, error);<br>        &#125;<br>    &#125;];<br>&#125;<br><br>- (void) setLocalAnswer: (RTCPeerConnection*)pc withSdp: (RTCSessionDescription*)sdp &#123;<br>    <br>    [pc setLocalDescription:sdp completionHandler:^(NSError * _Nullable error) &#123;<br>        if(!error)&#123;<br>            NSLog(@&quot;Successed to set local answer!&quot;);<br>        &#125;else &#123;<br>            NSLog(@&quot;Failed to set local answer, err=%@&quot;, error);<br>        &#125;<br>    &#125;];<br>    <br>    __weak NSString* weakMyRoom = myRoom;<br>    dispatch_async(dispatch_get_main_queue(), ^&#123;<br>        <br>        //send answer sdp<br>        NSDictionary* dict = [[NSDictionary alloc] initWithObjects:@[@&quot;answer&quot;, sdp.sdp]<br>                                                           forKeys: @[@&quot;type&quot;, @&quot;sdp&quot;]];<br>        <br>        [[SignalClient getInstance] sendMessage: weakMyRoom withMsg:dict];<br>    &#125;);<br>&#125;<br><br>- (void) getAnswer:(RTCPeerConnection*) pc &#123;<br>    <br>    NSLog(@&quot;Success to set remote offer SDP&quot;);<br>    <br>    [pc answerForConstraints:[self defaultPeerConnContraints]<br>                           completionHandler:^(RTCSessionDescription * _Nullable sdp, NSError * _Nullable error) &#123;<br>                               if(!error)&#123;<br>                                   NSLog(@&quot;Success to create local answer sdp!&quot;);<br>                                   __weak RTCPeerConnection* weakPeerConn = pc;<br>                                   [self setLocalAnswer:weakPeerConn withSdp:sdp];<br>                                   <br>                               &#125;else&#123;<br>                                   NSLog(@&quot;Failure to create local answer sdp!&quot;);<br>                               &#125;<br>                           &#125;];<br>&#125;<br><br>- (void) offer:(NSString *)room message:(NSDictionary *)dict &#123;<br>    NSLog(@&quot;have received a offer message %@&quot;, dict);<br>    <br>    NSString* remoteOfferSdp = dict[@&quot;sdp&quot;];<br>    RTCSessionDescription* remoteSdp = [[RTCSessionDescription alloc]<br>                                        initWithType:RTCSdpTypeOffer<br>                                        sdp: remoteOfferSdp];<br>    if(!peerConnection)&#123;<br>        peerConnection = [self createPeerConnection];<br>    &#125;<br>    <br>     __weak RTCPeerConnection* weakPeerConnection = peerConnection;<br>    [weakPeerConnection setRemoteDescription:remoteSdp completionHandler:^(NSError * _Nullable error) &#123;<br>        if(!error)&#123;<br>            [self getAnswer: weakPeerConnection];<br>        &#125;else&#123;<br>            NSLog(@&quot;Failure to set remote offer SDP, err=%@&quot;, error);<br>        &#125;<br>    &#125;];<br>&#125;<br><br>- (void)candidate:(NSString *)room message:(NSDictionary *)dict &#123;<br>    NSLog(@&quot;have received a message %@&quot;, dict);<br>    <br>    NSString* desc = dict[@&quot;sdp&quot;];<br>    NSString* sdpMLineIndex = dict[@&quot;label&quot;];<br>    int index = [sdpMLineIndex intValue];<br>    NSString* sdpMid = dict[@&quot;id&quot;];<br>    <br>    <br>    RTCIceCandidate *candidate = [[RTCIceCandidate alloc] initWithSdp:desc<br>                                                        sdpMLineIndex:index<br>                                                               sdpMid:sdpMid];;<br>    [peerConnection addIceCandidate:candidate];<br>&#125;<br><br>- (void)connected &#123;<br>    [[SignalClient getInstance]  joinRoom: myRoom];<br>    [self addLogToScreen: @&quot;socket connect success!&quot;];<br>    [self addLogToScreen: @&quot;joinRoom: %@&quot;, myRoom];<br>    <br><br>&#125;<br><br>- (void)connect_error &#123;<br>    //todo: notfiy UI<br>    [self addLogToScreen: @&quot;socket connect_error!&quot;];<br>&#125;<br><br>- (void)connect_timeout &#123;<br>    //todo: notfiy UI<br>    [self addLogToScreen: @&quot;socket connect_timeout!&quot;];<br>&#125;<br><br>- (void) reconnectAttempt&#123;<br>    [self addLogToScreen: @&quot;socket reconnectAttempt!&quot;];<br>&#125;<br>#pragma mark RTCPeerConnectionDelegate<br><br>/** Called when the SignalingState changed. */<br>- (void)peerConnection:(RTCPeerConnection *)peerConnection<br>didChangeSignalingState:(RTCSignalingState)stateChanged&#123;<br>    NSLog(@&quot;%s&quot;,__func__);<br>&#125;<br><br>/** Called when media is received on a new stream from remote peer. */<br>- (void)peerConnection:(RTCPeerConnection *)peerConnection didAddStream:(RTCMediaStream *)stream&#123;<br>    NSLog(@&quot;%s&quot;,__func__);<br>&#125;<br><br>/** Called when a remote peer closes a stream.<br> *  This is not called when RTCSdpSemanticsUnifiedPlan is specified.<br> */<br>- (void)peerConnection:(RTCPeerConnection *)peerConnection didRemoveStream:(RTCMediaStream *)stream&#123;<br>     NSLog(@&quot;%s&quot;,__func__);<br>&#125;<br><br>/** Called when negotiation is needed, for example ICE has restarted. */<br>- (void)peerConnectionShouldNegotiate:(RTCPeerConnection *)peerConnection &#123;<br>    NSLog(@&quot;%s&quot;,__func__);<br>&#125;<br><br>/** Called any time the IceConnectionState changes. */<br>- (void)peerConnection:(RTCPeerConnection *)peerConnection<br>didChangeIceConnectionState:(RTCIceConnectionState)newState&#123;<br>    NSLog(@&quot;%s&quot;,__func__);<br>&#125;<br><br>/** Called any time the IceGatheringState changes. */<br>- (void)peerConnection:(RTCPeerConnection *)peerConnection<br>didChangeIceGatheringState:(RTCIceGatheringState)newState&#123;<br>    NSLog(@&quot;%s&quot;,__func__);<br>&#125;<br><br>/** New ice candidate has been found. */<br>- (void)peerConnection:(RTCPeerConnection *)peerConnection<br>didGenerateIceCandidate:(RTCIceCandidate *)candidate&#123;<br>    NSLog(@&quot;%s&quot;,__func__);<br>    <br>    NSString* weakMyRoom = myRoom;<br>    dispatch_async(dispatch_get_main_queue(), ^&#123;<br>    <br>        NSDictionary* dict = [[NSDictionary alloc] initWithObjects:@[@&quot;candidate&quot;,<br>                                                                [NSString stringWithFormat:@&quot;%d&quot;, candidate.sdpMLineIndex],<br>                                                                candidate.sdpMid,<br>                                                                candidate.sdp]<br>                                                           forKeys:@[@&quot;type&quot;, @&quot;label&quot;, @&quot;id&quot;, @&quot;candidate&quot;]];<br>    <br>        [[SignalClient getInstance] sendMessage: weakMyRoom<br>                                    withMsg:dict];<br>    &#125;);<br>&#125;<br><br>/** Called when a group of local Ice candidates have been removed. */<br>- (void)peerConnection:(RTCPeerConnection *)peerConnection<br>didRemoveIceCandidates:(NSArray&lt;RTCIceCandidate *&gt; *)candidates &#123;<br>    NSLog(@&quot;%s&quot;,__func__);<br>&#125;<br><br>/** New data channel has been opened. */<br>- (void)peerConnection:(RTCPeerConnection *)peerConnection<br>    didOpenDataChannel:(RTCDataChannel *)dataChannel &#123;<br>    NSLog(@&quot;%s&quot;,__func__);<br>&#125;<br><br>/** Called when a receiver and its track are created. */<br>- (void)peerConnection:(RTCPeerConnection *)peerConnection<br>        didAddReceiver:(RTCRtpReceiver *)rtpReceiver<br>               streams:(NSArray&lt;RTCMediaStream *&gt; *)mediaStreams &#123;<br>    NSLog(@&quot;%s&quot;,__func__);<br>    <br>    RTCMediaStreamTrack* track = rtpReceiver.track;<br>    if([track.kind isEqualToString:kRTCMediaStreamTrackKindVideo])&#123;<br>        if(!self.remoteVideoView)&#123;<br>            NSLog(@&quot;error:remoteVideoView have not been created!&quot;);<br>            return;<br>        &#125;<br>        <br>        remoteVideoTrack = (RTCVideoTrack*)track;<br>        <br>        //dispatch_async(dispatch_get_main_queue(), ^&#123;<br><br>            [remoteVideoTrack addRenderer: self.remoteVideoView];<br>        //&#125;);<br>        //[remoteVideoTrack setIsEnabled:true];<br>        <br>        //[self.view addSubview:self.remoteVideoView];<br>    &#125;<br>    <br>&#125;<br><br>#pragma mark webrtc<br><br><br>- (RTCMediaConstraints*) defaultPeerConnContraints &#123;<br>    RTCMediaConstraints* mediaConstraints =<br>    [[RTCMediaConstraints alloc] initWithMandatoryConstraints:@&#123;<br>                                                                kRTCMediaConstraintsOfferToReceiveAudio:kRTCMediaConstraintsValueTrue,<br>                                                                kRTCMediaConstraintsOfferToReceiveVideo:kRTCMediaConstraintsValueTrue<br>                                                                &#125;<br>                                          optionalConstraints:@&#123; @&quot;DtlsSrtpKeyAgreement&quot; : @&quot;true&quot; &#125;];<br>    return mediaConstraints;<br>&#125;<br><br><br>- (void)captureLocalMedia &#123;<br>    NSDictionary* mandatoryConstraints = @&#123;&#125;;<br>    RTCMediaConstraints* constraints =<br>    [[RTCMediaConstraints alloc] initWithMandatoryConstraints:mandatoryConstraints<br>                                          optionalConstraints:nil];<br>    <br>    RTCAudioSource* audioSource = [factory audioSourceWithConstraints: constraints];<br>    //self.audioTrack = [factory audioTrackWithTrackId:@&quot;ARDAMSa0&quot;];<br>    audioTrack = [factory audioTrackWithSource:audioSource trackId:@&quot;ADRAMSa0&quot;];<br>    <br>    NSArray&lt;AVCaptureDevice* &gt;* captureDevices = [RTCCameraVideoCapturer captureDevices];<br>    AVCaptureDevicePosition position = AVCaptureDevicePositionFront;<br>    AVCaptureDevice* device = captureDevices[0];<br>    for (AVCaptureDevice* obj in captureDevices) &#123;<br>        if (obj.position == position) &#123;<br>            device = obj;<br>            break;<br>        &#125;<br>    &#125;<br>    <br>    //检测摄像头权限<br>    AVAuthorizationStatus authStatus = [AVCaptureDevice authorizationStatusForMediaType:AVMediaTypeVideo];<br>    if(authStatus == AVAuthorizationStatusRestricted || authStatus == AVAuthorizationStatusDenied) &#123;<br>        NSLog(@&quot;相机访问受限&quot;);<br>        return;<br>    &#125;<br>    <br>    if (device) &#123;<br>        RTCVideoSource* videoSource = [factory videoSource];<br>        capture = [[RTCCameraVideoCapturer alloc] initWithDelegate:videoSource];<br>        AVCaptureDeviceFormat* format = [[RTCCameraVideoCapturer supportedFormatsForDevice:device] lastObject];<br>        CGFloat fps = [[format videoSupportedFrameRateRanges] firstObject].maxFrameRate;<br>        videoTrack = [factory videoTrackWithSource:videoSource trackId:@&quot;ARDAMSv0&quot;];<br>        self.localVideoView.captureSession = capture.captureSession;<br>        [capture startCaptureWithDevice:device<br>                                     format:format<br>                                        fps:fps];<br>        <br>    &#125;<br>&#125;<br><br>//初始化STUN Server （ICE Server）<br>- (RTCIceServer *)defaultSTUNServer &#123;<br>    return [[RTCIceServer alloc] initWithURLStrings:@[RTCSTUNServerURL]<br>                                           username:@&quot;carrot&quot;<br>                                         credential:@&quot;123456&quot;];<br>&#125;<br><br>- (void)createPeerConnectionFactory &#123;<br>    //设置SSL传输<br>    [RTCPeerConnectionFactory initialize];<br>    <br>    //如果点对点工厂为空<br>    if (!factory)<br>    &#123;<br>        RTCDefaultVideoDecoderFactory* decoderFactory = [[RTCDefaultVideoDecoderFactory alloc] init];<br>        RTCDefaultVideoEncoderFactory* encoderFactory = [[RTCDefaultVideoEncoderFactory alloc] init];<br>        NSArray* codecs = [encoderFactory supportedCodecs];<br>        [encoderFactory setPreferredCodec:codecs[2]];<br>        <br>        factory = [[RTCPeerConnectionFactory alloc] initWithEncoderFactory: encoderFactory<br>                                                            decoderFactory: decoderFactory];<br>    &#125;<br>&#125;<br><br>- (RTCPeerConnection *)createPeerConnection &#123;<br>    //得到ICEServer<br>    if (!ICEServers) &#123;<br>        ICEServers = [NSMutableArray array];<br>        [ICEServers addObject:[self defaultSTUNServer]];<br>    &#125;<br><br>    //用工厂来创建连接<br>    RTCConfiguration* configuration = [[RTCConfiguration alloc] init];<br>    [configuration setIceServers:ICEServers];<br>    RTCPeerConnection* conn = [factory<br>                                     peerConnectionWithConfiguration:configuration<br>                                                         constraints:[self defaultPeerConnContraints]<br>                                                            delegate:self];<br>    <br>    NSArray&lt;NSString*&gt;* mediaStreamLabels = @[@&quot;ARDAMS&quot;];<br>    [conn addTrack:videoTrack streamIds:mediaStreamLabels];<br>    [conn addTrack:audioTrack streamIds:mediaStreamLabels];<br><br>    return conn;<br>&#125;<br><br>- (void)setLocalOffer:(RTCPeerConnection*)pc withSdp:(RTCSessionDescription*) sdp&#123;<br>    <br>    [pc setLocalDescription:sdp completionHandler:^(NSError * _Nullable error) &#123;<br>        if (!error) &#123;<br>            NSLog(@&quot;Successed to set local offer sdp!&quot;);<br>        &#125;else&#123;<br>            NSLog(@&quot;Failed to set local offer sdp, err=%@&quot;, error);<br>        &#125;<br>    &#125;];<br>    <br>    __weak NSString* weakMyRoom = myRoom;<br>    dispatch_async(dispatch_get_main_queue(), ^&#123;<br>        <br>        NSDictionary* dict = [[NSDictionary alloc] initWithObjects:@[@&quot;offer&quot;, sdp.sdp]<br>                                                           forKeys: @[@&quot;type&quot;, @&quot;sdp&quot;]];<br>        <br>        [[SignalClient getInstance] sendMessage: weakMyRoom<br>                                        withMsg: dict];<br>    &#125;);<br>&#125;<br><br>- (void)doStartCall &#123;<br>    NSLog(@&quot;Start Call, Wait ...&quot;);<br>    [self addLogToScreen: @&quot;Start Call, Wait ...&quot;];<br>    if (!peerConnection) &#123;<br>        peerConnection = [self createPeerConnection];<br>    &#125;<br>    <br>    [peerConnection offerForConstraints:[self defaultPeerConnContraints]<br>                      completionHandler:^(RTCSessionDescription * _Nullable sdp, NSError * _Nullable error) &#123;<br>                          if(error)&#123;<br>                              NSLog(@&quot;Failed to create offer SDP, err=%@&quot;, error);<br>                          &#125; else &#123;<br>                              __weak RTCPeerConnection* weakPeerConnction = self-&gt;peerConnection;<br>                              [self setLocalOffer: weakPeerConnction withSdp: sdp];<br>                          &#125;<br>                      &#125;];<br>&#125;<br><br>#pragma mark - RTCEAGLVideoViewDelegate<br>- (void)videoView:(RTCEAGLVideoView*)videoView didChangeVideoSize:(CGSize)size &#123;<br>    if (videoView == self.remoteVideoView) &#123;<br>        remoteVideoSize = size;<br>    &#125;<br>    [self layoutSubviews];<br>&#125;<br><br>@end<br><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>WebRTC入门</category>
      
    </categories>
    
    
    <tags>
      
      <tag>音视频</tag>
      
      <tag>WebRTC</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>day12-coTurn服务器搭建</title>
    <link href="/2022/06/26/WebRTC%E5%85%A5%E9%97%A8/day12coTurn%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%90%AD%E5%BB%BA/"/>
    <url>/2022/06/26/WebRTC%E5%85%A5%E9%97%A8/day12coTurn%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%90%AD%E5%BB%BA/</url>
    
    <content type="html"><![CDATA[<h1 id="一、阿里云服务器环境搭建"><a href="#一、阿里云服务器环境搭建" class="headerlink" title="一、阿里云服务器环境搭建"></a>一、阿里云服务器环境搭建</h1><p><strong>前言：</strong></p><p><strong>涉及WebRTC内容，绕不开搭建ICE服务器，网上搜索教程无数，没有一个能从头到尾顺利搭建成功，网页开了无数个，进度却原地踏步，欲哭无泪。跟着网上的教程，大多会卡在turnserver.conf配置文件的编辑上，错误的配置文件往往会导致服务器开启失败。</strong></p><p><strong>总结一份服务器安装步骤，故在此留档，以利后人！</strong></p><p><strong>如果你卡在配置文件这一块，请直接跳到第三部分，如果你进度颇浅，直接按照我的步骤来一遍吧，让你感到无比丝滑。</strong></p><p><strong>另外，要注意的是，在本地的虚拟机上搭建coturn服务器是行不通的，必须要在公网服务器上搭建。</strong></p><h4 id="1、准备步骤"><a href="#1、准备步骤" class="headerlink" title="1、准备步骤"></a>1、准备步骤</h4><p>准备一台阿里云服务器 系统为 linux centos7.4 打开3478端口，以及一些必要的端口</p><p>阿里云服务器公网地址：<code>120.77.170.59</code>  内网地址：<code>172.30.124.174</code></p><p>主机名称随便取，主机是公网ip地址，端口随便选择，但要在阿里云控制台开放该端口，如果没有登陆上，就去网页端的阿里云服务器先登录一遍。）</p><p>首先安装各种依赖和软件</p><figure class="highlight javascript"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></div></td><td class="code"><pre><code class="hljs javascript">yum install git<br>yum install gcc<br>yum install gcc-c++<br>yum install openssl<br>yum install openssl-devel<br>yum install libevent-devel<br></code></pre></td></tr></table></figure><p>遇到的所有选项都选y，一路y下去，</p><p>安装完毕后</p><h3 id="2、手动下载并安装-libevent2"><a href="#2、手动下载并安装-libevent2" class="headerlink" title="2、手动下载并安装 libevent2"></a>2、手动下载并安装 <code>libevent2</code></h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell">wget https://github.com/downloads/libevent/libevent/libevent-2.0.21-stable.tar.gz<br>tar zxvf libevent-2.0.21-stable.tar.gz<br>cd libevent-2.0.21-stable &amp;&amp; ./configure<br>make &amp;&amp; make install<br></code></pre></td></tr></table></figure><h2 id="二、Coturn服务器搭建步骤"><a href="#二、Coturn服务器搭建步骤" class="headerlink" title="二、Coturn服务器搭建步骤"></a>二、Coturn服务器搭建步骤</h2><h3 id="1、下载并安装-coturn"><a href="#1、下载并安装-coturn" class="headerlink" title="1、下载并安装 coturn"></a>1、下载并安装 coturn</h3><p>准备安装coturn包。注意，不要直接git clone coturn，会出现编译错误</p><p>此处安装稳定的版本，下载压缩包</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs javascript">wget <span class="hljs-attr">https</span>:<span class="hljs-comment">//github.com/coturn/coturn/archive/4.5.1.1.tar.gz</span><br></code></pre></td></tr></table></figure><p>然后进行解压，编译，依次执行</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs javascript">tar -zxvf <span class="hljs-number">4.5</span><span class="hljs-number">.1</span><span class="hljs-number">.1</span>.<span class="hljs-property">tar</span>.<span class="hljs-property">gz</span><br>cd coturn-<span class="hljs-number">4.5</span><span class="hljs-number">.1</span><span class="hljs-number">.1</span><br>./configure<br>make<br>make install<br></code></pre></td></tr></table></figure><p>注意，如果cd coturn-4.5.1.1找不到文件夹的话，一般安装包的默认安装位置在阿里云的&#x2F;usr&#x2F;local目录下，切换到该目录下继续执行操作即可</p><p>如果成功了，可以通过which turnserver验证。如果出现路径即为成功，默认路径为</p><img src="/2022/06/26/WebRTC%E5%85%A5%E9%97%A8/day12coTurn%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%90%AD%E5%BB%BA/8c0d35cf0a4ae8fe93cddd31d0121f68bf9d1eda.png@876w_99h_progressive.webp" class="" title="img">turnserver所在的默认路径，之后到该路径下开启服务<h3 id="2、配置文件"><a href="#2、配置文件" class="headerlink" title="2、配置文件"></a>2、配置文件</h3><p>然后进入文件夹：</p><p>cd &#x2F;usr&#x2F;local&#x2F;etc&#x2F;</p><p>输入命令ll</p><p>会看到一个叫做 turnserver.conf.default的配置文件。</p><p>通过命令将它备份：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs javascript">cp turnserver.<span class="hljs-property">conf</span>.<span class="hljs-property">default</span> turnserver.<span class="hljs-property">conf</span><br></code></pre></td></tr></table></figure><p>然后通过命令在当前文件夹生成签名证书（此步似乎可以不用，因为在配置文件中并未用到，不过也可以做一下，以防万一）</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs javascript">openssl req -x509 -newkey <span class="hljs-attr">rsa</span>:<span class="hljs-number">2048</span> -keyout /usr/local/etc/turn_server_pkey.<span class="hljs-property">pem</span> -out /usr/local/etc/turn_server_cert.<span class="hljs-property">pem</span> -days <span class="hljs-number">99999</span> -nodes<br></code></pre></td></tr></table></figure><p>生成证书的时候会让填写国家地区等一些信息，可以随便填写，</p><p>第一个country name填写cn</p><p>state or province 填写sichuang</p><p>Locality name填写chengdu</p><p>剩下的随便填，可以都填no，邮箱随便填一个</p><p>完成后，可以在当前文件夹下看到turn_server_cert.pem和turn_server_pkey.pem两个文件。</p><p>然后在当前文件夹下，通过命令创建一个文件turnuserdb.conf用于存储用户名和信息</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs javascript">cp turnserver.<span class="hljs-property">conf</span>.<span class="hljs-property">default</span> turnuserdb.<span class="hljs-property">conf</span><br></code></pre></td></tr></table></figure><p>此时整个文件夹中的文件构成为下图所示</p><img src="/2022/06/26/WebRTC%E5%85%A5%E9%97%A8/day12coTurn%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%90%AD%E5%BB%BA/4ae187ebbe5cac79057e791909a7afb8157bac3d.png@857w_273h_progressive.webp" class="" title="img">文件夹的内容构成<h3 id="3、编辑文件"><a href="#3、编辑文件" class="headerlink" title="3、编辑文件"></a>3、编辑文件</h3><p>首先，ipconfig看一下网卡信息，我的阿里云主机网卡是eth0，记住网卡类型。（部分教程的配置文件中要填写网卡信息，本文总结的配置文件中并不需要填写网卡信息）</p><p>然后，用命令生成账号密码的md5码，标红的部分分别对应用户名 地区 密码 ，可以自行修改。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs javascript">turnadmin -k -u carrot -p <span class="hljs-number">123456</span> -r carrtRealm<br></code></pre></td></tr></table></figure><p>命令执行后会生成一段md5码，记得复制下来！</p><p>然后，在finalshell软件的下方，依次选择路径usr&#x2F;local&#x2F;etc，可以看到当前文件夹中已经存在如下文件。直接双击文件就可以打开进行编辑</p><img src="/2022/06/26/WebRTC%E5%85%A5%E9%97%A8/day12coTurn%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%90%AD%E5%BB%BA/eb74eeb8f59d606cb05e5380a310c6690a5746d1.png@942w_255h_progressive.webp" class="" title="img">finalshell界面<p>首先我们双击turnuserdb.conf文件，在其中填入用户名和刚才生成的md5码并保存。</p><img src="/2022/06/26/WebRTC%E5%85%A5%E9%97%A8/day12coTurn%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%90%AD%E5%BB%BA/e0dded2a03b462b29236fa89e0511df4382246b2.png@909w_303h_progressive.webp" class="" title="img"><p>然后到了最重要的一步，网上查找的大部分教程都有错误，经过总结，按照如下的配置文件进行配置，才能真正开启服务并不报错！</p><p>我们对配置文件turnserver.conf进行编辑，双击打开文件，输入如下的配置信息</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs javascript">#中继服务器监听的<span class="hljs-variable constant_">IP</span>地址，<span class="hljs-variable constant_">NAT</span>环境下直接写私网<span class="hljs-variable constant_">IP</span>地址，可以指定多个<span class="hljs-variable constant_">IP</span><br>listening-ip=<span class="hljs-number">172.30</span><span class="hljs-number">.124</span><span class="hljs-number">.174</span><br>#中继服务器转发地址(本地<span class="hljs-variable constant_">IP</span>地址将用于传递数据包的给每个端)，和监听地址一样<br>#relay-ip=<span class="hljs-number">120.77</span><span class="hljs-number">.170</span><span class="hljs-number">.59</span><br>#外部<span class="hljs-variable constant_">IP</span>,<span class="hljs-variable constant_">NAT</span>环境下直接写：公网<span class="hljs-variable constant_">IP</span>/私网<span class="hljs-variable constant_">IP</span><br>external-ip=<span class="hljs-number">120.77</span><span class="hljs-number">.170</span><span class="hljs-number">.59</span>/<span class="hljs-number">172.30</span><span class="hljs-number">.124</span><span class="hljs-number">.174</span><br>#cli-password=<span class="hljs-number">123456</span><br>#打开fingerprint的注释，使用长期证书机制。<br>fingerprint<br>#打开密码验证，使用短期证书机制。<br>lt-cred-mech<br>#服务器名称,用于<span class="hljs-title class_">OAuth</span>认证,默认和realm相同,直接填公网ip.部分浏览器本段不设可能会引发cors错误。<br>server-name=<span class="hljs-number">120.77</span><span class="hljs-number">.170</span><span class="hljs-number">.59</span><br># <span class="hljs-variable constant_">TURN</span> <span class="hljs-variable constant_">REST</span> <span class="hljs-variable constant_">API</span>的长期凭证机制范围，同样设为ip,同server-name.<br>realm=<span class="hljs-number">120.77</span><span class="hljs-number">.170</span><span class="hljs-number">.59</span><br>#移动的<span class="hljs-title function_">ICE</span>(<span class="hljs-variable constant_">MICE</span>)的规范支持。<br>mobility<br>#快捷的添加用户是使用user=<span class="hljs-attr">XXX</span>:<span class="hljs-variable constant_">XXXX</span>的方式，可以添加多个。/<span class="hljs-keyword">var</span>/db/turndb也工作，可以使用turnadmin来管理其中用户，可以添加多个。<br>user=<span class="hljs-attr">demo</span>:<span class="hljs-number">123456</span><br>#你设置的密码（防止报错警告）<br>cli-password=<span class="hljs-number">123456</span><br></code></pre></td></tr></table></figure><p>保存文件后，我们到usr&#x2F;local&#x2F;bin文件夹下，通过如下命令开启服务</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs javascript">cd /usr/local/bin<br>turnserver -v -r <span class="hljs-number">120.77</span><span class="hljs-number">.170</span><span class="hljs-number">.59</span>:<span class="hljs-number">3478</span> -a -o<br></code></pre></td></tr></table></figure><p>或者通过这条命令开启服务（下面这条命令指定了配置文件，上面的命令应该是默认定位到了我们的配置文件处，如果有修改配置文件位置的话，可以用如下命令，经测试，这两条命令都可以成功打开服务）</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs javascript">turnserver -v -r 你的公网<span class="hljs-attr">ip</span>:<span class="hljs-number">3478</span> -a -o -c /usr/local/etc/turnserver.<span class="hljs-property">conf</span><br></code></pre></td></tr></table></figure><p>服务开启后，窗口中如下显示则代表服务开启成功</p><img src="/2022/06/26/WebRTC%E5%85%A5%E9%97%A8/day12coTurn%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%90%AD%E5%BB%BA/2332bef790237e7668d4b4d7d699f3950dd10a2f.png@942w_840h_progressive.webp" class="" title="img">如图所示表示服务开启成功<p>上图中有一处显示config error的地方，但经过测试，这个error并不影响turnserver服务的正确开启，如果想要消去这条error信息，只需要在上文的turnserver.conf配置文件中加上如下一句即可去掉error报错。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs javascript">cli-password=<span class="hljs-number">123456</span>（你设置的密码）<br></code></pre></td></tr></table></figure><h3 id="4、测试coturn服务"><a href="#4、测试coturn服务" class="headerlink" title="4、测试coturn服务"></a>4、测试coturn服务</h3><p>接下来我们要测试开启的turnserver服务器能否起作用，我们到测试网址：<a href="https://webrtc.github.io/samples/src/content/peerconnection/trickle-ice/">https://webrtc.github.io/samples/src/content/peerconnection/trickle-ice/</a></p><p>去进行测试，这里建议用火狐浏览器访问网址进行测试，chrome浏览器可能会出错</p><p>打开网址后，我们可以看到如下页面，按图中形式填写信息</p><p>第一栏是 turn:公网ip:端口号 （经测试，如果不填端口号，默认是3478端口）</p><p>第二栏是 之前设置的用户名</p><p>第三栏是 之前设置的密码</p><p>然后点击Add Server</p><img src="/2022/06/26/WebRTC%E5%85%A5%E9%97%A8/day12coTurn%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%90%AD%E5%BB%BA/ff5daf380e600ea6c627178aac259edcae264270.png@942w_674h_progressive.webp" class="" title="img">turn服务器信息填写<p>然后我们点击页面下方的gather candidates按钮</p><img src="/2022/06/26/WebRTC%E5%85%A5%E9%97%A8/day12coTurn%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%90%AD%E5%BB%BA/96ce92b6a7153ccb8319c5756673a3c6694d9ec6.png@870w_422h_progressive.webp" class="" title="img">点这个按钮<p>如果服务器配置正确的话，很快就可以看到返回的信息，如下图所示</p><img src="/2022/06/26/WebRTC%E5%85%A5%E9%97%A8/day12coTurn%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%90%AD%E5%BB%BA/36a363f739d62917ad9e412c466a060292617c76.png@942w_255h_progressive.webp" class="" title="img">返回的结果<img src="/2022/06/26/WebRTC%E5%85%A5%E9%97%A8/day12coTurn%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%90%AD%E5%BB%BA/571f6ec806711b171c30dfff448c55d9b4cddc20.png@930w_368h_progressive.webp" class="" title="img"><p>可以看到我们的公网ip</p><p>我们可以看到，有我们服务器所在的公网地址120.77.170.59返回的信息，那就说明我们的服务器配置成功了，进行两台设备的直连时，能够通过turn服务器进行中转。如果没有我们公网IP地址，只显示done，并不代表成功。</p><p>如果要测试stun服务器，则按下图进行配置</p><img src="/2022/06/26/WebRTC%E5%85%A5%E9%97%A8/day12coTurn%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%90%AD%E5%BB%BA/6dd5c4f742072628a0bd87ca81c84bf66b0ec821.png@942w_668h_progressive.webp" class="" title="img">stun服务器的配置<p>有一种说法是由于stun服务器不承担转发的作用，所以可以不用输入用户名和密码信息，由于我的宿舍网络环境是对称性，无法验证stun服务器的作用情况，在此不做结果展示。但是可以推断，turn服务器成功验证的情况下，stun服务器应该同样能够生效。</p><h3 id="5、总结"><a href="#5、总结" class="headerlink" title="5、总结"></a>5、总结</h3><p>至此，我们已经开启了turnserver服务，turnserver服务是在后台默认开启的，如果重复执行开启服务的命令，会造成多个turnserver服务在后台一起打开，用如下命令可以查看服务是否在后台运行</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs javascript">ps -ef|grep turnserver<br></code></pre></td></tr></table></figure><p>如果有多个turnserver服务同时在后台开启，可以用如下命令杀掉所有turnserver服务</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs javascript">killall turnserver<br></code></pre></td></tr></table></figure><p>一般情况下turnserver服务一直会在后台保持，如果不用了记得杀掉服务。</p><h3 id="6、Ubuntu14安装coturn参考"><a href="#6、Ubuntu14安装coturn参考" class="headerlink" title="6、Ubuntu14安装coturn参考"></a>6、Ubuntu14安装coturn参考</h3><p><a href="https://blog.csdn.net/tanyhuan/article/details/77265349">https://blog.csdn.net/tanyhuan/article/details/77265349</a></p><h3 id="7、一些有用的参考文章"><a href="#7、一些有用的参考文章" class="headerlink" title="7、一些有用的参考文章"></a>7、一些有用的参考文章</h3><p><a href="https://www.jianshu.com/p/915eab39476d">https://www.jianshu.com/p/915eab39476d</a></p><p><a href="https://www.jianshu.com/p/5543dd3e002b">https://www.jianshu.com/p/5543dd3e002b</a></p><p><a href="https://www.jianshu.com/p/d65e369f44fb">https://www.jianshu.com/p/d65e369f44fb</a></p><p><a href="https://blog.csdn.net/ZSH1205209422/article/details/106637977">https://blog.csdn.net/ZSH1205209422/article/details/106637977</a></p><p><a href="https://blog.csdn.net/qq_16042523/article/details/52994785">https://blog.csdn.net/qq_16042523/article/details/52994785</a></p>]]></content>
    
    
    <categories>
      
      <category>WebRTC入门</category>
      
    </categories>
    
    
    <tags>
      
      <tag>音视频</tag>
      
      <tag>WebRTC</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>day12-实现1v1音视频互动直播系统</title>
    <link href="/2022/06/25/WebRTC%E5%85%A5%E9%97%A8/day12%E5%AE%9E%E7%8E%B01v1%E9%9F%B3%E8%A7%86%E9%A2%91%E4%BA%92%E5%8A%A8%E7%9B%B4%E6%92%AD%E7%B3%BB%E7%BB%9F/"/>
    <url>/2022/06/25/WebRTC%E5%85%A5%E9%97%A8/day12%E5%AE%9E%E7%8E%B01v1%E9%9F%B3%E8%A7%86%E9%A2%91%E4%BA%92%E5%8A%A8%E7%9B%B4%E6%92%AD%E7%B3%BB%E7%BB%9F/</url>
    
    <content type="html"><![CDATA[<h2 id="一、核心思想"><a href="#一、核心思想" class="headerlink" title="一、核心思想"></a>一、核心思想</h2><h3 id="1、主要流程图（自己有空多绘制几遍）"><a href="#1、主要流程图（自己有空多绘制几遍）" class="headerlink" title="1、主要流程图（自己有空多绘制几遍）"></a>1、主要流程图（自己有空多绘制几遍）</h3><img src="/2022/06/25/WebRTC%E5%85%A5%E9%97%A8/day12%E5%AE%9E%E7%8E%B01v1%E9%9F%B3%E8%A7%86%E9%A2%91%E4%BA%92%E5%8A%A8%E7%9B%B4%E6%92%AD%E7%B3%BB%E7%BB%9F/Image_20220701135914.png" class="" title="Image_20220701135914"><h2 id="二、核心代码"><a href="#二、核心代码" class="headerlink" title="二、核心代码"></a>二、核心代码</h2><h4 id="1、服务端信令服务器代码"><a href="#1、服务端信令服务器代码" class="headerlink" title="1、服务端信令服务器代码"></a>1、服务端信令服务器代码</h4><figure class="highlight javascript"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></div></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-meta">&#x27;use strict&#x27;</span><br><br><span class="hljs-keyword">var</span> http = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;http&#x27;</span>);<br><span class="hljs-keyword">var</span> serveIndex = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;serve-index&#x27;</span>);<br><span class="hljs-keyword">var</span> express = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;express&#x27;</span>);<br><span class="hljs-keyword">var</span> socketIo = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;socket.io&#x27;</span>);<br><br><span class="hljs-keyword">var</span> <span class="hljs-variable constant_">USERSCOUNT</span> = <span class="hljs-number">2</span>; <span class="hljs-comment">//房间人数上限</span><br><br><span class="hljs-keyword">var</span> app = <span class="hljs-title function_">express</span>();<br><span class="hljs-comment">//顺序不能换</span><br>app.<span class="hljs-title function_">use</span>(<span class="hljs-title function_">serveIndex</span>(<span class="hljs-string">&#x27;./public&#x27;</span>));<br>app.<span class="hljs-title function_">use</span>(express.<span class="hljs-title function_">static</span>(<span class="hljs-string">&#x27;./public&#x27;</span>));<br><br><span class="hljs-keyword">var</span> http_server = http.<span class="hljs-title function_">createServer</span>(app);<br>http_server.<span class="hljs-title function_">listen</span>(<span class="hljs-number">9980</span>, <span class="hljs-string">&#x27;127.0.0.1&#x27;</span>);<br><br><span class="hljs-comment">//绑定socket.io到http服务</span><br><span class="hljs-keyword">var</span> io = socketIo.<span class="hljs-title function_">listen</span>(http_server)<br><br>io.<span class="hljs-property">sockets</span>.<span class="hljs-title function_">on</span>(<span class="hljs-string">&#x27;connection&#x27;</span>, <span class="hljs-function">(<span class="hljs-params">socket</span>)=&gt;</span> &#123;<br>  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;有人发起了链接请求111&quot;</span>);<br>  <br>  socket.<span class="hljs-title function_">on</span>(<span class="hljs-string">&#x27;message&#x27;</span>, <span class="hljs-function">(<span class="hljs-params">room, data</span>)=&gt;</span> &#123;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;message&quot;</span> + room + data);<br>socket.<span class="hljs-title function_">to</span>(room).<span class="hljs-title function_">emit</span>(<span class="hljs-string">&#x27;message&#x27;</span>,room, data);<br>  &#125;);<br><br>  socket.<span class="hljs-title function_">on</span>(<span class="hljs-string">&#x27;join&#x27;</span>, <span class="hljs-function">(<span class="hljs-params">room</span>)=&gt;</span> &#123;<br>socket.<span class="hljs-title function_">join</span>(room);<br><span class="hljs-keyword">var</span> myRoom = io.<span class="hljs-property">sockets</span>.<span class="hljs-property">adapter</span>.<span class="hljs-property">rooms</span>[room];<br><span class="hljs-keyword">var</span> users = <span class="hljs-title class_">Object</span>.<span class="hljs-title function_">keys</span>(myRoom.<span class="hljs-property">sockets</span>).<span class="hljs-property">length</span>;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;join&quot;</span> + room);<br><br>    <span class="hljs-keyword">if</span> (users &lt;= <span class="hljs-variable constant_">USERSCOUNT</span>) &#123; <span class="hljs-comment">//房间人数未超过</span><br>      socket.<span class="hljs-title function_">emit</span>(<span class="hljs-string">&#x27;joined&#x27;</span>, room, socket.<span class="hljs-property">id</span>); <span class="hljs-comment">//给自己发</span><br>      <span class="hljs-keyword">if</span> (users &gt; <span class="hljs-number">1</span>) &#123; <span class="hljs-comment">//房间里面已经有其他人了</span><br>        socket.<span class="hljs-title function_">to</span>(room).<span class="hljs-title function_">emit</span>(<span class="hljs-string">&#x27;otherjoin&#x27;</span>, room); <span class="hljs-comment">//发给除自己之外，房间内的所有人</span><br>      &#125;<br>    &#125; <span class="hljs-keyword">else</span> &#123; <span class="hljs-comment">//超过2个人了</span><br>      socket.<span class="hljs-title function_">emit</span>(<span class="hljs-string">&#x27;full&#x27;</span>, room, socket.<span class="hljs-property">id</span>); <span class="hljs-comment">//给自己发</span><br>      socket.<span class="hljs-title function_">leave</span>(room);<br>    &#125;<br>  &#125;);<br><br>  socket.<span class="hljs-title function_">on</span>(<span class="hljs-string">&#x27;leave&#x27;</span>, <span class="hljs-function">(<span class="hljs-params">room</span>)=&gt;</span> &#123;<br><span class="hljs-keyword">var</span> myRoom = io.<span class="hljs-property">sockets</span>.<span class="hljs-property">adapter</span>.<span class="hljs-property">rooms</span>[room];<br><span class="hljs-keyword">var</span> users = <span class="hljs-title class_">Object</span>.<span class="hljs-title function_">keys</span>(myRoom.<span class="hljs-property">sockets</span>).<span class="hljs-property">length</span>;<br>socket.<span class="hljs-title function_">to</span>(room).<span class="hljs-title function_">emit</span>(<span class="hljs-string">&#x27;bye&#x27;</span>, room, socket.<span class="hljs-property">id</span>)<span class="hljs-comment">//房间内所有人,除自己外</span><br> socket.<span class="hljs-title function_">emit</span>(<span class="hljs-string">&#x27;leaved&#x27;</span>, room, socket.<span class="hljs-property">id</span>);<span class="hljs-comment">// 给自己发</span><br>    socket.<span class="hljs-title function_">leave</span>(room);<br>&#125;);<br>&#125;);<br><br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;webrtc服务启动成功&quot;</span>);<br><br><br></code></pre></td></tr></table></figure><h3 id="2、输入房间号代码"><a href="#2、输入房间号代码" class="headerlink" title="2、输入房间号代码"></a>2、输入房间号代码</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>really peer connection<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">link</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">&quot;stylesheet&quot;</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;./css/main.css&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">language</span>=<span class="hljs-string">&quot;javascript&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/javascript&quot;</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript"><span class="hljs-keyword">function</span> <span class="hljs-title function_">gotoNextPage</span>(<span class="hljs-params"></span>)&#123;</span><br><span class="language-javascript"><span class="hljs-keyword">var</span> roomid = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">querySelector</span>(<span class="hljs-string">&#x27;input#room&#x27;</span>);</span><br><span class="language-javascript"><span class="hljs-keyword">if</span>(roomid.<span class="hljs-property">value</span> === <span class="hljs-literal">null</span> || roomid.<span class="hljs-property">value</span> === <span class="hljs-string">&#x27;&#x27;</span>)&#123;</span><br><span class="language-javascript"><span class="hljs-title function_">alert</span>(<span class="hljs-string">&#x27;roomid is null&#x27;</span>);</span><br><span class="language-javascript">&#125;<span class="hljs-keyword">else</span> &#123;</span><br><span class="language-javascript"><span class="hljs-variable language_">window</span>.<span class="hljs-property">location</span>.<span class="hljs-property">href</span>=<span class="hljs-string">&quot;room.html?room=&quot;</span>+ roomid.<span class="hljs-property">value</span>;</span><br><span class="language-javascript">&#125;</span><br><span class="language-javascript">&#125;</span><br><span class="language-javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">table</span> <span class="hljs-attr">align</span>=<span class="hljs-string">&quot;center&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">tr</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">label</span>&gt;</span>roomid:<span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;input&quot;</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;room&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">tr</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">tr</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;join&quot;</span> <span class="hljs-attr">onclick</span>=<span class="hljs-string">&quot;gotoNextPage()&quot;</span>&gt;</span>Join<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">tr</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">table</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br><br></code></pre></td></tr></table></figure><h3 id="3、绘制端对端聊天的html代码"><a href="#3、绘制端对端聊天的html代码" class="headerlink" title="3、绘制端对端聊天的html代码"></a>3、绘制端对端聊天的html代码</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>WebRTC PeerConnection<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">link</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;./css/main.css&quot;</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">&quot;stylesheet&quot;</span> /&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span><br><br><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;connserver&quot;</span>&gt;</span>Connect Sig Server<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;leave&quot;</span> <span class="hljs-attr">disabled</span>&gt;</span>Leave<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;shareDesk&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;checkbox&quot;</span>/&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">label</span> <span class="hljs-attr">for</span>=<span class="hljs-string">&quot;shareDesk&quot;</span>&gt;</span>Share Desktop<span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><br><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;preview&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> &gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>Local:<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">video</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;localvideo&quot;</span> <span class="hljs-attr">autoplay</span> <span class="hljs-attr">playsinline</span> <span class="hljs-attr">muted</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">video</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>Offer SDP:<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">textarea</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;offer&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">textarea</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>Remote:<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">video</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;remotevideo&quot;</span> <span class="hljs-attr">autoplay</span> <span class="hljs-attr">playsinline</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">video</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>Answer SDP:<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">textarea</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;answer&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">textarea</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;https://cdnjs.cloudflare.com/ajax/libs/socket.io/2.0.3/socket.io.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;https://webrtc.github.io/adapter/adapter-latest.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;js/main.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br><br></code></pre></td></tr></table></figure><h3 id="4、核心客户端js代码"><a href="#4、核心客户端js代码" class="headerlink" title="4、核心客户端js代码"></a>4、核心客户端js代码</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-meta">&#x27;use strict&#x27;</span><br><br><span class="hljs-keyword">var</span> localVideo = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">querySelector</span>(<span class="hljs-string">&#x27;video#localvideo&#x27;</span>);<br><span class="hljs-keyword">var</span> remoteVideo = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">querySelector</span>(<span class="hljs-string">&#x27;video#remotevideo&#x27;</span>);<br><br><span class="hljs-keyword">var</span> btnConn =  <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">querySelector</span>(<span class="hljs-string">&#x27;button#connserver&#x27;</span>);<br><span class="hljs-keyword">var</span> btnLeave = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">querySelector</span>(<span class="hljs-string">&#x27;button#leave&#x27;</span>);<br><br><span class="hljs-keyword">var</span> offer = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">querySelector</span>(<span class="hljs-string">&#x27;textarea#offer&#x27;</span>);<br><span class="hljs-keyword">var</span> answer = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">querySelector</span>(<span class="hljs-string">&#x27;textarea#answer&#x27;</span>);<br><br><span class="hljs-keyword">var</span> shareDeskBox  = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">querySelector</span>(<span class="hljs-string">&#x27;input#shareDesk&#x27;</span>);<br><br><span class="hljs-keyword">var</span> pcConfig = &#123;<br>  <span class="hljs-string">&#x27;iceServers&#x27;</span>: [&#123;<br>    <span class="hljs-string">&#x27;urls&#x27;</span>: <span class="hljs-string">&#x27;stun:47.95.15.179:3478&#x27;</span>,<br>    <span class="hljs-string">&#x27;credential&#x27;</span>: <span class="hljs-string">&quot;123456&quot;</span>,<br>    <span class="hljs-string">&#x27;username&#x27;</span>: <span class="hljs-string">&quot;carrot&quot;</span><br>  &#125;]<br>&#125;;<br><br><span class="hljs-keyword">var</span> localStream = <span class="hljs-literal">null</span>;<br><span class="hljs-keyword">var</span> remoteStream = <span class="hljs-literal">null</span>;<br><br><span class="hljs-keyword">var</span> pc = <span class="hljs-literal">null</span>;<br><br><span class="hljs-keyword">var</span> roomid;<br><span class="hljs-keyword">var</span> socket = <span class="hljs-literal">null</span>;<br><br><span class="hljs-keyword">var</span> offerdesc = <span class="hljs-literal">null</span>;<br><span class="hljs-keyword">var</span> state = <span class="hljs-string">&#x27;init&#x27;</span>;<br><br><span class="hljs-comment">// 以下代码是从网上找的</span><br><span class="hljs-comment">//=========================================================================================</span><br><br><span class="hljs-comment">//如果返回的是false说明当前操作系统是手机端，如果返回的是true则说明当前的操作系统是电脑端</span><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">IsPC</span>(<span class="hljs-params"></span>) &#123;<br><span class="hljs-keyword">var</span> userAgentInfo = navigator.<span class="hljs-property">userAgent</span>;<br><span class="hljs-keyword">var</span> <span class="hljs-title class_">Agents</span> = [<span class="hljs-string">&quot;Android&quot;</span>, <span class="hljs-string">&quot;iPhone&quot;</span>,<span class="hljs-string">&quot;SymbianOS&quot;</span>, <span class="hljs-string">&quot;Windows Phone&quot;</span>,<span class="hljs-string">&quot;iPad&quot;</span>, <span class="hljs-string">&quot;iPod&quot;</span>];<br><span class="hljs-keyword">var</span> flag = <span class="hljs-literal">true</span>;<br><br><span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> v = <span class="hljs-number">0</span>; v &lt; <span class="hljs-title class_">Agents</span>.<span class="hljs-property">length</span>; v++) &#123;<br><span class="hljs-keyword">if</span> (userAgentInfo.<span class="hljs-title function_">indexOf</span>(<span class="hljs-title class_">Agents</span>[v]) &gt; <span class="hljs-number">0</span>) &#123;<br>flag = <span class="hljs-literal">false</span>;<br><span class="hljs-keyword">break</span>;<br>&#125;<br>&#125;<br><br><span class="hljs-keyword">return</span> flag;<br>&#125;<br><br><span class="hljs-comment">//如果返回true 则说明是Android  false是ios</span><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">is_android</span>(<span class="hljs-params"></span>) &#123;<br><span class="hljs-keyword">var</span> u = navigator.<span class="hljs-property">userAgent</span>, app = navigator.<span class="hljs-property">appVersion</span>;<br><span class="hljs-keyword">var</span> isAndroid = u.<span class="hljs-title function_">indexOf</span>(<span class="hljs-string">&#x27;Android&#x27;</span>) &gt; -<span class="hljs-number">1</span> || u.<span class="hljs-title function_">indexOf</span>(<span class="hljs-string">&#x27;Linux&#x27;</span>) &gt; -<span class="hljs-number">1</span>; <span class="hljs-comment">//g</span><br><span class="hljs-keyword">var</span> isIOS = !!u.<span class="hljs-title function_">match</span>(<span class="hljs-regexp">/\(i[^;]+;( U;)? CPU.+Mac OS X/</span>); <span class="hljs-comment">//ios终端</span><br><span class="hljs-keyword">if</span> (isAndroid) &#123;<br><span class="hljs-comment">//这个是安卓操作系统</span><br><span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;<br>&#125;<br><br><span class="hljs-keyword">if</span> (isIOS) &#123;<br><span class="hljs-comment">//这个是ios操作系统</span><br> <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>&#125;<br>&#125;<br><br><span class="hljs-comment">//获取url参数</span><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">getQueryVariable</span>(<span class="hljs-params">variable</span>)<br>&#123;<br>       <span class="hljs-keyword">var</span> query = <span class="hljs-variable language_">window</span>.<span class="hljs-property">location</span>.<span class="hljs-property">search</span>.<span class="hljs-title function_">substring</span>(<span class="hljs-number">1</span>);<br>       <span class="hljs-keyword">var</span> vars = query.<span class="hljs-title function_">split</span>(<span class="hljs-string">&quot;&amp;&quot;</span>);<br>       <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> i=<span class="hljs-number">0</span>;i&lt;vars.<span class="hljs-property">length</span>;i++) &#123;<br>               <span class="hljs-keyword">var</span> pair = vars[i].<span class="hljs-title function_">split</span>(<span class="hljs-string">&quot;=&quot;</span>);<br>               <span class="hljs-keyword">if</span>(pair[<span class="hljs-number">0</span>] == variable)&#123;<span class="hljs-keyword">return</span> pair[<span class="hljs-number">1</span>];&#125;<br>       &#125;<br>       <span class="hljs-keyword">return</span>(<span class="hljs-literal">false</span>);<br>&#125;<br><br><span class="hljs-comment">//=======================================================================</span><br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">sendMessage</span>(<span class="hljs-params">roomid, data</span>)&#123;<br><br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;send message to other end&#x27;</span>, roomid, data);<br><span class="hljs-keyword">if</span>(!socket)&#123;<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;socket is null&#x27;</span>);<br>&#125;<br>socket.<span class="hljs-title function_">emit</span>(<span class="hljs-string">&#x27;message&#x27;</span>, roomid, data);<br>&#125;<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">conn</span>(<span class="hljs-params"></span>)&#123; <br><br>socket = io.<span class="hljs-title function_">connect</span>();<br><br>socket.<span class="hljs-title function_">on</span>(<span class="hljs-string">&#x27;joined&#x27;</span>, <span class="hljs-function">(<span class="hljs-params">roomid, id</span>) =&gt;</span> &#123;<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;receive joined message!&#x27;</span>, roomid, id);<br>state = <span class="hljs-string">&#x27;joined&#x27;</span><br><br><span class="hljs-comment">//如果是多人的话，第一个人不该在这里创建peerConnection</span><br><span class="hljs-comment">//都等到收到一个otherjoin时再创建</span><br><span class="hljs-comment">//所以，在这个消息里应该带当前房间的用户数</span><br><span class="hljs-comment">//</span><br><span class="hljs-comment">//create conn and bind media track</span><br><span class="hljs-title function_">createPeerConnection</span>();<br><br>btnConn.<span class="hljs-property">disabled</span> = <span class="hljs-literal">true</span>;<br>btnLeave.<span class="hljs-property">disabled</span> = <span class="hljs-literal">false</span>;<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;receive joined message, state=&#x27;</span>, state);<br>&#125;);<br><br>socket.<span class="hljs-title function_">on</span>(<span class="hljs-string">&#x27;otherjoin&#x27;</span>, <span class="hljs-function">(<span class="hljs-params">roomid</span>) =&gt;</span> &#123;<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;receive otherjoin message:&#x27;</span>, roomid, state);<br><br><span class="hljs-comment">//如果是多人的话，每上来一个人都要创建一个新的 peerConnection</span><br><span class="hljs-comment">//</span><br><span class="hljs-keyword">if</span>(state === <span class="hljs-string">&#x27;joined_unbind&#x27;</span>)&#123;<br><span class="hljs-title function_">createPeerConnection</span>();<br>&#125;<br><br>state = <span class="hljs-string">&#x27;joined_conn&#x27;</span>;<br><span class="hljs-title function_">call</span>();<br><br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;receive other_join message, state=&#x27;</span>, state);<br>&#125;);<br><br>socket.<span class="hljs-title function_">on</span>(<span class="hljs-string">&#x27;full&#x27;</span>, <span class="hljs-function">(<span class="hljs-params">roomid, id</span>) =&gt;</span> &#123;<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;receive full message&#x27;</span>, roomid, id);<br><span class="hljs-title function_">hangup</span>();<br><span class="hljs-title function_">closeLocalMedia</span>();<br>state = <span class="hljs-string">&#x27;leaved&#x27;</span>;<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;receive full message, state=&#x27;</span>, state);<br><span class="hljs-title function_">alert</span>(<span class="hljs-string">&#x27;the room is full!&#x27;</span>);<br>&#125;);<br><br>socket.<span class="hljs-title function_">on</span>(<span class="hljs-string">&#x27;leaved&#x27;</span>, <span class="hljs-function">(<span class="hljs-params">roomid, id</span>) =&gt;</span> &#123;<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;receive leaved message&#x27;</span>, roomid, id);<br>state=<span class="hljs-string">&#x27;leaved&#x27;</span><br>socket.<span class="hljs-title function_">disconnect</span>();<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;receive leaved message, state=&#x27;</span>, state);<br><br>btnConn.<span class="hljs-property">disabled</span> = <span class="hljs-literal">false</span>;<br>btnLeave.<span class="hljs-property">disabled</span> = <span class="hljs-literal">true</span>;<br>&#125;);<br><br>socket.<span class="hljs-title function_">on</span>(<span class="hljs-string">&#x27;bye&#x27;</span>, <span class="hljs-function">(<span class="hljs-params">room, id</span>) =&gt;</span> &#123;<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;receive bye message&#x27;</span>, roomid, id);<br><span class="hljs-comment">//state = &#x27;created&#x27;;</span><br><span class="hljs-comment">//当是多人通话时，应该带上当前房间的用户数</span><br><span class="hljs-comment">//如果当前房间用户不小于 2, 则不用修改状态</span><br><span class="hljs-comment">//并且，关闭的应该是对应用户的peerconnection</span><br><span class="hljs-comment">//在客户端应该维护一张peerconnection表，它是</span><br><span class="hljs-comment">//一个key:value的格式，key=userid, value=peerconnection</span><br>state = <span class="hljs-string">&#x27;joined_unbind&#x27;</span>;<br><span class="hljs-title function_">hangup</span>();<br>offer.<span class="hljs-property">value</span> = <span class="hljs-string">&#x27;&#x27;</span>;<br>answer.<span class="hljs-property">value</span> = <span class="hljs-string">&#x27;&#x27;</span>;<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;receive bye message, state=&#x27;</span>, state);<br>&#125;);<br><br>socket.<span class="hljs-title function_">on</span>(<span class="hljs-string">&#x27;disconnect&#x27;</span>, <span class="hljs-function">(<span class="hljs-params">socket</span>) =&gt;</span> &#123;<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;receive disconnect message!&#x27;</span>, roomid);<br><span class="hljs-keyword">if</span>(!(state === <span class="hljs-string">&#x27;leaved&#x27;</span>))&#123;<br><span class="hljs-title function_">hangup</span>();<br><span class="hljs-title function_">closeLocalMedia</span>();<br><br>&#125;<br>state = <span class="hljs-string">&#x27;leaved&#x27;</span>;<br><br>&#125;);<br><br>socket.<span class="hljs-title function_">on</span>(<span class="hljs-string">&#x27;message&#x27;</span>, <span class="hljs-function">(<span class="hljs-params">roomid, data</span>) =&gt;</span> &#123;<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;receive message!&#x27;</span>, roomid, data);<br><br><span class="hljs-keyword">if</span>(data === <span class="hljs-literal">null</span> || data === <span class="hljs-literal">undefined</span>)&#123;<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">error</span>(<span class="hljs-string">&#x27;the message is invalid!&#x27;</span>);<br><span class="hljs-keyword">return</span>;<br>&#125;<br><br><span class="hljs-keyword">if</span>(data.<span class="hljs-title function_">hasOwnProperty</span>(<span class="hljs-string">&#x27;type&#x27;</span>) &amp;&amp; data.<span class="hljs-property">type</span> === <span class="hljs-string">&#x27;offer&#x27;</span>) &#123;<br><br>offer.<span class="hljs-property">value</span> = data.<span class="hljs-property">sdp</span>;<br><br>pc.<span class="hljs-title function_">setRemoteDescription</span>(<span class="hljs-keyword">new</span> <span class="hljs-title class_">RTCSessionDescription</span>(data));<br><br><span class="hljs-comment">//create answer</span><br>pc.<span class="hljs-title function_">createAnswer</span>()<br>.<span class="hljs-title function_">then</span>(getAnswer)<br>.<span class="hljs-title function_">catch</span>(handleAnswerError);<br><br>&#125;<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(data.<span class="hljs-title function_">hasOwnProperty</span>(<span class="hljs-string">&#x27;type&#x27;</span>) &amp;&amp; data.<span class="hljs-property">type</span> == <span class="hljs-string">&#x27;answer&#x27;</span>)&#123;<br>answer.<span class="hljs-property">value</span> = data.<span class="hljs-property">sdp</span>;<br>pc.<span class="hljs-title function_">setRemoteDescription</span>(<span class="hljs-keyword">new</span> <span class="hljs-title class_">RTCSessionDescription</span>(data));<br><br>&#125;<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (data.<span class="hljs-title function_">hasOwnProperty</span>(<span class="hljs-string">&#x27;type&#x27;</span>) &amp;&amp; data.<span class="hljs-property">type</span> === <span class="hljs-string">&#x27;candidate&#x27;</span>)&#123;<br><span class="hljs-keyword">var</span> candidate = <span class="hljs-keyword">new</span> <span class="hljs-title class_">RTCIceCandidate</span>(&#123;<br><span class="hljs-attr">sdpMLineIndex</span>: data.<span class="hljs-property">label</span>,<br><span class="hljs-attr">candidate</span>: data.<span class="hljs-property">candidate</span><br>&#125;);<br>pc.<span class="hljs-title function_">addIceCandidate</span>(candidate);<br><br>&#125;<span class="hljs-keyword">else</span>&#123;<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;the message is invalid!&#x27;</span>, data);<br><br>&#125;<br><br>&#125;);<br><br><br>roomid = <span class="hljs-title function_">getQueryVariable</span>(<span class="hljs-string">&#x27;room&#x27;</span>);<br>socket.<span class="hljs-title function_">emit</span>(<span class="hljs-string">&#x27;join&#x27;</span>, roomid);<br><br><span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;<br>&#125;<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">connSignalServer</span>(<span class="hljs-params"></span>)&#123;<br><br><span class="hljs-comment">//开启本地视频</span><br><span class="hljs-title function_">start</span>();<br><br><span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;<br>&#125;<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">getMediaStream</span>(<span class="hljs-params">stream</span>)&#123;<br><br><span class="hljs-keyword">if</span>(localStream)&#123;<br>stream.<span class="hljs-title function_">getAudioTracks</span>().<span class="hljs-title function_">forEach</span>(<span class="hljs-function">(<span class="hljs-params">track</span>)=&gt;</span>&#123;<br>localStream.<span class="hljs-title function_">addTrack</span>(track);<br>stream.<span class="hljs-title function_">removeTrack</span>(track);<br>&#125;);<br>&#125;<span class="hljs-keyword">else</span>&#123;<br>localStream = stream;<br>&#125;<br><br>localVideo.<span class="hljs-property">srcObject</span> = localStream;<br><br><span class="hljs-comment">//这个函数的位置特别重要，</span><br><span class="hljs-comment">//一定要放到getMediaStream之后再调用</span><br><span class="hljs-comment">//否则就会出现绑定失败的情况</span><br><span class="hljs-comment">//</span><br><span class="hljs-comment">//setup connection</span><br><span class="hljs-title function_">conn</span>();<br><br><span class="hljs-comment">//btnStart.disabled = true;</span><br><span class="hljs-comment">//btnCall.disabled = true;</span><br><span class="hljs-comment">//btnHangup.disabled = true;</span><br>&#125;<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">getDeskStream</span>(<span class="hljs-params">stream</span>)&#123;<br>localStream = stream;<br>&#125;<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">handleError</span>(<span class="hljs-params">err</span>)&#123;<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">error</span>(<span class="hljs-string">&#x27;Failed to get Media Stream!&#x27;</span>, err);<br>&#125;<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">shareDesk</span>(<span class="hljs-params"></span>)&#123;<br><br><span class="hljs-keyword">if</span>(<span class="hljs-title class_">IsPC</span>())&#123;<br>navigator.<span class="hljs-property">mediaDevices</span>.<span class="hljs-title function_">getDisplayMedia</span>(&#123;<span class="hljs-attr">video</span>: <span class="hljs-literal">true</span>&#125;)<br>.<span class="hljs-title function_">then</span>(getDeskStream)<br>.<span class="hljs-title function_">catch</span>(handleError);<br><br><span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;<br>&#125;<br><br><span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br><br>&#125;<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">start</span>(<span class="hljs-params"></span>)&#123;<br><br><span class="hljs-keyword">if</span>(!navigator.<span class="hljs-property">mediaDevices</span> ||<br>!navigator.<span class="hljs-property">mediaDevices</span>.<span class="hljs-property">getUserMedia</span>)&#123;<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">error</span>(<span class="hljs-string">&#x27;the getUserMedia is not supported!&#x27;</span>);<br><span class="hljs-keyword">return</span>;<br>&#125;<span class="hljs-keyword">else</span> &#123;<br><br><span class="hljs-keyword">var</span> constraints;<br><br><span class="hljs-keyword">if</span>( shareDeskBox.<span class="hljs-property">checked</span> &amp;&amp; <span class="hljs-title function_">shareDesk</span>())&#123;<br><br>constraints = &#123;<br><span class="hljs-attr">video</span>: <span class="hljs-literal">false</span>,<br><span class="hljs-attr">audio</span>:  &#123;<br><span class="hljs-attr">echoCancellation</span>: <span class="hljs-literal">true</span>,<br><span class="hljs-attr">noiseSuppression</span>: <span class="hljs-literal">true</span>,<br><span class="hljs-attr">autoGainControl</span>: <span class="hljs-literal">true</span><br>&#125;<br>&#125;<br><br>&#125;<span class="hljs-keyword">else</span>&#123;<br>constraints = &#123;<br><span class="hljs-attr">video</span>: <span class="hljs-literal">true</span>,<br><span class="hljs-attr">audio</span>:  &#123;<br><span class="hljs-attr">echoCancellation</span>: <span class="hljs-literal">true</span>,<br><span class="hljs-attr">noiseSuppression</span>: <span class="hljs-literal">true</span>,<br><span class="hljs-attr">autoGainControl</span>: <span class="hljs-literal">true</span><br>&#125;<br>&#125;<br>&#125;<br><br>navigator.<span class="hljs-property">mediaDevices</span>.<span class="hljs-title function_">getUserMedia</span>(constraints)<br>.<span class="hljs-title function_">then</span>(getMediaStream)<br>.<span class="hljs-title function_">catch</span>(handleError);<br>&#125;<br><br>&#125;<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">getRemoteStream</span>(<span class="hljs-params">e</span>)&#123;<br>remoteStream = e.<span class="hljs-property">streams</span>[<span class="hljs-number">0</span>];<br>remoteVideo.<span class="hljs-property">srcObject</span> = e.<span class="hljs-property">streams</span>[<span class="hljs-number">0</span>];<br>&#125;<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">handleOfferError</span>(<span class="hljs-params">err</span>)&#123;<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">error</span>(<span class="hljs-string">&#x27;Failed to create offer:&#x27;</span>, err);<br>&#125;<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">handleAnswerError</span>(<span class="hljs-params">err</span>)&#123;<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">error</span>(<span class="hljs-string">&#x27;Failed to create answer:&#x27;</span>, err);<br>&#125;<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">getAnswer</span>(<span class="hljs-params">desc</span>)&#123;<br>pc.<span class="hljs-title function_">setLocalDescription</span>(desc);<br>answer.<span class="hljs-property">value</span> = desc.<span class="hljs-property">sdp</span>;<br><br><span class="hljs-comment">//send answer sdp</span><br><span class="hljs-title function_">sendMessage</span>(roomid, desc);<br>&#125;<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">getOffer</span>(<span class="hljs-params">desc</span>)&#123;<br>pc.<span class="hljs-title function_">setLocalDescription</span>(desc);<br>offer.<span class="hljs-property">value</span> = desc.<span class="hljs-property">sdp</span>;<br>offerdesc = desc;<br><br><span class="hljs-comment">//send offer sdp</span><br><span class="hljs-title function_">sendMessage</span>(roomid, offerdesc);<br><br>&#125;<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">createPeerConnection</span>(<span class="hljs-params"></span>)&#123;<br><br><span class="hljs-comment">//如果是多人的话，在这里要创建一个新的连接.</span><br><span class="hljs-comment">//新创建好的要放到一个map表中。</span><br><span class="hljs-comment">//key=userid, value=peerconnection</span><br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;create RTCPeerConnection!&#x27;</span>);<br><span class="hljs-keyword">if</span>(!pc)&#123;<br>pc = <span class="hljs-keyword">new</span> <span class="hljs-title class_">RTCPeerConnection</span>(pcConfig);<br><br>pc.<span class="hljs-property">onicecandidate</span> = <span class="hljs-function">(<span class="hljs-params">e</span>)=&gt;</span>&#123;<br><br><span class="hljs-keyword">if</span>(e.<span class="hljs-property">candidate</span>) &#123;<br><span class="hljs-title function_">sendMessage</span>(roomid, &#123;<br><span class="hljs-attr">type</span>: <span class="hljs-string">&#x27;candidate&#x27;</span>,<br><span class="hljs-attr">label</span>:e.<span class="hljs-property">candidate</span>.<span class="hljs-property">sdpMLineIndex</span>, <br><span class="hljs-attr">id</span>:e.<span class="hljs-property">candidate</span>.<span class="hljs-property">sdpMid</span>, <br><span class="hljs-attr">candidate</span>: e.<span class="hljs-property">candidate</span>.<span class="hljs-property">candidate</span><br>&#125;);<br>&#125;<span class="hljs-keyword">else</span>&#123;<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;this is the end candidate&#x27;</span>);<br>&#125;<br>&#125;<br>pc.<span class="hljs-property">ontrack</span> = getRemoteStream;<br>&#125;<span class="hljs-keyword">else</span> &#123;<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">warning</span>(<span class="hljs-string">&#x27;the pc have be created!&#x27;</span>);<br>&#125;<br><br><span class="hljs-title function_">bindTracks</span>();<br><span class="hljs-keyword">return</span>;<br>&#125;<br><br><span class="hljs-comment">//绑定永远与 peerconnection在一起，</span><br><span class="hljs-comment">//所以没必要再单独做成一个函数</span><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">bindTracks</span>(<span class="hljs-params"></span>)&#123;<br><br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;bind tracks into RTCPeerConnection!&#x27;</span>);<br><br><span class="hljs-keyword">if</span>( pc === <span class="hljs-literal">null</span> || pc === <span class="hljs-literal">undefined</span>) &#123;<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">error</span>(<span class="hljs-string">&#x27;pc is null or undefined!&#x27;</span>);<br><span class="hljs-keyword">return</span>;<br>&#125;<br><br><span class="hljs-keyword">if</span>(localStream === <span class="hljs-literal">null</span> || localStream === <span class="hljs-literal">undefined</span>) &#123;<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">error</span>(<span class="hljs-string">&#x27;localstream is null or undefined!&#x27;</span>);<br><span class="hljs-keyword">return</span>;<br>&#125;<br><br><span class="hljs-comment">//add all track into peer connection</span><br>localStream.<span class="hljs-title function_">getTracks</span>().<span class="hljs-title function_">forEach</span>(<span class="hljs-function">(<span class="hljs-params">track</span>)=&gt;</span>&#123;<br>pc.<span class="hljs-title function_">addTrack</span>(track, localStream);<br>&#125;);<br><br>&#125;<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">call</span>(<span class="hljs-params"></span>)&#123;<br><br><span class="hljs-keyword">if</span>(state === <span class="hljs-string">&#x27;joined_conn&#x27;</span>)&#123;<br><br><span class="hljs-keyword">var</span> offerOptions = &#123;<br><span class="hljs-attr">offerToRecieveAudio</span>: <span class="hljs-number">1</span>,<br><span class="hljs-attr">offerToRecieveVideo</span>: <span class="hljs-number">1</span><br>&#125;<br><br>pc.<span class="hljs-title function_">createOffer</span>(offerOptions)<br>.<span class="hljs-title function_">then</span>(getOffer)<br>.<span class="hljs-title function_">catch</span>(handleOfferError);<br>&#125;<br>&#125;<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">hangup</span>(<span class="hljs-params"></span>)&#123;<br><br><span class="hljs-keyword">if</span>(pc) &#123;<br><br>offerdesc = <span class="hljs-literal">null</span>;<br><br>pc.<span class="hljs-title function_">close</span>();<br>pc = <span class="hljs-literal">null</span>;<br>&#125;<br><br>&#125;<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">closeLocalMedia</span>(<span class="hljs-params"></span>)&#123;<br><br><span class="hljs-keyword">if</span>(localStream &amp;&amp; localStream.<span class="hljs-title function_">getTracks</span>())&#123;<br>localStream.<span class="hljs-title function_">getTracks</span>().<span class="hljs-title function_">forEach</span>(<span class="hljs-function">(<span class="hljs-params">track</span>)=&gt;</span>&#123;<br>track.<span class="hljs-title function_">stop</span>();<br>&#125;);<br>&#125;<br>localStream = <span class="hljs-literal">null</span>;<br>&#125;<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">leave</span>(<span class="hljs-params"></span>) &#123;<br><br><span class="hljs-keyword">if</span>(socket)&#123;<br>socket.<span class="hljs-title function_">emit</span>(<span class="hljs-string">&#x27;leave&#x27;</span>, roomid); <span class="hljs-comment">//notify server</span><br>&#125;<br><br><span class="hljs-title function_">hangup</span>();<br><span class="hljs-title function_">closeLocalMedia</span>();<br><br>offer.<span class="hljs-property">value</span> = <span class="hljs-string">&#x27;&#x27;</span>;<br>answer.<span class="hljs-property">value</span> = <span class="hljs-string">&#x27;&#x27;</span>;<br>btnConn.<span class="hljs-property">disabled</span> = <span class="hljs-literal">false</span>;<br>btnLeave.<span class="hljs-property">disabled</span> = <span class="hljs-literal">true</span>;<br>&#125;<br><br>btnConn.<span class="hljs-property">onclick</span> = connSignalServer<br>btnLeave.<span class="hljs-property">onclick</span> = leave;<br><br></code></pre></td></tr></table></figure><h3 id="5、客户端一些辅助css代码"><a href="#5、客户端一些辅助css代码" class="headerlink" title="5、客户端一些辅助css代码"></a>5、客户端一些辅助css代码</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-comment">/*</span><br><span class="hljs-comment"> *  Copyright (c) 2015 The WebRTC project authors. All Rights Reserved.</span><br><span class="hljs-comment"> *</span><br><span class="hljs-comment"> *  Use of this source code is governed by a BSD-style license</span><br><span class="hljs-comment"> *  that can be found in the LICENSE file in the root of the source</span><br><span class="hljs-comment"> *  tree.</span><br><span class="hljs-comment"> */</span><br><br><span class="hljs-selector-tag">button</span> &#123;<br>  <span class="hljs-attribute">margin</span>: <span class="hljs-number">10px</span> <span class="hljs-number">20px</span> <span class="hljs-number">25px</span> <span class="hljs-number">0</span>;<br>  <span class="hljs-attribute">vertical-align</span>: top;<br>  <span class="hljs-attribute">width</span>: <span class="hljs-number">134px</span>;<br>&#125;<br><br><span class="hljs-selector-tag">table</span> &#123;<br>  <span class="hljs-attribute">margin</span>: <span class="hljs-number">200px</span> (<span class="hljs-number">50%</span> - <span class="hljs-number">100</span>) <span class="hljs-number">0</span> <span class="hljs-number">0</span>; <br>&#125;<br><br><span class="hljs-selector-tag">textarea</span> &#123;<br>  <span class="hljs-attribute">color</span>: <span class="hljs-number">#444</span>;<br>  <span class="hljs-attribute">font-size</span>: <span class="hljs-number">0.9em</span>;<br>  <span class="hljs-attribute">font-weight</span>: <span class="hljs-number">300</span>;<br>  <span class="hljs-attribute">height</span>: <span class="hljs-number">20.0em</span>;<br>  <span class="hljs-attribute">padding</span>: <span class="hljs-number">5px</span>;<br>  <span class="hljs-attribute">width</span>: <span class="hljs-built_in">calc</span>(<span class="hljs-number">100%</span> - <span class="hljs-number">10px</span>);<br>&#125;<br><br><span class="hljs-selector-tag">div</span><span class="hljs-selector-id">#getUserMedia</span> &#123;<br>  <span class="hljs-attribute">padding</span>: <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">8px</span> <span class="hljs-number">0</span>;<br>&#125;<br><br><span class="hljs-selector-tag">div</span><span class="hljs-selector-class">.input</span> &#123;<br>  <span class="hljs-attribute">display</span>: inline-block;<br>  <span class="hljs-attribute">margin</span>: <span class="hljs-number">0</span> <span class="hljs-number">4px</span> <span class="hljs-number">0</span> <span class="hljs-number">0</span>;<br>  <span class="hljs-attribute">vertical-align</span>: top;<br>  <span class="hljs-attribute">width</span>: <span class="hljs-number">310px</span>;<br>&#125;<br><br><span class="hljs-selector-tag">div</span><span class="hljs-selector-class">.input</span> &gt; <span class="hljs-selector-tag">div</span> &#123;<br>  <span class="hljs-attribute">margin</span>: <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">20px</span> <span class="hljs-number">0</span>;<br>  <span class="hljs-attribute">vertical-align</span>: top;<br>&#125;<br><br><span class="hljs-selector-tag">div</span><span class="hljs-selector-class">.output</span> &#123;<br>  <span class="hljs-attribute">background-color</span>: <span class="hljs-number">#eee</span>;<br>  <span class="hljs-attribute">display</span>: inline-block;<br>  <span class="hljs-attribute">font-family</span>: <span class="hljs-string">&#x27;Inconsolata&#x27;</span>, <span class="hljs-string">&#x27;Courier New&#x27;</span>, monospace;<br>  <span class="hljs-attribute">font-size</span>: <span class="hljs-number">0.9em</span>;<br>  <span class="hljs-attribute">padding</span>: <span class="hljs-number">10px</span> <span class="hljs-number">10px</span> <span class="hljs-number">10px</span> <span class="hljs-number">25px</span>;<br>  <span class="hljs-attribute">position</span>: relative;<br>  <span class="hljs-attribute">top</span>: <span class="hljs-number">10px</span>;<br>  <span class="hljs-attribute">white-space</span>: pre;<br>  <span class="hljs-attribute">width</span>: <span class="hljs-number">270px</span>;<br>&#125;<br><br><span class="hljs-selector-tag">div</span><span class="hljs-selector-id">#preview</span> &#123;<br>  <span class="hljs-attribute">border-bottom</span>: <span class="hljs-number">1px</span> solid <span class="hljs-number">#eee</span>;<br>  <span class="hljs-attribute">margin</span>: <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">1em</span> <span class="hljs-number">0</span>;<br>  <span class="hljs-attribute">padding</span>: <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">0.5em</span> <span class="hljs-number">0</span>;<br>&#125;<br><br><span class="hljs-selector-tag">div</span><span class="hljs-selector-id">#preview</span> &gt; <span class="hljs-selector-tag">div</span> &#123;<br>  <span class="hljs-attribute">display</span>: inline-block;<br>  <span class="hljs-attribute">vertical-align</span>: top;<br>  <span class="hljs-attribute">width</span>: <span class="hljs-built_in">calc</span>(<span class="hljs-number">50%</span> - <span class="hljs-number">12px</span>);<br>&#125;<br><br><span class="hljs-selector-tag">section</span><span class="hljs-selector-id">#statistics</span> <span class="hljs-selector-tag">div</span> &#123;<br>  <span class="hljs-attribute">display</span>: inline-block;<br>  <span class="hljs-attribute">font-family</span>: <span class="hljs-string">&#x27;Inconsolata&#x27;</span>, <span class="hljs-string">&#x27;Courier New&#x27;</span>, monospace;<br>  <span class="hljs-attribute">vertical-align</span>: top;<br>  <span class="hljs-attribute">width</span>: <span class="hljs-number">308px</span>;<br>&#125;<br><br><span class="hljs-selector-tag">section</span><span class="hljs-selector-id">#statistics</span> <span class="hljs-selector-tag">div</span><span class="hljs-selector-id">#senderStats</span> &#123;<br>  <span class="hljs-attribute">margin</span>: <span class="hljs-number">0</span> <span class="hljs-number">20px</span> <span class="hljs-number">0</span> <span class="hljs-number">0</span>;<br>&#125;<br><br><span class="hljs-selector-tag">section</span><span class="hljs-selector-id">#constraints</span> &gt; <span class="hljs-selector-tag">div</span> &#123;<br>  <span class="hljs-attribute">margin</span>: <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">20px</span> <span class="hljs-number">0</span>;<br>&#125;<br><br><span class="hljs-selector-tag">h2</span> &#123;<br>  <span class="hljs-attribute">margin</span>: <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">1em</span> <span class="hljs-number">0</span>;<br>&#125;<br><br><br><span class="hljs-selector-tag">section</span><span class="hljs-selector-id">#constraints</span> <span class="hljs-selector-tag">label</span> &#123;<br>  <span class="hljs-attribute">display</span>: inline-block;<br>  <span class="hljs-attribute">width</span>: <span class="hljs-number">156px</span>;<br>&#125;<br><br><span class="hljs-selector-tag">section</span> &#123;<br>  <span class="hljs-attribute">margin</span>: <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">20px</span> <span class="hljs-number">0</span>;<br>  <span class="hljs-attribute">padding</span>: <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">15px</span> <span class="hljs-number">0</span>;<br>&#125;<br><br><span class="hljs-selector-tag">video</span> &#123;<br>  <span class="hljs-attribute">background</span>: <span class="hljs-number">#222</span>;<br>  <span class="hljs-attribute">margin</span>: <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">0</span>;<br>  <span class="hljs-attr">--width</span>: <span class="hljs-number">100%</span>;<br>  <span class="hljs-attribute">width</span>: <span class="hljs-built_in">var</span>(--width);<br>  <span class="hljs-attribute">height</span>: <span class="hljs-number">225px</span>;<br>&#125;<br><br><span class="hljs-keyword">@media</span> screen <span class="hljs-keyword">and</span> (<span class="hljs-attribute">max-width</span>: <span class="hljs-number">720px</span>) &#123;<br>  <span class="hljs-selector-tag">button</span> &#123;<br>    <span class="hljs-attribute">font-weight</span>: <span class="hljs-number">500</span>;<br>    <span class="hljs-attribute">height</span>: <span class="hljs-number">56px</span>;<br>    <span class="hljs-attribute">line-height</span>: <span class="hljs-number">1.3em</span>;<br>    <span class="hljs-attribute">width</span>: <span class="hljs-number">90px</span>;<br>  &#125;<br><br>  <span class="hljs-selector-tag">div</span><span class="hljs-selector-id">#getUserMedia</span> &#123;<br>    <span class="hljs-attribute">padding</span>: <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">40px</span> <span class="hljs-number">0</span>;<br>  &#125;<br><br>  <span class="hljs-selector-tag">section</span><span class="hljs-selector-id">#statistics</span> <span class="hljs-selector-tag">div</span> &#123;<br>    <span class="hljs-attribute">width</span>: <span class="hljs-built_in">calc</span>(<span class="hljs-number">50%</span> - <span class="hljs-number">14px</span>);<br>  &#125;<br><br>&#125;<br><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>WebRTC入门</category>
      
    </categories>
    
    
    <tags>
      
      <tag>音视频</tag>
      
      <tag>WebRTC</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>day11-WebRTC核心之SDP详解</title>
    <link href="/2022/06/20/WebRTC%E5%85%A5%E9%97%A8/day11WebRTC%E6%A0%B8%E5%BF%83SDP/"/>
    <url>/2022/06/20/WebRTC%E5%85%A5%E9%97%A8/day11WebRTC%E6%A0%B8%E5%BF%83SDP/</url>
    
    <content type="html"><![CDATA[<h1 id="一、网络抓包"><a href="#一、网络抓包" class="headerlink" title="一、网络抓包"></a>一、网络抓包</h1><h3 id="1、SDP在WebRTC中的地位？"><a href="#1、SDP在WebRTC中的地位？" class="headerlink" title="1、SDP在WebRTC中的地位？"></a>1、SDP在WebRTC中的地位？</h3><ul><li>SDP可以说是WebRTC的核心，因为双方进行通信的参数都在其中</li><li>如使用的编码器是什么，码流是多大，有多少个媒体流等等都在SDP中描述着</li></ul><h3 id="2、什么是SDP？"><a href="#2、什么是SDP？" class="headerlink" title="2、什么是SDP？"></a>2、什么是SDP？</h3><ul><li>SDP（Session Description Protocol）它只是一种信息格式的描述标准</li><li>本身不属于传输协议，但是可以被其他传输协议用来交换必要的信息。</li></ul><h3 id="3、认识WebRTC中的SDP，有个印象就行，后续再倒回来研究。"><a href="#3、认识WebRTC中的SDP，有个印象就行，后续再倒回来研究。" class="headerlink" title="3、认识WebRTC中的SDP，有个印象就行，后续再倒回来研究。"></a>3、认识WebRTC中的SDP，有个印象就行，后续再倒回来研究。</h3><ul><li>会话层：类似全局变量，是对SDP大而全的信息统计</li><li>媒体层：类似于局部变量，媒体层的数据会覆盖会话层</li></ul><img src="/2022/06/20/WebRTC%E5%85%A5%E9%97%A8/day11WebRTC%E6%A0%B8%E5%BF%83SDP/image-20220625173942004.png" class=""><h3 id="4、如何获取SDP？"><a href="#4、如何获取SDP？" class="headerlink" title="4、如何获取SDP？"></a>4、如何获取SDP？</h3><figure class="highlight js"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></div></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">function</span> <span class="hljs-title function_">getAnswer</span>(<span class="hljs-params">desc</span>)&#123;<br>pc2.<span class="hljs-title function_">setLocalDescription</span>(desc);<br>answerSdpTextarea.<span class="hljs-property">value</span> = desc.<span class="hljs-property">sdp</span><br><br><span class="hljs-comment">//send desc to signal</span><br><span class="hljs-comment">//receive desc from signal</span><br><br>pc1.<span class="hljs-title function_">setRemoteDescription</span>(desc);<br>&#125;<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">getOffer</span>(<span class="hljs-params">desc</span>)&#123;<br>pc1.<span class="hljs-title function_">setLocalDescription</span>(desc);<br>offerSdpTextarea.<span class="hljs-property">value</span> = desc.<span class="hljs-property">sdp</span><br><br><span class="hljs-comment">//send desc to signal</span><br><span class="hljs-comment">//receive desc from signal</span><br><br>pc2.<span class="hljs-title function_">setRemoteDescription</span>(desc);<br><br>pc2.<span class="hljs-title function_">createAnswer</span>()<br>.<span class="hljs-title function_">then</span>(getAnswer)<br>.<span class="hljs-title function_">catch</span>(handleAnswerError);<br><br>&#125;<br></code></pre></td></tr></table></figure><img src="/2022/06/20/WebRTC%E5%85%A5%E9%97%A8/day11WebRTC%E6%A0%B8%E5%BF%83SDP/image-20220625173459114.png" class=""><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br></pre></td><td class="code"><pre><code class="hljs xml">v=0<br>o=- 6529374866365022581 2 IN IP4 127.0.0.1<br>s=-<br>t=0 0<br>a=group:BUNDLE 0<br>a=extmap-allow-mixed<br>a=msid-semantic: WMS 8WZ552nThLWpJd1OTFAcTJTEIb6s4aHH1vlF<br>m=video 9 UDP/TLS/RTP/SAVPF 96 97 98 99 100 101 127 121 125 107 108 109 124 120 123 119 35 36 41 42 114 115 116 117 118<br>c=IN IP4 0.0.0.0<br>a=rtcp:9 IN IP4 0.0.0.0<br>a=ice-ufrag:j9z9<br>a=ice-pwd:JcYFBZ/8ONKMNks8lG37N83y<br>a=ice-options:trickle<br>a=fingerprint:sha-256 A4:52:8C:A8:2B:22:8C:66:C1:03:D3:65:EC:EE:36:E4:0E:28:CB:02:FB:90:DE:EA:E6:C2:C8:B2:DE:6A:05:30<br>a=setup:actpass<br>a=mid:0<br>a=extmap:1 urn:ietf:params:rtp-hdrext:toffset<br>a=extmap:2 http://www.webrtc.org/experiments/rtp-hdrext/abs-send-time<br>a=extmap:3 urn:3gpp:video-orientation<br>a=extmap:4 http://www.ietf.org/id/draft-holmer-rmcat-transport-wide-cc-extensions-01<br>a=extmap:5 http://www.webrtc.org/experiments/rtp-hdrext/playout-delay<br>a=extmap:6 http://www.webrtc.org/experiments/rtp-hdrext/video-content-type<br>a=extmap:7 http://www.webrtc.org/experiments/rtp-hdrext/video-timing<br>a=extmap:8 http://www.webrtc.org/experiments/rtp-hdrext/color-space<br>a=extmap:9 urn:ietf:params:rtp-hdrext:sdes:mid<br>a=extmap:10 urn:ietf:params:rtp-hdrext:sdes:rtp-stream-id<br>a=extmap:11 urn:ietf:params:rtp-hdrext:sdes:repaired-rtp-stream-id<br>a=sendrecv<br>a=msid:8WZ552nThLWpJd1OTFAcTJTEIb6s4aHH1vlF 31751cde-a529-4f04-bd71-ad11336ad20b<br>a=rtcp-mux<br>a=rtcp-rsize<br>a=rtpmap:96 VP8/90000<br>a=rtcp-fb:96 goog-remb<br>a=rtcp-fb:96 transport-cc<br>a=rtcp-fb:96 ccm fir<br>a=rtcp-fb:96 nack<br>a=rtcp-fb:96 nack pli<br>a=rtpmap:97 rtx/90000<br>a=fmtp:97 apt=96<br>a=rtpmap:98 VP9/90000<br>a=rtcp-fb:98 goog-remb<br>a=rtcp-fb:98 transport-cc<br>a=rtcp-fb:98 ccm fir<br>a=rtcp-fb:98 nack<br>a=rtcp-fb:98 nack pli<br>a=fmtp:98 profile-id=0<br>a=rtpmap:99 rtx/90000<br>a=fmtp:99 apt=98<br>a=rtpmap:100 VP9/90000<br>a=rtcp-fb:100 goog-remb<br>a=rtcp-fb:100 transport-cc<br>a=rtcp-fb:100 ccm fir<br>a=rtcp-fb:100 nack<br>a=rtcp-fb:100 nack pli<br>a=fmtp:100 profile-id=2<br>a=rtpmap:101 rtx/90000<br>a=fmtp:101 apt=100<br>a=rtpmap:127 H264/90000<br>a=rtcp-fb:127 goog-remb<br>a=rtcp-fb:127 transport-cc<br>a=rtcp-fb:127 ccm fir<br>a=rtcp-fb:127 nack<br>a=rtcp-fb:127 nack pli<br>a=fmtp:127 level-asymmetry-allowed=1;packetization-mode=1;profile-level-id=42001f<br>a=rtpmap:121 rtx/90000<br>a=fmtp:121 apt=127<br>a=rtpmap:125 H264/90000<br>a=rtcp-fb:125 goog-remb<br>a=rtcp-fb:125 transport-cc<br>a=rtcp-fb:125 ccm fir<br>a=rtcp-fb:125 nack<br>a=rtcp-fb:125 nack pli<br>a=fmtp:125 level-asymmetry-allowed=1;packetization-mode=0;profile-level-id=42001f<br>a=rtpmap:107 rtx/90000<br>a=fmtp:107 apt=125<br>a=rtpmap:108 H264/90000<br>a=rtcp-fb:108 goog-remb<br>a=rtcp-fb:108 transport-cc<br>a=rtcp-fb:108 ccm fir<br>a=rtcp-fb:108 nack<br>a=rtcp-fb:108 nack pli<br>a=fmtp:108 level-asymmetry-allowed=1;packetization-mode=1;profile-level-id=42e01f<br>a=rtpmap:109 rtx/90000<br>a=fmtp:109 apt=108<br>a=rtpmap:124 H264/90000<br>a=rtcp-fb:124 goog-remb<br>a=rtcp-fb:124 transport-cc<br>a=rtcp-fb:124 ccm fir<br>a=rtcp-fb:124 nack<br>a=rtcp-fb:124 nack pli<br>a=fmtp:124 level-asymmetry-allowed=1;packetization-mode=0;profile-level-id=42e01f<br>a=rtpmap:120 rtx/90000<br>a=fmtp:120 apt=124<br>a=rtpmap:123 H264/90000<br>a=rtcp-fb:123 goog-remb<br>a=rtcp-fb:123 transport-cc<br>a=rtcp-fb:123 ccm fir<br>a=rtcp-fb:123 nack<br>a=rtcp-fb:123 nack pli<br>a=fmtp:123 level-asymmetry-allowed=1;packetization-mode=1;profile-level-id=4d001f<br>a=rtpmap:119 rtx/90000<br>a=fmtp:119 apt=123<br>a=rtpmap:35 H264/90000<br>a=rtcp-fb:35 goog-remb<br>a=rtcp-fb:35 transport-cc<br>a=rtcp-fb:35 ccm fir<br>a=rtcp-fb:35 nack<br>a=rtcp-fb:35 nack pli<br>a=fmtp:35 level-asymmetry-allowed=1;packetization-mode=0;profile-level-id=4d001f<br>a=rtpmap:36 rtx/90000<br>a=fmtp:36 apt=35<br>a=rtpmap:41 AV1/90000<br>a=rtcp-fb:41 goog-remb<br>a=rtcp-fb:41 transport-cc<br>a=rtcp-fb:41 ccm fir<br>a=rtcp-fb:41 nack<br>a=rtcp-fb:41 nack pli<br>a=rtpmap:42 rtx/90000<br>a=fmtp:42 apt=41<br>a=rtpmap:114 H264/90000<br>a=rtcp-fb:114 goog-remb<br>a=rtcp-fb:114 transport-cc<br>a=rtcp-fb:114 ccm fir<br>a=rtcp-fb:114 nack<br>a=rtcp-fb:114 nack pli<br>a=fmtp:114 level-asymmetry-allowed=1;packetization-mode=1;profile-level-id=64001f<br>a=rtpmap:115 rtx/90000<br>a=fmtp:115 apt=114<br>a=rtpmap:116 red/90000<br>a=rtpmap:117 rtx/90000<br>a=fmtp:117 apt=116<br>a=rtpmap:118 ulpfec/90000<br>a=ssrc-group:FID 436826565 1885894064<br>a=ssrc:436826565 cname:t+9nyTqxmjVC0Wq9<br>a=ssrc:436826565 msid:8WZ552nThLWpJd1OTFAcTJTEIb6s4aHH1vlF 31751cde-a529-4f04-bd71-ad11336ad20b<br>a=ssrc:436826565 mslabel:8WZ552nThLWpJd1OTFAcTJTEIb6s4aHH1vlF<br>a=ssrc:436826565 label:31751cde-a529-4f04-bd71-ad11336ad20b<br>a=ssrc:1885894064 cname:t+9nyTqxmjVC0Wq9<br>a=ssrc:1885894064 msid:8WZ552nThLWpJd1OTFAcTJTEIb6s4aHH1vlF 31751cde-a529-4f04-bd71-ad11336ad20b<br>a=ssrc:1885894064 mslabel:8WZ552nThLWpJd1OTFAcTJTEIb6s4aHH1vlF<br>a=ssrc:1885894064 label:31751cde-a529-4f04-bd71-ad11336ad20b<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>WebRTC入门</category>
      
    </categories>
    
    
    <tags>
      
      <tag>音视频</tag>
      
      <tag>WebRTC</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>day10-WebRTC端对端1v1传输基本流程</title>
    <link href="/2022/06/19/WebRTC%E5%85%A5%E9%97%A8/day10%E7%AB%AF%E5%AF%B9%E7%AB%AF%E5%9F%BA%E6%9C%AC%E6%B5%81%E7%A8%8B/"/>
    <url>/2022/06/19/WebRTC%E5%85%A5%E9%97%A8/day10%E7%AB%AF%E5%AF%B9%E7%AB%AF%E5%9F%BA%E6%9C%AC%E6%B5%81%E7%A8%8B/</url>
    
    <content type="html"><![CDATA[<h1 id="一、网络抓包"><a href="#一、网络抓包" class="headerlink" title="一、网络抓包"></a>一、网络抓包</h1><h3 id="1、网络抓包工具常用的两个工具是哪两个？"><a href="#1、网络抓包工具常用的两个工具是哪两个？" class="headerlink" title="1、网络抓包工具常用的两个工具是哪两个？"></a>1、网络抓包工具常用的两个工具是哪两个？</h3><ul><li>tcpdump</li><li>WireShark</li></ul><h3 id="2、tcpdump-和-WireShark-两者有什么区别？"><a href="#2、tcpdump-和-WireShark-两者有什么区别？" class="headerlink" title="2、tcpdump 和 WireShark 两者有什么区别？"></a>2、<code>tcpdump</code> 和 <code>WireShark</code> 两者有什么区别？</h3><ul><li><font color="red">tcpdump</font>：tcpdump在Linux服务端使用，对使用者的要求比较高，需要对网络很熟悉。（真正的高手专用）</li><li><font color="red">WireShark</font>：拥有各个平台的可视化界面，所以对使用者要求比较低。（分析辅助提示功能做得很棒）</li></ul><h3 id="3、tcpdump最常见的用法？（先记录一下，后续再看吧）"><a href="#3、tcpdump最常见的用法？（先记录一下，后续再看吧）" class="headerlink" title="3、tcpdump最常见的用法？（先记录一下，后续再看吧）"></a>3、tcpdump最常见的用法？（先记录一下，后续再看吧）</h3><img src="/2022/06/19/WebRTC%E5%85%A5%E9%97%A8/day10%E7%AB%AF%E5%AF%B9%E7%AB%AF%E5%9F%BA%E6%9C%AC%E6%B5%81%E7%A8%8B/image-20220619081627151.png" class="" title="image-20220619081627151"><h3 id="4、Mac下如何知道自己有哪些网卡？"><a href="#4、Mac下如何知道自己有哪些网卡？" class="headerlink" title="4、Mac下如何知道自己有哪些网卡？"></a>4、Mac下如何知道自己有哪些网卡？</h3><ul><li>在终端使用 <code>ifconfig</code> 命令即可查看</li></ul><h3 id="5、【掌握】WireShark的逻辑运算方式有哪些？"><a href="#5、【掌握】WireShark的逻辑运算方式有哪些？" class="headerlink" title="5、【掌握】WireShark的逻辑运算方式有哪些？"></a>5、【掌握】WireShark的逻辑运算方式有哪些？</h3><ul><li>与： <code>and</code> 或 <code>&amp;&amp;</code></li><li>或：<code>or</code> 或 <code>||</code></li><li>非：<code>not</code> 或 <code>！</code></li></ul><h3 id="6、【掌握】WireShark的判断语句有哪些？"><a href="#6、【掌握】WireShark的判断语句有哪些？" class="headerlink" title="6、【掌握】WireShark的判断语句有哪些？"></a>6、【掌握】WireShark的判断语句有哪些？</h3><ul><li>等于：<code>eq</code> 或 <code>==</code></li><li>小于：<code>lt</code> 或 <code>&lt;</code></li><li>大于：<code>gt</code> 或 <code>&gt;</code></li><li>小于等于：<code>le</code> 或 <code>&lt;=</code></li><li>大于等于：<code>ge</code> 或 <code>&gt;=</code></li><li>不等于：<code>ne</code> 或 <code>!=</code></li></ul><h3 id="7、【掌握】WireShark如何按照协议进行过滤？"><a href="#7、【掌握】WireShark如何按照协议进行过滤？" class="headerlink" title="7、【掌握】WireShark如何按照协议进行过滤？"></a>7、【掌握】WireShark如何按照协议进行过滤？</h3><ul><li>stun</li><li>tcp</li><li>udp</li><li>注意都用小写</li></ul><h3 id="8、【掌握】WireShark-如何按照ip地址或端口号过滤？"><a href="#8、【掌握】WireShark-如何按照ip地址或端口号过滤？" class="headerlink" title="8、【掌握】WireShark 如何按照ip地址或端口号过滤？"></a>8、【掌握】WireShark 如何按照<code>ip地址</code>或<code>端口号</code>过滤？</h3><ul><li><font color="red">按ip地址过滤</font>：<ul><li>ip.dst &#x3D;&#x3D; 172.172.172.172（按目的地址过滤）</li><li>ip.src &#x3D; 192.168.0.1 （按源地址过滤）</li><li>ip.addr &#x3D; 192.168.0.1（源或目的地址中包含此ip即可）</li></ul></li><li><font color="red">按端口号过滤</font>：<ul><li>tcp.port &#x3D;&#x3D; 8080</li><li>udp.port &#x3D;&#x3D; 8080</li><li>udp.dstport &#x3D;&#x3D; 3478</li><li>udp.srcport &#x3D;&#x3D; 3478</li></ul></li></ul><h2 id="二、端对端1V1传输基本流程"><a href="#二、端对端1V1传输基本流程" class="headerlink" title="二、端对端1V1传输基本流程"></a>二、端对端1V1传输基本流程</h2><h3 id="1、简述WebRTC媒体协商的核心过程？（4个）"><a href="#1、简述WebRTC媒体协商的核心过程？（4个）" class="headerlink" title="1、简述WebRTC媒体协商的核心过程？（4个）"></a>1、简述WebRTC<code>媒体协商</code>的核心过程？（4个）</h3><ul><li>Amy：创建Offer，设置setLocalDescription</li><li>Bob：收到Offer，设置setRemoteDescription</li><li>Bob：创建Answer，设置setLocalDescription</li><li>Amy：收到answer，设置setRemoteDescription</li></ul><img src="/2022/06/19/WebRTC%E5%85%A5%E9%97%A8/day10%E7%AB%AF%E5%AF%B9%E7%AB%AF%E5%9F%BA%E6%9C%AC%E6%B5%81%E7%A8%8B/image-20220619083122853.png" class="" title="image-20220619083122853"><h3 id="2、端对端链接完整流程？（画得太好了，有空自己画一画，一定要）"><a href="#2、端对端链接完整流程？（画得太好了，有空自己画一画，一定要）" class="headerlink" title="2、端对端链接完整流程？（画得太好了，有空自己画一画，一定要）"></a>2、端对端链接完整流程？（画得太好了，有空自己画一画，一定要）</h3><ul><li>①媒体协商</li><li>②其次是交换Candidate，进行ICE过程</li><li>③流媒体传输</li></ul><img src="/2022/06/19/WebRTC%E5%85%A5%E9%97%A8/day10%E7%AB%AF%E5%AF%B9%E7%AB%AF%E5%9F%BA%E6%9C%AC%E6%B5%81%E7%A8%8B/image-20220619083342751.png" class="" title="image-20220619083342751"><h2 id="三、端对端1V1传输基本流程-代码实现"><a href="#三、端对端1V1传输基本流程-代码实现" class="headerlink" title="三、端对端1V1传输基本流程 - 代码实现"></a>三、端对端1V1传输基本流程 - 代码实现</h2><ul><li>html代码实现</li></ul><figure class="highlight html"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></div></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>RTCPeerConnection<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">link</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">&quot;stylesheet&quot;</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;css/main.css&quot;</span>/&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">video</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;localVideo&quot;</span> <span class="hljs-attr">autoplay</span> <span class="hljs-attr">playsinline</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">video</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">video</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;remoteVideo&quot;</span> <span class="hljs-attr">autoplay</span> <span class="hljs-attr">playsinline</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">video</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;start&quot;</span>&gt;</span>start<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;call&quot;</span>&gt;</span>call<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;hangup&quot;</span>&gt;</span>hang up<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;https://webrtc.github.io/adapter/adapter-latest.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;./js/main.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br><br></code></pre></td></tr></table></figure><ul><li>css代码实现</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-comment">/*</span><br><span class="hljs-comment"> *  Copyright (c) 2015 The WebRTC project authors. All Rights Reserved.</span><br><span class="hljs-comment"> *</span><br><span class="hljs-comment"> *  Use of this source code is governed by a BSD-style license</span><br><span class="hljs-comment"> *  that can be found in the LICENSE file in the root of the source</span><br><span class="hljs-comment"> *  tree.</span><br><span class="hljs-comment"> */</span><br><span class="hljs-selector-tag">button</span> &#123;<br>  <span class="hljs-attribute">margin</span>: <span class="hljs-number">0</span> <span class="hljs-number">20px</span> <span class="hljs-number">25px</span> <span class="hljs-number">0</span>;<br>  <span class="hljs-attribute">vertical-align</span>: top;<br>  <span class="hljs-attribute">width</span>: <span class="hljs-number">134px</span>;<br>&#125;<br><br><span class="hljs-selector-tag">div</span><span class="hljs-selector-id">#getUserMedia</span> &#123;<br>  <span class="hljs-attribute">padding</span>: <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">8px</span> <span class="hljs-number">0</span>;<br>&#125;<br><br><span class="hljs-selector-tag">div</span><span class="hljs-selector-class">.input</span> &#123;<br>  <span class="hljs-attribute">display</span>: inline-block;<br>  <span class="hljs-attribute">margin</span>: <span class="hljs-number">0</span> <span class="hljs-number">4px</span> <span class="hljs-number">0</span> <span class="hljs-number">0</span>;<br>  <span class="hljs-attribute">vertical-align</span>: top;<br>  <span class="hljs-attribute">width</span>: <span class="hljs-number">310px</span>;<br>&#125;<br><br><span class="hljs-selector-tag">div</span><span class="hljs-selector-class">.input</span> &gt; <span class="hljs-selector-tag">div</span> &#123;<br>  <span class="hljs-attribute">margin</span>: <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">20px</span> <span class="hljs-number">0</span>;<br>  <span class="hljs-attribute">vertical-align</span>: top;<br>&#125;<br><br><span class="hljs-selector-tag">div</span><span class="hljs-selector-class">.output</span> &#123;<br>  <span class="hljs-attribute">background-color</span>: <span class="hljs-number">#eee</span>;<br>  <span class="hljs-attribute">display</span>: inline-block;<br>  <span class="hljs-attribute">font-family</span>: <span class="hljs-string">&#x27;Inconsolata&#x27;</span>, <span class="hljs-string">&#x27;Courier New&#x27;</span>, monospace;<br>  <span class="hljs-attribute">font-size</span>: <span class="hljs-number">0.9em</span>;<br>  <span class="hljs-attribute">padding</span>: <span class="hljs-number">10px</span> <span class="hljs-number">10px</span> <span class="hljs-number">10px</span> <span class="hljs-number">25px</span>;<br>  <span class="hljs-attribute">position</span>: relative;<br>  <span class="hljs-attribute">top</span>: <span class="hljs-number">10px</span>;<br>  <span class="hljs-attribute">white-space</span>: pre;<br>  <span class="hljs-attribute">width</span>: <span class="hljs-number">270px</span>;<br>&#125;<br><br><span class="hljs-selector-tag">section</span><span class="hljs-selector-id">#statistics</span> <span class="hljs-selector-tag">div</span> &#123;<br>  <span class="hljs-attribute">display</span>: inline-block;<br>  <span class="hljs-attribute">font-family</span>: <span class="hljs-string">&#x27;Inconsolata&#x27;</span>, <span class="hljs-string">&#x27;Courier New&#x27;</span>, monospace;<br>  <span class="hljs-attribute">vertical-align</span>: top;<br>  <span class="hljs-attribute">width</span>: <span class="hljs-number">308px</span>;<br>&#125;<br><br><span class="hljs-selector-tag">section</span><span class="hljs-selector-id">#statistics</span> <span class="hljs-selector-tag">div</span><span class="hljs-selector-id">#senderStats</span> &#123;<br>  <span class="hljs-attribute">margin</span>: <span class="hljs-number">0</span> <span class="hljs-number">20px</span> <span class="hljs-number">0</span> <span class="hljs-number">0</span>;<br>&#125;<br><br><span class="hljs-selector-tag">section</span><span class="hljs-selector-id">#constraints</span> &gt; <span class="hljs-selector-tag">div</span> &#123;<br>  <span class="hljs-attribute">margin</span>: <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">20px</span> <span class="hljs-number">0</span>;<br>&#125;<br><br><span class="hljs-selector-tag">h2</span> &#123;<br>  <span class="hljs-attribute">margin</span>: <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">1em</span> <span class="hljs-number">0</span>;<br>&#125;<br><br><span class="hljs-selector-tag">section</span><span class="hljs-selector-id">#constraints</span> <span class="hljs-selector-tag">label</span> &#123;<br>  <span class="hljs-attribute">display</span>: inline-block;<br>  <span class="hljs-attribute">width</span>: <span class="hljs-number">156px</span>;<br>&#125;<br><br><span class="hljs-selector-tag">section</span> &#123;<br>  <span class="hljs-attribute">margin</span>: <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">20px</span> <span class="hljs-number">0</span>;<br>  <span class="hljs-attribute">padding</span>: <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">15px</span> <span class="hljs-number">0</span>;<br>&#125;<br><br><span class="hljs-selector-tag">video</span> &#123;<br>  <span class="hljs-attribute">background</span>: <span class="hljs-number">#222</span>;<br>  <span class="hljs-attribute">margin</span>: <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">0</span>;<br>  <span class="hljs-attr">--width</span>: <span class="hljs-number">45%</span>;<br>  <span class="hljs-attribute">width</span>: <span class="hljs-built_in">var</span>(--width);<br>  <span class="hljs-attribute">height</span>: <span class="hljs-built_in">var</span>(--width);<br>&#125;<br><br><span class="hljs-keyword">@media</span> screen <span class="hljs-keyword">and</span> (<span class="hljs-attribute">max-width</span>: <span class="hljs-number">720px</span>) &#123;<br>  <span class="hljs-selector-tag">button</span> &#123;<br>    <span class="hljs-attribute">font-weight</span>: <span class="hljs-number">500</span>;<br>    <span class="hljs-attribute">height</span>: <span class="hljs-number">56px</span>;<br>    <span class="hljs-attribute">line-height</span>: <span class="hljs-number">1.3em</span>;<br>    <span class="hljs-attribute">width</span>: <span class="hljs-number">90px</span>;<br>  &#125;<br><br>  <span class="hljs-selector-tag">div</span><span class="hljs-selector-id">#getUserMedia</span> &#123;<br>    <span class="hljs-attribute">padding</span>: <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">40px</span> <span class="hljs-number">0</span>;<br>  &#125;<br><br>  <span class="hljs-selector-tag">section</span><span class="hljs-selector-id">#statistics</span> <span class="hljs-selector-tag">div</span> &#123;<br>    <span class="hljs-attribute">width</span>: <span class="hljs-built_in">calc</span>(<span class="hljs-number">50%</span> - <span class="hljs-number">14px</span>);<br>  &#125;<br><br>&#125;<br><br></code></pre></td></tr></table></figure><ul><li>核心js代码实现（其实就是上面时序图的实现流程，所以说掌握时序图很重要）</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br></pre></td><td class="code"><pre><code class="hljs js"><br><span class="hljs-keyword">var</span> localVideo = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">querySelector</span>(<span class="hljs-string">&#x27;video#localVideo&#x27;</span>);<br><span class="hljs-keyword">var</span> remoteVideo = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">querySelector</span>(<span class="hljs-string">&#x27;video#remoteVideo&#x27;</span>);<br><span class="hljs-keyword">var</span> btnStart = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">querySelector</span>(<span class="hljs-string">&#x27;button#start&#x27;</span>);<br><span class="hljs-keyword">var</span> btnCall = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">querySelector</span>(<span class="hljs-string">&#x27;button#call&#x27;</span>);<br><span class="hljs-keyword">var</span> btnHangUp= <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">querySelector</span>(<span class="hljs-string">&#x27;button#hangup&#x27;</span>);<br><br><br><span class="hljs-keyword">var</span> localStream;<br><span class="hljs-keyword">var</span> pc1; <br><span class="hljs-keyword">var</span> pc2;<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">gotMediaStream</span>(<span class="hljs-params">stream</span>) &#123;<br>  localVideo.<span class="hljs-property">srcObject</span> = stream;<br>  localStream = stream;<br>&#125;<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">handleError</span>(<span class="hljs-params"></span>) &#123;<br>  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;Failed to call getUserMedia&quot;</span>, err);<br>&#125;<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">start</span>(<span class="hljs-params"></span>) &#123;<br>  <span class="hljs-keyword">var</span> constraints = &#123;<br>    <span class="hljs-attr">video</span>: <span class="hljs-literal">true</span>,<br>    <span class="hljs-attr">audio</span>:<span class="hljs-literal">false</span><br>  &#125;<br>  <span class="hljs-keyword">if</span>(!navigator.<span class="hljs-property">mediaDevices</span> || !navigator.<span class="hljs-property">mediaDevices</span>.<span class="hljs-property">getUserMedia</span>) &#123;<br>    <span class="hljs-keyword">return</span>;<br>  &#125; <span class="hljs-keyword">else</span> &#123;<br>    navigator.<span class="hljs-property">mediaDevices</span>.<span class="hljs-title function_">getUserMedia</span>(constraints)<br>    .<span class="hljs-title function_">then</span>(gotMediaStream)<br>    .<span class="hljs-title function_">catch</span>(handleError);<br>  &#125;<br>&#125;<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">gotAnswerDescription</span>(<span class="hljs-params">desc</span>) &#123;<br>  pc2.<span class="hljs-title function_">setLocalDescription</span>(desc);<br><br>  <span class="hljs-comment">//send sdp to caller</span><br>  <span class="hljs-comment">//recieve sdp from callee</span><br>  pc1.<span class="hljs-title function_">setRemoteDescription</span>(desc);<br>&#125;<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">gotLocalDescription</span>(<span class="hljs-params">desc</span>) &#123;<br>  pc1.<span class="hljs-title function_">setLocalDescription</span>(desc);<br><br>  <span class="hljs-comment">//send sdp to callee</span><br>  <span class="hljs-comment">//receive sdp from caller</span><br>  pc2.<span class="hljs-title function_">setRemoteDescription</span>(desc);<br>  pc2.<span class="hljs-title function_">createAnswer</span>().<span class="hljs-title function_">then</span>(gotAnswerDescription)<br>  .<span class="hljs-title function_">catch</span>(handleError);<br>&#125;<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">gotRemoteStream</span>(<span class="hljs-params">e</span>) &#123;<br>  <span class="hljs-keyword">if</span>(remoteVideo.<span class="hljs-property">srcObject</span> !== e.<span class="hljs-property">streams</span>[<span class="hljs-number">0</span>]) &#123;<br>    remoteVideo.<span class="hljs-property">srcObject</span> = e.<span class="hljs-property">streams</span>[<span class="hljs-number">0</span>];<br>  &#125;<br>&#125;<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">call</span>(<span class="hljs-params"></span>) &#123;<br>  <span class="hljs-keyword">var</span> offerOptions = &#123;<br><span class="hljs-attr">offerToReceiveAudio</span>: <span class="hljs-number">0</span>,<br><span class="hljs-attr">offerToReceiveVideo</span>: <span class="hljs-number">1</span> <br>  &#125;<br>  pc1 = <span class="hljs-keyword">new</span> <span class="hljs-title class_">RTCPeerConnection</span>();<br>  pc1.<span class="hljs-property">onicecandidate</span> = <span class="hljs-function">(<span class="hljs-params">e</span>) =&gt;</span> &#123;<br>    <span class="hljs-comment">//send candidate to peer</span><br>    <span class="hljs-comment">//receive candidate from peer</span><br>    pc2.<span class="hljs-title function_">addIceCandidate</span>(e.<span class="hljs-property">candidate</span>).<span class="hljs-title function_">catch</span>(handleError);<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;pc1 ICE candidate&#x27;</span>, e.<span class="hljs-property">candidate</span>);<br>  &#125;<br><br>pc1.<span class="hljs-property">iceconnectionstatechange</span> = <span class="hljs-function">(<span class="hljs-params">e</span>) =&gt;</span> &#123;<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">`pc1 ICE state: <span class="hljs-subst">$&#123;pc.iceConnectionState&#125;</span>`</span>);<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;ICE state change event: &#x27;</span>, e);<br>&#125;<br><br>  pc2 = <span class="hljs-keyword">new</span> <span class="hljs-title class_">RTCPeerConnection</span>();<br>  pc2.<span class="hljs-property">onicecandidate</span> = <span class="hljs-function">(<span class="hljs-params">e</span>) =&gt;</span> &#123;<br>    <span class="hljs-comment">//send candidate to peer</span><br>    <span class="hljs-comment">//receive candidate from peer</span><br>    pc1.<span class="hljs-title function_">addIceCandidate</span>(e.<span class="hljs-property">candidate</span>).<span class="hljs-title function_">catch</span>(handleError);<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;pc2 ICE candidate&#x27;</span>, e.<span class="hljs-property">candidate</span>);<br>  &#125;<br><br>pc2.<span class="hljs-property">iceconnectionstatechange</span> = <span class="hljs-function">(<span class="hljs-params">e</span>) =&gt;</span> &#123;<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">`pc2 ICE state: <span class="hljs-subst">$&#123;pc.iceConnectionState&#125;</span>`</span>);<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;ICE state change event: &#x27;</span>, e);<br>&#125;<br><br>  pc2.<span class="hljs-property">ontrack</span> = gotRemoteStream;<br><br>  <span class="hljs-comment">//add Stream to caller</span><br>  localStream.<span class="hljs-title function_">getTracks</span>().<span class="hljs-title function_">forEach</span>(<span class="hljs-function">(<span class="hljs-params">track</span>)=&gt;</span>&#123;<br>    pc1.<span class="hljs-title function_">addTrack</span>(track, localStream);<br>  &#125;);<br><br>  pc1.<span class="hljs-title function_">createOffer</span>(offerOptions)<br>  .<span class="hljs-title function_">then</span>(gotLocalDescription)<br>  .<span class="hljs-title function_">catch</span>(handleError);<br>&#125;<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">hangup</span>(<span class="hljs-params"></span>) &#123;<br>  pc1.<span class="hljs-title function_">close</span>();<br>  pc2.<span class="hljs-title function_">close</span>();<br>  pc1 = <span class="hljs-literal">null</span>;<br>  pc2 = <span class="hljs-literal">null</span>;<br>&#125;<br><br>btnStart.<span class="hljs-property">onclick</span> = start;<br>btnCall.<span class="hljs-property">onclick</span> = call;<br>btnHangUp.<span class="hljs-property">onclick</span> = hangup;<br></code></pre></td></tr></table></figure><ul><li>最终效果如下：</li></ul><img src="/2022/06/19/WebRTC%E5%85%A5%E9%97%A8/day10%E7%AB%AF%E5%AF%B9%E7%AB%AF%E5%9F%BA%E6%9C%AC%E6%B5%81%E7%A8%8B/image-20220619094922812.png" class="">]]></content>
    
    
    <categories>
      
      <category>WebRTC入门</category>
      
    </categories>
    
    
    <tags>
      
      <tag>音视频</tag>
      
      <tag>WebRTC</tag>
      
      <tag>WireShark</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>day09-WebRTC网络基础补充：P2P/STUN/TURN/ICE知识</title>
    <link href="/2022/06/18/WebRTC%E5%85%A5%E9%97%A8/day09%E7%BD%91%E7%BB%9C%E5%9F%BA%E7%A1%80/"/>
    <url>/2022/06/18/WebRTC%E5%85%A5%E9%97%A8/day09%E7%BD%91%E7%BB%9C%E5%9F%BA%E7%A1%80/</url>
    
    <content type="html"><![CDATA[<h2 id="一、基本概念先认识"><a href="#一、基本概念先认识" class="headerlink" title="一、基本概念先认识"></a>一、基本概念先认识</h2><h3 id="1、NAT的全称是什么？NAT是干什么的？"><a href="#1、NAT的全称是什么？NAT是干什么的？" class="headerlink" title="1、NAT的全称是什么？NAT是干什么的？"></a>1、NAT的全称是什么？NAT是干什么的？</h3><ul><li><font color="red">NAT</font>：Network Address Translation，即网络地址映射</li><li><font color="red">作用</font>：①解决IPV4地址不足的问题 ②保护NAT内部计算机的安全</li></ul><h3 id="2、STUN的全称是什么？STUN是干什么的？"><a href="#2、STUN的全称是什么？STUN是干什么的？" class="headerlink" title="2、STUN的全称是什么？STUN是干什么的？"></a>2、STUN的全称是什么？STUN是干什么的？</h3><ul><li><p><font color="red">STUN</font>：Simple Traversal of UDP Through NAT，即UDP对NAT的简单穿越方式（是一种协议）</p></li><li><p><font color="red">功能</font>：通过NAT穿越，内网的计算机与外网能够进行P2P连接通信（有点中介信息服务度的感觉）</p></li><li><p><font color="red">缺陷</font>：①STUN不适合支持TCP连接的穿越 ②STUN方式不支持对称NAT穿越</p></li><li><p>STUN的存在目的就是进行NAT穿越</p></li><li><p>STUN是典型的客户端&#x2F;服务端模式，客户端发送请求，服务端进行响应。</p></li><li><p>本章对STUN协议、协议头、协议体都有详细描述，日后需要再回来看。</p></li></ul><img src="/2022/06/18/WebRTC%E5%85%A5%E9%97%A8/day09%E7%BD%91%E7%BB%9C%E5%9F%BA%E7%A1%80/image-20220618215247077.png" class=""><h3 id="3、TURN的全称是什么？TURN是干什么的？"><a href="#3、TURN的全称是什么？TURN是干什么的？" class="headerlink" title="3、TURN的全称是什么？TURN是干什么的？"></a>3、TURN的全称是什么？TURN是干什么的？</h3><ul><li><font color="red">TURN</font>：Tranversal Using ReplayNAT，即通过Relay方式穿越NAT</li><li><font color="red">功能</font>：即私网用户发出的报文都要经过 TURNServer 进行 Relay 转发</li><li><font color="red">优点</font>：解决了STUN的无法穿越的问题</li><li>TURN简历在STUN之上，消息格式使用STUN格式消息</li><li>TURN Client 要求服务端分配一个公网IP和Port用户接收或发送数据。</li></ul><h3 id="4、ICE的全称是什么？ICE是干什么的？"><a href="#4、ICE的全称是什么？ICE是干什么的？" class="headerlink" title="4、ICE的全称是什么？ICE是干什么的？"></a><img src="/2022/06/18/WebRTC%E5%85%A5%E9%97%A8/day09%E7%BD%91%E7%BB%9C%E5%9F%BA%E7%A1%80/image-20220618215509316.png" class="">4、ICE的全称是什么？ICE是干什么的？</h3><ul><li><font color="red">ICE</font>：Interactive Connectivity EStablishment</li><li><font color="red">功能</font>：ICE不是一种协议，而是一个framework，它整合了STUN和TURN</li><li><font color="red">举例</font>：<code>从①局域网尝试、②NAT穿越尝试、③TRUN服务端中转 </code>这三种模式中，选一个最佳通信模式</li></ul><img src="/2022/06/18/WebRTC%E5%85%A5%E9%97%A8/day09%E7%BD%91%E7%BB%9C%E5%9F%BA%E7%A1%80/image-20220618215628498.png" class="" title="image-20220618215628498"><img src="/2022/06/18/WebRTC%E5%85%A5%E9%97%A8/day09%E7%BD%91%E7%BB%9C%E5%9F%BA%E7%A1%80/image-20220619081142118.png" class="" title="image-20220619081142118"><img src="/2022/06/18/WebRTC%E5%85%A5%E9%97%A8/day09%E7%BD%91%E7%BB%9C%E5%9F%BA%E7%A1%80/image-20220619081149307.png" class="" title="image-20220619081149307"><img src="/2022/06/18/WebRTC%E5%85%A5%E9%97%A8/day09%E7%BD%91%E7%BB%9C%E5%9F%BA%E7%A1%80/image-20220619081157868.png" class="" title="image-20220619081157868"><h2 id="二、更深入认识NAT"><a href="#二、更深入认识NAT" class="headerlink" title="二、更深入认识NAT"></a>二、更深入认识NAT</h2><h3 id="1、再次认识NAT"><a href="#1、再次认识NAT" class="headerlink" title="1、再次认识NAT"></a>1、再次认识NAT</h3><ul><li>NAT就是内网地址转换到公网地址</li><li>简单来说就是一张地址<code>映射表</code></li></ul><h3 id="2、NAT有哪四个种类？"><a href="#2、NAT有哪四个种类？" class="headerlink" title="2、NAT有哪四个种类？"></a>2、NAT有哪四个种类？</h3><ul><li>完全锥型NAT</li><li>地址限制锥型NAT</li><li>端口限制锥型NAT</li><li>对称型NAT</li></ul><h3 id="3、什么是完全锥型NAT？"><a href="#3、什么是完全锥型NAT？" class="headerlink" title="3、什么是完全锥型NAT？"></a>3、什么是完全锥型NAT？</h3><ul><li><p>Full cone NAT</p></li><li><p>内部机器A访问外网机器C，NAT打开一个端口，后面<strong>外网的任意ip和任意port</strong>都可以访问这个端口，也就是<strong>任意ip+任意port</strong>可以访问机器A</p></li></ul><img src="/2022/06/18/WebRTC%E5%85%A5%E9%97%A8/day09%E7%BD%91%E7%BB%9C%E5%9F%BA%E7%A1%80/image-20220618214518833.png" class="" title="image-20220618214518833"><h3 id="4、什么是地址限制锥型NAT？"><a href="#4、什么是地址限制锥型NAT？" class="headerlink" title="4、什么是地址限制锥型NAT？"></a>4、什么是地址限制锥型NAT？</h3><ul><li>Address Restricted Cone</li><li>内部机器A访问外网机器C，NAT打开一个端口，后面<strong>机器C的任意port</strong>可以访问这个端口，就是只能<strong>固定ip+任意port</strong>访问A</li></ul><img src="/2022/06/18/WebRTC%E5%85%A5%E9%97%A8/day09%E7%BD%91%E7%BB%9C%E5%9F%BA%E7%A1%80/image-20220618214528801.png" class="" title="image-20220618214528801"><h3 id="5、什么是端口限制锥型NAT？"><a href="#5、什么是端口限制锥型NAT？" class="headerlink" title="5、什么是端口限制锥型NAT？"></a>5、什么是端口限制锥型NAT？</h3><ul><li>Port Restricted Cone</li><li>内部机器A访问外网机器C，NAT打开一个端口，后面<strong>机器C的固定port</strong>可以访问这个端口，就是只能<strong>固定ip+固定port</strong>访问A</li></ul><img src="/2022/06/18/WebRTC%E5%85%A5%E9%97%A8/day09%E7%BD%91%E7%BB%9C%E5%9F%BA%E7%A1%80/image-20220618214540839.png" class="" title="image-20220618214540839"><h3 id="6、什么是对称型NAT？"><a href="#6、什么是对称型NAT？" class="headerlink" title="6、什么是对称型NAT？"></a>6、什么是对称型NAT？</h3><ul><li>Symmetric</li><li>连接不同的外部Server，NAT打开的端口会变化。也就是内部机器A连接外网机器B时，NAT会打开一个端口，连接外网机器C时又会打开另外一个端口。</li></ul><img src="/2022/06/18/WebRTC%E5%85%A5%E9%97%A8/day09%E7%BD%91%E7%BB%9C%E5%9F%BA%E7%A1%80/image-20220618214550416.png" class="" title="image-20220618214550416"><h2 id="三、认识NAT穿越过程"><a href="#三、认识NAT穿越过程" class="headerlink" title="三、认识NAT穿越过程"></a>三、认识NAT穿越过程</h2><h3 id="1、NAT穿越原理是什么？"><a href="#1、NAT穿越原理是什么？" class="headerlink" title="1、NAT穿越原理是什么？"></a>1、NAT穿越原理是什么？</h3><ul><li>基于各种NAT特性，让两台私网机器能够p2p通信</li></ul><img src="/2022/06/18/WebRTC%E5%85%A5%E9%97%A8/day09%E7%BD%91%E7%BB%9C%E5%9F%BA%E7%A1%80/image-20220618214733843.png" class=""><h3 id="2、NAT能穿越成功的组合？（记住哪两种不可能打通即可）"><a href="#2、NAT能穿越成功的组合？（记住哪两种不可能打通即可）" class="headerlink" title="2、NAT能穿越成功的组合？（记住哪两种不可能打通即可）"></a>2、NAT能穿越成功的组合？（记住哪两种不可能打通即可）</h3><img src="/2022/06/18/WebRTC%E5%85%A5%E9%97%A8/day09%E7%BD%91%E7%BB%9C%E5%9F%BA%E7%A1%80/image-20220618214814385.png" class=""><h3 id="3、NAT类型判断过程？（这图很经典，后面不懂再回来看）"><a href="#3、NAT类型判断过程？（这图很经典，后面不懂再回来看）" class="headerlink" title="3、NAT类型判断过程？（这图很经典，后面不懂再回来看）"></a>3、NAT类型判断过程？（这图很经典，后面不懂再回来看）</h3><img src="/2022/06/18/WebRTC%E5%85%A5%E9%97%A8/day09%E7%BD%91%E7%BB%9C%E5%9F%BA%E7%A1%80/image-20220618214917186.png" class="" title="image-20220618214917186">]]></content>
    
    
    <categories>
      
      <category>WebRTC入门</category>
      
    </categories>
    
    
    <tags>
      
      <tag>音视频</tag>
      
      <tag>WebRTC</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>day08-WebRTC信令服务器实现</title>
    <link href="/2022/06/18/WebRTC%E5%85%A5%E9%97%A8/day08%E4%BF%A1%E4%BB%A4%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%AE%9E%E7%8E%B0/"/>
    <url>/2022/06/18/WebRTC%E5%85%A5%E9%97%A8/day08%E4%BF%A1%E4%BB%A4%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%AE%9E%E7%8E%B0/</url>
    
    <content type="html"><![CDATA[<h2 id="一、认识-socket-io"><a href="#一、认识-socket-io" class="headerlink" title="一、认识 socket.io"></a>一、认识 socket.io</h2><h3 id="1、借助-socket-io-发送给某些对象的相关API？"><a href="#1、借助-socket-io-发送给某些对象的相关API？" class="headerlink" title="1、借助 socket.io 发送给某些对象的相关API？"></a>1、借助 socket.io 发送给某些对象的相关API？</h3><figure class="highlight js"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></div></td><td class="code"><pre><code class="hljs js"><span class="hljs-comment">//给本次连接发消息</span><br>socket.<span class="hljs-title function_">emit</span>()<br><br><span class="hljs-comment">//给某个房间内所有人发消息</span><br>io.<span class="hljs-title function_">in</span>(room).<span class="hljs-title function_">emit</span>()<br><br><span class="hljs-comment">//除本连接外，给某个房间内所有人发消息</span><br>socket.<span class="hljs-title function_">to</span>(room).<span class="hljs-title function_">emit</span>()<br><br><span class="hljs-comment">//除本连接外，给所有人发消息</span><br>socket.<span class="hljs-property">brocast</span>.<span class="hljs-title function_">emit</span>()<br></code></pre></td></tr></table></figure><h3 id="2、socket-io-监听和发送具体消息的格式？"><a href="#2、socket-io-监听和发送具体消息的格式？" class="headerlink" title="2、socket.io 监听和发送具体消息的格式？"></a>2、socket.io 监听和发送具体消息的格式？</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-comment">//发送action命令</span><br><span class="hljs-attr">S</span>:socket.<span class="hljs-title function_">emit</span>(<span class="hljs-string">&#x27;action&#x27;</span>);<br><span class="hljs-attr">C</span>:socket.<span class="hljs-title function_">on</span>(<span class="hljs-string">&#x27;action&#x27;</span>, <span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;...&#125;);<br><br><span class="hljs-comment">//发送action命令，还有data数据</span><br><span class="hljs-attr">S</span>:socket.<span class="hljs-title function_">emit</span>(<span class="hljs-string">&#x27;action&#x27;</span>, data);<br><span class="hljs-attr">C</span>:socket.<span class="hljs-title function_">on</span>(<span class="hljs-string">&#x27;action&#x27;</span>, <span class="hljs-keyword">function</span>(<span class="hljs-params">data</span>)&#123;...&#125;);<br><br><span class="hljs-comment">//发送action命令，还有两个数据</span><br><span class="hljs-attr">S</span>:socket.<span class="hljs-title function_">emit</span>(<span class="hljs-string">&#x27;action&#x27;</span>, arg1, arg2);<br><span class="hljs-attr">C</span>:socket.<span class="hljs-title function_">on</span>(<span class="hljs-string">&#x27;action&#x27;</span>, <span class="hljs-keyword">function</span>(<span class="hljs-params">arg1, arg2</span>)&#123;...&#125;);<br>                                             <br><span class="hljs-comment">//发送action命令，还有回调函数</span><br><span class="hljs-attr">S</span>:socket.<span class="hljs-title function_">emit</span>(<span class="hljs-string">&#x27;action&#x27;</span>, data, <span class="hljs-keyword">function</span>(<span class="hljs-params">arg1, arg2</span>)&#123;...&#125;);<br><span class="hljs-attr">C</span>:socket.<span class="hljs-title function_">on</span>(<span class="hljs-string">&#x27;action&#x27;</span>, <span class="hljs-keyword">function</span>(<span class="hljs-params">data, fn</span>)&#123;...&#125;);<br></code></pre></td></tr></table></figure><h3 id="3、在WebRTC中信令服务器有什么作用？"><a href="#3、在WebRTC中信令服务器有什么作用？" class="headerlink" title="3、在WebRTC中信令服务器有什么作用？"></a>3、在WebRTC中信令服务器有什么作用？</h3><img src="/2022/06/18/WebRTC%E5%85%A5%E9%97%A8/day08%E4%BF%A1%E4%BB%A4%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%AE%9E%E7%8E%B0/image-20220618190417842.png" class="" title="image-20220618190417842"><ul><li>①终端之间交换<font color="red">媒体相关信息</font>（比如编码格式、是否支持音频、是否支持视频等）</li><li>②终端之间交换<font color="red">网络相关信息</font>（比如ip地址、local地址、公网地址等）</li><li>③终端之间进行<font color="red">一些业务操作</font> （比如加入房间、退出房间等）</li></ul><h3 id="4、socket-io是基于TCP还是UDP呢？"><a href="#4、socket-io是基于TCP还是UDP呢？" class="headerlink" title="4、socket.io是基于TCP还是UDP呢？"></a>4、socket.io是基于TCP还是UDP呢？</h3><ul><li>对于音视频来讲可以使用UDP，丢了一两帧数据关系不大。</li><li>但是对于信令或业务请求来讲，一定要能拿到可靠结果，那就需要TCP来保证传输的可靠性。</li><li>socket.io 是基于TCP的</li></ul><h2 id="二、代码借助-socket-io-实现简易版聊天室"><a href="#二、代码借助-socket-io-实现简易版聊天室" class="headerlink" title="二、代码借助 socket.io 实现简易版聊天室"></a>二、代码借助 socket.io 实现简易版聊天室</h2><h3 id="1、安装依赖库"><a href="#1、安装依赖库" class="headerlink" title="1、安装依赖库"></a>1、安装依赖库</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">这里进行指定版本，防止一些方法已经发送变化</span><br>npm install log4js@5.2.0<br>npm install socket.io@2.0.4  <br></code></pre></td></tr></table></figure><h3 id="2、代码实现聊天室-服务端部分"><a href="#2、代码实现聊天室-服务端部分" class="headerlink" title="2、代码实现聊天室(服务端部分)"></a>2、代码实现聊天室(服务端部分)</h3><ul><li>服务端代码</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-comment">//服务端代码</span><br><span class="hljs-meta">&#x27;use strict&#x27;</span><br><br><span class="hljs-keyword">var</span> http = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;http&#x27;</span>);<br><span class="hljs-keyword">var</span> serveIndex = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;serve-index&#x27;</span>);<br><span class="hljs-keyword">var</span> express = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;express&#x27;</span>);<br><span class="hljs-keyword">var</span> socketIo = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;socket.io&#x27;</span>);<br><span class="hljs-keyword">var</span> log4js = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;log4js&#x27;</span>);<br><br><span class="hljs-comment">//log4js的基本配置（无须多做了解）</span><br>log4js.<span class="hljs-title function_">configure</span>(&#123;<br>  <span class="hljs-attr">appenders</span>: &#123;<br>      <span class="hljs-attr">file</span>: &#123;<br>          <span class="hljs-attr">type</span>: <span class="hljs-string">&#x27;file&#x27;</span>,<br>          <span class="hljs-attr">filename</span>: <span class="hljs-string">&#x27;app.log&#x27;</span>,<br>          <span class="hljs-attr">layout</span>: &#123;<br>              <span class="hljs-attr">type</span>: <span class="hljs-string">&#x27;pattern&#x27;</span>,<br>              <span class="hljs-attr">pattern</span>: <span class="hljs-string">&#x27;%r %p - %m&#x27;</span>,<br>          &#125;<br>      &#125;<br>  &#125;,<br>  <span class="hljs-attr">categories</span>: &#123;<br>     <span class="hljs-attr">default</span>: &#123;<br>        <span class="hljs-attr">appenders</span>: [<span class="hljs-string">&#x27;file&#x27;</span>],<br>        <span class="hljs-attr">level</span>: <span class="hljs-string">&#x27;debug&#x27;</span><br>     &#125;<br>  &#125;<br>&#125;);<br><br><span class="hljs-keyword">var</span> logger = log4js.<span class="hljs-title function_">getLogger</span>();<br><span class="hljs-keyword">var</span> app = <span class="hljs-title function_">express</span>();<br><br><span class="hljs-comment">//顺序不能换</span><br>app.<span class="hljs-title function_">use</span>(<span class="hljs-title function_">serveIndex</span>(<span class="hljs-string">&#x27;./public&#x27;</span>));<br>app.<span class="hljs-title function_">use</span>(express.<span class="hljs-title function_">static</span>(<span class="hljs-string">&#x27;./public&#x27;</span>));<br><br><span class="hljs-keyword">var</span> http_server = http.<span class="hljs-title function_">createServer</span>(app);<br>http_server.<span class="hljs-title function_">listen</span>(<span class="hljs-number">9980</span>, <span class="hljs-string">&#x27;127.0.0.1&#x27;</span>);<br><br><span class="hljs-comment">//绑定socket.io到http服务</span><br><span class="hljs-keyword">var</span> io = socketIo.<span class="hljs-title function_">listen</span>(http_server)<br><br>io.<span class="hljs-property">sockets</span>.<span class="hljs-title function_">on</span>(<span class="hljs-string">&#x27;connection&#x27;</span>, <span class="hljs-function">(<span class="hljs-params">socket</span>)=&gt;</span> &#123;<br>  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;有人发起了链接请求111&quot;</span>);<br>  <br>  socket.<span class="hljs-title function_">on</span>(<span class="hljs-string">&#x27;message&#x27;</span>, <span class="hljs-function">(<span class="hljs-params">room, data</span>)=&gt;</span> &#123;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;message&quot;</span> + room + data);<br>    io.<span class="hljs-title function_">in</span>(room).<span class="hljs-title function_">emit</span>(<span class="hljs-string">&#x27;message&#x27;</span>, room, socket.<span class="hljs-property">id</span>, data); <span class="hljs-comment">//房间内所有人，除了自己</span><br>  &#125;);<br><br>  socket.<span class="hljs-title function_">on</span>(<span class="hljs-string">&#x27;join&#x27;</span>, <span class="hljs-function">(<span class="hljs-params">room</span>)=&gt;</span> &#123;<br>socket.<span class="hljs-title function_">join</span>(room);<br><span class="hljs-keyword">var</span> myRoom = io.<span class="hljs-property">sockets</span>.<span class="hljs-property">adapter</span>.<span class="hljs-property">rooms</span>[room];<br><span class="hljs-keyword">var</span> users = <span class="hljs-title class_">Object</span>.<span class="hljs-title function_">keys</span>(myRoom.<span class="hljs-property">sockets</span>).<span class="hljs-property">length</span>;<br>logger.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;the number of user in room is: &#x27;</span> + users);<br> socket.<span class="hljs-title function_">emit</span>(<span class="hljs-string">&#x27;joined&#x27;</span>, room, socket.<span class="hljs-property">id</span>);<br>  &#125;);<br><br>  socket.<span class="hljs-title function_">on</span>(<span class="hljs-string">&#x27;leave&#x27;</span>, <span class="hljs-function">(<span class="hljs-params">room</span>)=&gt;</span> &#123;<br><span class="hljs-keyword">var</span> myRoom = io.<span class="hljs-property">sockets</span>.<span class="hljs-property">adapter</span>.<span class="hljs-property">rooms</span>[room];<br><span class="hljs-keyword">var</span> users = <span class="hljs-title class_">Object</span>.<span class="hljs-title function_">keys</span>(myRoom.<span class="hljs-property">sockets</span>).<span class="hljs-property">length</span>;<br>logger.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;the number of user in room is: &#x27;</span> + (users-<span class="hljs-number">1</span>));<br><br>socket.<span class="hljs-title function_">leave</span>(room);<br>socket.<span class="hljs-title function_">to</span>(room).<span class="hljs-title function_">emit</span>(<span class="hljs-string">&#x27;bye&#x27;</span>, room, socket.<span class="hljs-property">id</span>)<span class="hljs-comment">//房间内所有人,除自己外</span><br> socket.<span class="hljs-title function_">emit</span>(<span class="hljs-string">&#x27;leaved&#x27;</span>, room, socket.<span class="hljs-property">id</span>);<br>&#125;);<br>&#125;);<br><br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;webrtc服务启动成功&quot;</span>);<br><br><br><br></code></pre></td></tr></table></figure><h3 id="3、代码实现客户端部分"><a href="#3、代码实现客户端部分" class="headerlink" title="3、代码实现客户端部分"></a>3、代码实现客户端部分</h3><ul><li>index.html 代码部分</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-comment">&lt;!-- index.html 代码部分 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>Chat Room<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">link</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">&quot;stylesheet&quot;</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;./css/main.css&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">link</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">table</span> <span class="hljs-attr">align</span>=<span class="hljs-string">&quot;center&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">tr</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">label</span>&gt;</span>UserName: <span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;Chrome&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">text</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;username&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">input</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">tr</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">tr</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">label</span>&gt;</span>room: <span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;112222&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">text</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;room&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">input</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;connect&quot;</span>&gt;</span>Conect<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;leave&quot;</span> <span class="hljs-attr">disabled</span>&gt;</span>Leave<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">tr</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">tr</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">label</span>&gt;</span>Content: <span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">br</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">textarea</span> <span class="hljs-attr">disabled</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;line-height: 1.5;&quot;</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;output&quot;</span> <span class="hljs-attr">rows</span>=<span class="hljs-string">&quot;10&quot;</span> <span class="hljs-attr">cols</span>=<span class="hljs-string">&quot;100&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">textarea</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">tr</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">tr</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">label</span>&gt;</span>Input: <span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">br</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">textarea</span> <span class="hljs-attr">disabled</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;input&quot;</span> <span class="hljs-attr">rows</span>=<span class="hljs-string">&quot;3&quot;</span> <span class="hljs-attr">cols</span>=<span class="hljs-string">&quot;100&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">textarea</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">tr</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">tr</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;send&quot;</span>&gt;</span>Send<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">tr</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">table</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;https://cdnjs.cloudflare.com/ajax/libs/socket.io/2.0.3/socket.io.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;./js/client.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br><br></code></pre></td></tr></table></figure><ul><li>.&#x2F;js&#x2F;client.js 代码实现</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-comment">// ./js/client.js 代码实现</span><br><span class="hljs-meta"></span><br><span class="hljs-meta">&#x27;use strict&#x27;</span><br><span class="hljs-keyword">var</span> userName = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">querySelector</span>(<span class="hljs-string">&#x27;input#username&#x27;</span>);<br><span class="hljs-keyword">var</span> inputRoom = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">querySelector</span>(<span class="hljs-string">&#x27;input#room&#x27;</span>);<br><span class="hljs-keyword">var</span> btnConnect = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">querySelector</span>(<span class="hljs-string">&#x27;button#connect&#x27;</span>);<br><span class="hljs-keyword">var</span> btnLeave = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">querySelector</span>(<span class="hljs-string">&#x27;button#leave&#x27;</span>);<br><span class="hljs-keyword">var</span> outputArea = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">querySelector</span>(<span class="hljs-string">&#x27;textarea#output&#x27;</span>);<br><span class="hljs-keyword">var</span> inputArea = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">querySelector</span>(<span class="hljs-string">&#x27;textarea#input&#x27;</span>);<br><span class="hljs-keyword">var</span> btnSend = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">querySelector</span>(<span class="hljs-string">&#x27;button#send&#x27;</span>);<br><br><span class="hljs-keyword">var</span> socket;<br><span class="hljs-keyword">var</span> room;<br><br>btnConnect.<span class="hljs-property">onclick</span> = <span class="hljs-function">()=&gt;</span> &#123;<br><span class="hljs-comment">//connect</span><br>socket = io.<span class="hljs-title function_">connect</span>();<br><br><span class="hljs-comment">//recieve message</span><br>socket.<span class="hljs-title function_">on</span>(<span class="hljs-string">&#x27;joined&#x27;</span>, <span class="hljs-function">(<span class="hljs-params">room, id</span>) =&gt;</span> &#123;<br>btnConnect.<span class="hljs-property">disabled</span> = <span class="hljs-literal">true</span>;<br>btnLeave.<span class="hljs-property">disabled</span> = <span class="hljs-literal">false</span>;<br>inputArea.<span class="hljs-property">disabled</span> = <span class="hljs-literal">false</span>;<br>btnSend.<span class="hljs-property">disabled</span> = <span class="hljs-literal">false</span>;<br>&#125;);<br><br>socket.<span class="hljs-title function_">on</span>(<span class="hljs-string">&#x27;leaved&#x27;</span>, <span class="hljs-function">(<span class="hljs-params">room, id</span>) =&gt;</span> &#123;<br>btnConnect.<span class="hljs-property">disabled</span> = <span class="hljs-literal">false</span>;<br>btnLeave.<span class="hljs-property">disabled</span> = <span class="hljs-literal">true</span>;<br>inputArea.<span class="hljs-property">disabled</span> = <span class="hljs-literal">true</span>;<br>btnSend.<span class="hljs-property">disabled</span> = <span class="hljs-literal">true</span>;<br><br>socket.<span class="hljs-title function_">disconnect</span>();<br>&#125;);<br><br>socket.<span class="hljs-title function_">on</span>(<span class="hljs-string">&#x27;message&#x27;</span>, <span class="hljs-function">(<span class="hljs-params">room, id, data</span>) =&gt;</span> &#123;<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;message:&#x27;</span> + room + id + data);<br>outputArea.<span class="hljs-property">scrollTop</span> = outputArea.<span class="hljs-property">scrollHeight</span>; <span class="hljs-comment">//窗口总是显示最后的内容</span><br>outputArea.<span class="hljs-property">value</span> = outputArea.<span class="hljs-property">value</span> + data + <span class="hljs-string">&quot;\n\r&quot;</span>;<br>&#125;)<br><br>socket.<span class="hljs-title function_">on</span>(<span class="hljs-string">&quot;disconnect&quot;</span>, <span class="hljs-function">(<span class="hljs-params">socket</span>) =&gt;</span> &#123;<br>    btnConnect.<span class="hljs-property">disabled</span> = <span class="hljs-literal">false</span>;<br>    btnLeave.<span class="hljs-property">disabled</span> = <span class="hljs-literal">true</span>;<br>    inputArea.<span class="hljs-property">disabled</span> = <span class="hljs-literal">true</span>;<br>    btnSend.<span class="hljs-property">disabled</span> = <span class="hljs-literal">true</span>;<br>  &#125;);<br><br><span class="hljs-comment">//send message</span><br>room = inputRoom.<span class="hljs-property">value</span>;<br>socket.<span class="hljs-title function_">emit</span>(<span class="hljs-string">&#x27;join&#x27;</span>, room);<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(userName.<span class="hljs-property">value</span> + <span class="hljs-string">&quot;发送join信息&quot;</span>);<br>&#125;<br><br>btnSend.<span class="hljs-property">onclick</span> = <span class="hljs-function">() =&gt;</span> &#123;<br><span class="hljs-keyword">var</span> data = inputArea.<span class="hljs-property">value</span>;<br>data = userName.<span class="hljs-property">value</span> + <span class="hljs-string">&quot;:&quot;</span> + data;<br>socket.<span class="hljs-title function_">emit</span>(<span class="hljs-string">&#x27;message&#x27;</span>, room, data);<br>inputArea.<span class="hljs-property">value</span> = <span class="hljs-string">&#x27;&#x27;</span>;<br>&#125;<br><br>btnLeave.<span class="hljs-property">onclick</span> = <span class="hljs-function">() =&gt;</span> &#123;<br>room = inputRoom.<span class="hljs-property">value</span>;<br>socket.<span class="hljs-title function_">emit</span>(<span class="hljs-string">&#x27;leave&#x27;</span>, room);<br>&#125;<br><br>inputArea.<span class="hljs-property">onkeypress</span> = <span class="hljs-function">(<span class="hljs-params">event</span>) =&gt;</span> &#123;<br>  <span class="hljs-comment">//event = event || window.event;</span><br>  <span class="hljs-keyword">if</span> (event.<span class="hljs-property">keyCode</span> == <span class="hljs-number">13</span>) &#123;<br>    <span class="hljs-comment">//回车发送消息</span><br>    <span class="hljs-keyword">var</span> data = inputArea.<span class="hljs-property">value</span>;<br>    data = userName.<span class="hljs-property">value</span> + <span class="hljs-string">&quot;:&quot;</span> + data;<br>    socket.<span class="hljs-title function_">emit</span>(<span class="hljs-string">&quot;message&quot;</span>, room, data);<br>    inputArea.<span class="hljs-property">value</span> = <span class="hljs-string">&quot;&quot;</span>;<br>    event.<span class="hljs-title function_">preventDefault</span>(); <span class="hljs-comment">//阻止默认行为</span><br>  &#125;<br>&#125;;<br></code></pre></td></tr></table></figure><h3 id="4、简易聊天室最终效果图如下"><a href="#4、简易聊天室最终效果图如下" class="headerlink" title="4、简易聊天室最终效果图如下"></a>4、简易聊天室最终效果图如下</h3><img src="/2022/06/18/WebRTC%E5%85%A5%E9%97%A8/day08%E4%BF%A1%E4%BB%A4%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%AE%9E%E7%8E%B0/image-20220618205623601.png" class="" title="最终实现safari和chrome聊天"><h3 id="5、附上packet-json文件内容"><a href="#5、附上packet-json文件内容" class="headerlink" title="5、附上packet.json文件内容"></a>5、附上packet.json文件内容</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs js">&#123;<br>  <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;webserver&quot;</span>,<br>  <span class="hljs-string">&quot;version&quot;</span>: <span class="hljs-string">&quot;1.0.0&quot;</span>,<br>  <span class="hljs-string">&quot;description&quot;</span>: <span class="hljs-string">&quot;&quot;</span>,<br>  <span class="hljs-string">&quot;main&quot;</span>: <span class="hljs-string">&quot;server.js&quot;</span>,<br>  <span class="hljs-string">&quot;dependencies&quot;</span>: &#123;<br>    <span class="hljs-string">&quot;express&quot;</span>: <span class="hljs-string">&quot;^4.18.1&quot;</span>,<br>    <span class="hljs-string">&quot;log4js&quot;</span>: <span class="hljs-string">&quot;^5.2.0&quot;</span>,<br>    <span class="hljs-string">&quot;serve-index&quot;</span>: <span class="hljs-string">&quot;^1.9.1&quot;</span>,<br>    <span class="hljs-string">&quot;socket.io&quot;</span>: <span class="hljs-string">&quot;^2.0.4&quot;</span><br>  &#125;,<br>  <span class="hljs-string">&quot;devDependencies&quot;</span>: &#123;&#125;,<br>  <span class="hljs-string">&quot;scripts&quot;</span>: &#123;<br>    <span class="hljs-string">&quot;test&quot;</span>: <span class="hljs-string">&quot;echo \&quot;Error: no test specified\&quot; &amp;&amp; exit 1&quot;</span>,<br>    <span class="hljs-string">&quot;start&quot;</span>: <span class="hljs-string">&quot;node server.js&quot;</span><br>  &#125;,<br>  <span class="hljs-string">&quot;author&quot;</span>: <span class="hljs-string">&quot;&quot;</span>,<br>  <span class="hljs-string">&quot;license&quot;</span>: <span class="hljs-string">&quot;ISC&quot;</span><br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>WebRTC入门</category>
      
    </categories>
    
    
    <tags>
      
      <tag>音视频</tag>
      
      <tag>WebRTC</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>day06-获取音频视频</title>
    <link href="/2022/06/12/WebRTC%E5%85%A5%E9%97%A8/day03%E8%8E%B7%E5%8F%96%E8%A7%86%E9%A2%91%E9%9F%B3%E9%A2%91/"/>
    <url>/2022/06/12/WebRTC%E5%85%A5%E9%97%A8/day03%E8%8E%B7%E5%8F%96%E8%A7%86%E9%A2%91%E9%9F%B3%E9%A2%91/</url>
    
    <content type="html"><![CDATA[<h2 id="一、音视频数据采集"><a href="#一、音视频数据采集" class="headerlink" title="一、音视频数据采集"></a>一、音视频数据采集</h2><h3 id="1、认识-MediaDevices-getUserMedia-是什么的？"><a href="#1、认识-MediaDevices-getUserMedia-是什么的？" class="headerlink" title="1、认识 MediaDevices.getUserMedia() 是什么的？"></a>1、认识 <code>MediaDevices.getUserMedia()</code> 是什么的？</h3><ul><li><p>会提示用户给与使用媒体输入的许可，媒体输入会产生一个 <code>MediaStream</code>，里面包含了请求媒体类型的轨道</p></li><li><p>比如：视频轨道、音频轨道</p></li><li><p>它返回一个 <code>Promise</code> 对象，用户授权同意后，resolve回调一个 MediaStream对象。</p></li><li><p>详细用法： <a href="https://developer.mozilla.org/zh-CN/docs/Web/API/MediaDevices/getUserMedia">https://developer.mozilla.org/zh-CN/docs/Web/API/MediaDevices/getUserMedia</a></p></li></ul><h3 id="2、由于各个浏览器厂商对媒体设备的获取，以及音视频流的获取方法名称不同，如果适配呢？"><a href="#2、由于各个浏览器厂商对媒体设备的获取，以及音视频流的获取方法名称不同，如果适配呢？" class="headerlink" title="2、由于各个浏览器厂商对媒体设备的获取，以及音视频流的获取方法名称不同，如果适配呢？"></a>2、由于各个浏览器厂商对媒体设备的获取，以及音视频流的获取方法名称不同，如果适配呢？</h3><ul><li>通常借助一个 <code>adapter.js</code> 来做适配</li><li><a href="https://webrtc.github.io/adapter/adapter-latest.js">https://webrtc.github.io/adapter/adapter-latest.js</a></li></ul><h3 id="3、获取视频音频，以及展示的核心代码如下："><a href="#3、获取视频音频，以及展示的核心代码如下：" class="headerlink" title="3、获取视频音频，以及展示的核心代码如下："></a>3、获取视频音频，以及展示的核心代码如下：</h3><ul><li>html代码</li></ul><figure class="highlight html"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">video</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;video&quot;</span> <span class="hljs-attr">playsinline</span> <span class="hljs-attr">autoplay</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">video</span>&gt;</span><br></code></pre></td></tr></table></figure><ul><li>js代码</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">const</span> videoElement = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">querySelector</span>(<span class="hljs-string">&#x27;video&#x27;</span>);<br><span class="hljs-keyword">function</span> <span class="hljs-title function_">start</span>(<span class="hljs-params"></span>) &#123;<br><span class="hljs-keyword">const</span> constraints = &#123; <span class="hljs-attr">audio</span>: <span class="hljs-literal">true</span>, <span class="hljs-attr">video</span>: <span class="hljs-literal">true</span> &#125;;<br>navigator.<span class="hljs-property">mediaDevices</span>.<span class="hljs-title function_">getUserMedia</span>(constraints)<br>.<span class="hljs-title function_">then</span>(<span class="hljs-function">(<span class="hljs-params">stream</span>)=&gt;</span> &#123;<br>videoElement.<span class="hljs-property">srcObject</span> = stream;<br><span class="hljs-title function_">getDevicesInfo</span>();<br>&#125;)<br>.<span class="hljs-title function_">catch</span>(<span class="hljs-function">(<span class="hljs-params">err</span>)=&gt;</span> &#123;<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;getUserMedia&quot;</span> + err);<br>&#125;)<br>&#125;<br></code></pre></td></tr></table></figure><ul><li>其中constraint 可以对音频和视频的参数进行适配</li><li>视频：宽高比例、帧率、前后摄像头…</li><li>音频：采样率、采样大小、音量、回音消除、自动增益、降噪…</li></ul><h3 id="4、如何获取视频流中的某一帧数据呢？"><a href="#4、如何获取视频流中的某一帧数据呢？" class="headerlink" title="4、如何获取视频流中的某一帧数据呢？"></a>4、如何获取视频流中的某一帧数据呢？</h3><ul><li>html代码</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">video</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;video&quot;</span> <span class="hljs-attr">autoplay</span> <span class="hljs-attr">playsinline</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">video</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;snapshot&quot;</span>&gt;</span>截屏<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">canvas</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;height: 200px; height: 150px;&quot;</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;picture&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">canvas</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br></code></pre></td></tr></table></figure><ul><li>js代码</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs javascript">snapshotElement.<span class="hljs-property">onclick</span> = <span class="hljs-function">(<span class="hljs-params">event</span>) =&gt;</span> &#123;<br>pictureElement.<span class="hljs-title function_">getContext</span>(<span class="hljs-string">&quot;2d&quot;</span>).<span class="hljs-title function_">drawImage</span>(videoElement,<br><span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<br>pictureElement.<span class="hljs-property">width</span>, pictureElement.<span class="hljs-property">height</span>);<br>&#125;<br></code></pre></td></tr></table></figure><ul><li>思路：借助 <code>canvas</code> 标签，把 <code>video</code> 中数据绘制出来</li></ul><h3 id="5、如何仅仅采集和播放音频呢？"><a href="#5、如何仅仅采集和播放音频呢？" class="headerlink" title="5、如何仅仅采集和播放音频呢？"></a>5、如何仅仅采集和播放音频呢？</h3><ul><li>html代码</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">audio</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;audio&quot;</span> <span class="hljs-attr">autoplay</span> <span class="hljs-attr">controls</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">audio</span>&gt;</span><br></code></pre></td></tr></table></figure><ul><li>js代码</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">const</span> audioElement = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">querySelector</span>(<span class="hljs-string">&quot;audio&quot;</span>);<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">start</span>(<span class="hljs-params"></span>) &#123;<br><span class="hljs-keyword">const</span> constraints = &#123; <span class="hljs-attr">audio</span>: <span class="hljs-literal">true</span>, <span class="hljs-attr">video</span>: <span class="hljs-literal">false</span> &#125;;<br>navigator.<span class="hljs-property">mediaDevices</span>.<span class="hljs-title function_">getUserMedia</span>(constraints)<br>.<span class="hljs-title function_">then</span>(<span class="hljs-function">(<span class="hljs-params">stream</span>)=&gt;</span> &#123;<br>audioElement.<span class="hljs-property">srcObject</span> = stream;<br><span class="hljs-title function_">getDevicesInfo</span>();<br>&#125;)<br>.<span class="hljs-title function_">catch</span>(<span class="hljs-function">(<span class="hljs-params">err</span>)=&gt;</span> &#123;<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;getUserMedia&quot;</span> + err);<br>&#125;)<br>&#125;<br></code></pre></td></tr></table></figure><img src="/2022/06/12/WebRTC%E5%85%A5%E9%97%A8/day03%E8%8E%B7%E5%8F%96%E8%A7%86%E9%A2%91%E9%9F%B3%E9%A2%91/image-20220612195354615.png" class="" title="最终效果图"><h3 id="6、一些MediaStream的常用API（用到再说吧）"><a href="#6、一些MediaStream的常用API（用到再说吧）" class="headerlink" title="6、一些MediaStream的常用API（用到再说吧）"></a>6、一些MediaStream的常用API（用到再说吧）</h3><img src="/2022/06/12/WebRTC%E5%85%A5%E9%97%A8/day03%E8%8E%B7%E5%8F%96%E8%A7%86%E9%A2%91%E9%9F%B3%E9%A2%91/image-20220612195626060.png" class="" title="image-20220612195626060"><img src="/2022/06/12/WebRTC%E5%85%A5%E9%97%A8/day03%E8%8E%B7%E5%8F%96%E8%A7%86%E9%A2%91%E9%9F%B3%E9%A2%91/image-20220612195636710.png" class="" title="image-20220612195636710"><img src="/2022/06/12/WebRTC%E5%85%A5%E9%97%A8/day03%E8%8E%B7%E5%8F%96%E8%A7%86%E9%A2%91%E9%9F%B3%E9%A2%91/image-20220612195650400.png" class="" title="image-20220612195650400">]]></content>
    
    
    <categories>
      
      <category>WebRTC入门</category>
      
    </categories>
    
    
    <tags>
      
      <tag>音视频</tag>
      
      <tag>WebRTC</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>day02-借助nodejs搭建HTTPS服务器</title>
    <link href="/2022/06/12/WebRTC%E5%85%A5%E9%97%A8/day02%E6%90%AD%E5%BB%BA%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    <url>/2022/06/12/WebRTC%E5%85%A5%E9%97%A8/day02%E6%90%AD%E5%BB%BA%E6%9C%8D%E5%8A%A1%E5%99%A8/</url>
    
    <content type="html"><![CDATA[<h2 id="一、Nodejs服务器搭建"><a href="#一、Nodejs服务器搭建" class="headerlink" title="一、Nodejs服务器搭建"></a>一、Nodejs服务器搭建</h2><h3 id="1、为什么要搭建HTTPS服务器？"><a href="#1、为什么要搭建HTTPS服务器？" class="headerlink" title="1、为什么要搭建HTTPS服务器？"></a>1、为什么要搭建HTTPS服务器？</h3><ul><li><font color="red">搭建服务器的原因</font>：web代码需要一个服务器，才能方便的被浏览器解析展示</li><li><font color="red">搭建HTTPS的原因</font>：访问用户的(隐私)音视频设备，需要通过HTTPS才能完全访问。</li></ul><h3 id="2、如何获取HTTPS证书？"><a href="#2、如何获取HTTPS证书？" class="headerlink" title="2、如何获取HTTPS证书？"></a>2、如何获取HTTPS证书？</h3><img src="/2022/06/12/WebRTC%E5%85%A5%E9%97%A8/day02%E6%90%AD%E5%BB%BA%E6%9C%8D%E5%8A%A1%E5%99%A8/image-20220612174651525.png" class=""><ul><li>然后在<font color="red">部署</font>中有各个平台的部署方案，还是非常详细的。</li></ul><h3 id="3、部署一个最简单的http服务器，代码如下："><a href="#3、部署一个最简单的http服务器，代码如下：" class="headerlink" title="3、部署一个最简单的http服务器，代码如下："></a>3、部署一个最简单的http服务器，代码如下：</h3><figure class="highlight js"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></div></td><td class="code"><pre><code class="hljs js"><span class="hljs-meta">&#x27;use strict&#x27;</span><br><br><span class="hljs-keyword">var</span> http = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;http&#x27;</span>);<br><br><span class="hljs-keyword">var</span> serveIndex = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;serve-index&#x27;</span>);<br><br><span class="hljs-keyword">var</span> express = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;express&#x27;</span>);<br><span class="hljs-keyword">var</span> app = <span class="hljs-title function_">express</span>();<br><br><span class="hljs-comment">//顺序不能换</span><br>app.<span class="hljs-title function_">use</span>(<span class="hljs-title function_">serveIndex</span>(<span class="hljs-string">&#x27;./public&#x27;</span>));<br>app.<span class="hljs-title function_">use</span>(express.<span class="hljs-title function_">static</span>(<span class="hljs-string">&#x27;./public&#x27;</span>));<br><br><span class="hljs-keyword">var</span> http_server = http.<span class="hljs-title function_">createServer</span>(app);<br>http_server.<span class="hljs-title function_">listen</span>(<span class="hljs-number">9980</span>, <span class="hljs-string">&#x27;127.0.0.1&#x27;</span>);<br><br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;webrtc服务启动成功&quot;</span>);<br></code></pre></td></tr></table></figure><ul><li><code>express</code>：是nodejs的服务器框架</li><li><code>serve-index</code>：是让服务器的资源可以通过web展示出来</li></ul><h3 id="4、将该服务端挂载在HTTPS下，也就是nginx的https代理"><a href="#4、将该服务端挂载在HTTPS下，也就是nginx的https代理" class="headerlink" title="4、将该服务端挂载在HTTPS下，也就是nginx的https代理"></a>4、将该服务端挂载在HTTPS下，也就是nginx的https代理</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs shell">server &#123;<br>listen 443 ssl;   #SSL协议访问端口号为443。此处如未添加ssl，可能会造成Nginx无法启动。<br>server_name webrtc.runduck.cn;  #将localhost修改为您证书绑定的域名，例如：www.example.com。<br>root html;<br>index index.html index.htm;<br>ssl_certificate webrtc_cert/7929948_webrtc.runduck.cn.pem;   #将domain name.pem替换成您证书的文件名。<br>ssl_certificate_key webrtc_cert/7929948_webrtc.runduck.cn.key;   #将domain name.key替换成您证书的密钥文件名。<br>ssl_session_timeout 5m;<br>ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;  #使用此加密套件。<br>ssl_protocols TLSv1 TLSv1.1 TLSv1.2;   #使用该协议进行配置。<br>ssl_prefer_server_ciphers on;   <br>location / &#123;<br>  proxy_pass http://127.0.0.1:9980;<br>&#125;<br>&#125;   <br><br>server &#123;<br>    listen       80;<br>    server_name webrtc.runduck.cn;<br>    rewrite ^(.*)$ https://$&#123;server_name&#125;$1 permanent; <br>&#125;<br><br></code></pre></td></tr></table></figure><ul><li>这样通过 <code>https://webrtc.runduck.cn/</code> 就可以访问我们部署好的服务器了。</li></ul><img src="/2022/06/12/WebRTC%E5%85%A5%E9%97%A8/day02%E6%90%AD%E5%BB%BA%E6%9C%8D%E5%8A%A1%E5%99%A8/image-20220612175149553.png" class=""><h3 id="二、获取用户的输入输出设备"><a href="#二、获取用户的输入输出设备" class="headerlink" title="二、获取用户的输入输出设备"></a>二、获取用户的输入输出设备</h3><h3 id="1、认识-MediaDevices-的作用？"><a href="#1、认识-MediaDevices-的作用？" class="headerlink" title="1、认识 MediaDevices  的作用？"></a>1、认识 <code>MediaDevices</code>  的作用？</h3><ul><li><code>navigator.mediaDevices</code> 接口提供访问连接媒体输入的设备</li><li>比如：照相机、麦克风、屏幕共享等</li><li>它可以使你取得任何硬件资源的媒体数据</li></ul><h3 id="2、认识-MediaDevices-enumerateDevices-的作用？"><a href="#2、认识-MediaDevices-enumerateDevices-的作用？" class="headerlink" title="2、认识 MediaDevices.enumerateDevices() 的作用？"></a>2、认识 <code>MediaDevices.enumerateDevices()</code> 的作用？</h3><ul><li><p>获取有关系统中可用的<font color="red">媒体输入和输出设备</font>的一系列信息</p></li><li><p>它的返回值是一个 <code>promise</code></p></li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-meta">&#x27;use strict&#x27;</span><br><span class="hljs-keyword">var</span> audioSource  = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">querySelector</span>(<span class="hljs-string">&quot;select#audioSource&quot;</span>);<br><span class="hljs-keyword">var</span> audioOutput  = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">querySelector</span>(<span class="hljs-string">&quot;select#audioOutput&quot;</span>);<br><span class="hljs-keyword">var</span> videoSource  = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">querySelector</span>(<span class="hljs-string">&quot;select#videoSource&quot;</span>);<br><br><span class="hljs-keyword">if</span>(!navigator.<span class="hljs-property">mediaDevices</span> ||<br>!navigator.<span class="hljs-property">mediaDevices</span>.<span class="hljs-property">enumerateDevices</span>)&#123;<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;enumerateDevices is not supported!&#x27;</span>);<br>&#125;<span class="hljs-keyword">else</span> &#123;<br>navigator.<span class="hljs-property">mediaDevices</span>.<span class="hljs-title function_">enumerateDevices</span>()<br>.<span class="hljs-title function_">then</span>(gotDevices)<br>.<span class="hljs-title function_">catch</span>(handleError);<br>&#125;<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">gotDevices</span>(<span class="hljs-params">deviceInfos</span>)&#123;<br>deviceInfos.<span class="hljs-title function_">forEach</span>( <span class="hljs-keyword">function</span>(<span class="hljs-params">deviceInfo</span>)&#123;<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(deviceInfo.<span class="hljs-property">kind</span> + <span class="hljs-string">&quot;: label = &quot;</span> <br>+ deviceInfo.<span class="hljs-property">label</span> + <span class="hljs-string">&quot;: id = &quot;</span><br>+ deviceInfo.<span class="hljs-property">deviceId</span> + <span class="hljs-string">&quot;: groupId = &quot;</span><br>+ deviceInfo.<span class="hljs-property">groupId</span>);<br><span class="hljs-keyword">var</span> option = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">createElement</span>(<span class="hljs-string">&#x27;option&#x27;</span>);<br>option.<span class="hljs-property">text</span> = deviceInfo.<span class="hljs-property">label</span>;<br>option.<span class="hljs-property">value</span> = deviceInfo.<span class="hljs-property">deviceId</span>;<br><span class="hljs-keyword">if</span>(deviceInfo.<span class="hljs-property">kind</span> === <span class="hljs-string">&#x27;audioinput&#x27;</span>)&#123;<br>audioSource.<span class="hljs-title function_">appendChild</span>(option);<br>&#125;<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(deviceInfo.<span class="hljs-property">kind</span> === <span class="hljs-string">&#x27;audiooutput&#x27;</span>)&#123;<br>audioOutput.<span class="hljs-title function_">appendChild</span>(option);<br>&#125;<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(deviceInfo.<span class="hljs-property">kind</span> === <span class="hljs-string">&#x27;videoinput&#x27;</span>)&#123;<br>videoSource.<span class="hljs-title function_">appendChild</span>(option);<br>&#125;<br>&#125;);<br><br>&#125;<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">handleError</span>(<span class="hljs-params">err</span>)&#123;<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(err.<span class="hljs-property">name</span> + <span class="hljs-string">&quot; : &quot;</span> + err.<span class="hljs-property">message</span>);<br>&#125;<br><br></code></pre></td></tr></table></figure><ul><li>代码运行成功如下：</li></ul><img src="/2022/06/12/WebRTC%E5%85%A5%E9%97%A8/day02%E6%90%AD%E5%BB%BA%E6%9C%8D%E5%8A%A1%E5%99%A8/image-20220612181336272.png" class=""><h3 id="3、但是上述代码，在Safari中运行，却不能拿到设备信息，为什么呢？"><a href="#3、但是上述代码，在Safari中运行，却不能拿到设备信息，为什么呢？" class="headerlink" title="3、但是上述代码，在Safari中运行，却不能拿到设备信息，为什么呢？"></a>3、但是上述代码，在Safari中运行，却不能拿到设备信息，为什么呢？</h3><ul><li>因为Safari有更加严格的用户隐私权限保护协议</li><li>当调用 <code>navigator.mediaDevices.getUserMedia(constraints)</code> 时，可以获取用户权限弹窗，用户同意即可获取设备信息了。</li></ul>]]></content>
    
    
    <categories>
      
      <category>WebRTC入门</category>
      
    </categories>
    
    
    <tags>
      
      <tag>音视频</tag>
      
      <tag>WebRTC</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>day01-初始WebRTC</title>
    <link href="/2022/06/12/WebRTC%E5%85%A5%E9%97%A8/day01%E5%85%A5%E9%97%A8%E5%9F%BA%E7%A1%80%E7%AF%87/"/>
    <url>/2022/06/12/WebRTC%E5%85%A5%E9%97%A8/day01%E5%85%A5%E9%97%A8%E5%9F%BA%E7%A1%80%E7%AF%87/</url>
    
    <content type="html"><![CDATA[<h2 id="一、WebRTC基础概念"><a href="#一、WebRTC基础概念" class="headerlink" title="一、WebRTC基础概念"></a>一、WebRTC基础概念</h2><h3 id="1、一句话介绍下WebRTC是什么？"><a href="#1、一句话介绍下WebRTC是什么？" class="headerlink" title="1、一句话介绍下WebRTC是什么？"></a>1、一句话介绍下WebRTC是什么？</h3><ul><li>音视频处理 + 即使通讯的开源库</li></ul><h3 id="2、WebRTC主要用于web吗？那主要应用于哪些领域呢？"><a href="#2、WebRTC主要用于web吗？那主要应用于哪些领域呢？" class="headerlink" title="2、WebRTC主要用于web吗？那主要应用于哪些领域呢？"></a>2、WebRTC主要用于web吗？那主要应用于哪些领域呢？</h3><ul><li>一开始是为了web设计的</li><li>现在不仅仅适用于web，已经全平台通用（包括iOS、安卓）</li></ul><h3 id="3、那么FFMpeg和WebRTC之间是什么关系呢？"><a href="#3、那么FFMpeg和WebRTC之间是什么关系呢？" class="headerlink" title="3、那么FFMpeg和WebRTC之间是什么关系呢？"></a>3、那么FFMpeg和WebRTC之间是什么关系呢？</h3><ul><li><p>两个框架都是音视频领域的霸主。FFmpeg是基础，WebRTC也使用它</p></li><li><p><font color="red">FFMpeg</font>：更多的用于音视频编辑与播放器</p></li><li><p><font color="red">WebRTC</font>：更多的用于音视频实时通信，比如网络抖动、网络丢包、网络评估、回音消除、降噪、自动增益等。</p></li></ul><h2 id="二、WebRTC原理与架构"><a href="#二、WebRTC原理与架构" class="headerlink" title="二、WebRTC原理与架构"></a>二、WebRTC原理与架构</h2><h3 id="1、WebRTC的整体架构图？"><a href="#1、WebRTC的整体架构图？" class="headerlink" title="1、WebRTC的整体架构图？"></a>1、WebRTC的整体架构图？</h3><img src="/2022/06/12/WebRTC%E5%85%A5%E9%97%A8/day01%E5%85%A5%E9%97%A8%E5%9F%BA%E7%A1%80%E7%AF%87/format,png.png" class=""><ul><li><font color="red">紫色部分</font>是Web开发者API层</li><li><font color="red">蓝色实线部分</font>是面向浏览器厂商的API层</li><li><font color="red">蓝色虚线部分</font>浏览器厂商可以自定义实现</li></ul><h3 id="2、WebRTC的目录结构-后面再回来看"><a href="#2、WebRTC的目录结构-后面再回来看" class="headerlink" title="2、WebRTC的目录结构(后面再回来看)"></a>2、WebRTC的目录结构(后面再回来看)</h3><img src="/2022/06/12/WebRTC%E5%85%A5%E9%97%A8/day01%E5%85%A5%E9%97%A8%E5%9F%BA%E7%A1%80%E7%AF%87/image-20220612171615403.png" class="" title="image-20220612171615403"><img src="/2022/06/12/WebRTC%E5%85%A5%E9%97%A8/day01%E5%85%A5%E9%97%A8%E5%9F%BA%E7%A1%80%E7%AF%87/image-20220612171621596.png" class="" title="image-20220612171621596"><img src="/2022/06/12/WebRTC%E5%85%A5%E9%97%A8/day01%E5%85%A5%E9%97%A8%E5%9F%BA%E7%A1%80%E7%AF%87/image-20220612171629116.png" class="" title="image-20220612171629116"><img src="/2022/06/12/WebRTC%E5%85%A5%E9%97%A8/day01%E5%85%A5%E9%97%A8%E5%9F%BA%E7%A1%80%E7%AF%87/image-20220612171634006.png" class="" title="image-20220612171634006"><h3 id="3、WebRTC重要的三个类理解？"><a href="#3、WebRTC重要的三个类理解？" class="headerlink" title="3、WebRTC重要的三个类理解？"></a>3、WebRTC重要的三个类理解？</h3><ul><li><font color="red">MediaStream</font>：里面可以包含多个轨道，用于音视频传输</li><li><font color="red">RTCDataChannel</font>：里面可以传输文本、二进制数据(非音视频数据)</li><li><font color="red">RTCPeerConnection</font>：是一个大而全、最重要的类</li></ul><h3 id="4、RTCPeerConnection调用过程（后续，一定要能自己绘制，然后换成高清图）"><a href="#4、RTCPeerConnection调用过程（后续，一定要能自己绘制，然后换成高清图）" class="headerlink" title="4、RTCPeerConnection调用过程（后续，一定要能自己绘制，然后换成高清图）"></a>4、<font color="red">RTCPeerConnection</font>调用过程（后续，一定要能自己绘制，然后换成高清图）</h3><img src="/2022/06/12/WebRTC%E5%85%A5%E9%97%A8/day01%E5%85%A5%E9%97%A8%E5%9F%BA%E7%A1%80%E7%AF%87/image-20220612172723861.png" class="" title="image-20220612172723861"><img src="/2022/06/12/WebRTC%E5%85%A5%E9%97%A8/day01%E5%85%A5%E9%97%A8%E5%9F%BA%E7%A1%80%E7%AF%87/image-20220612172737582.png" class="" title="image-20220612172737582">]]></content>
    
    
    <categories>
      
      <category>WebRTC入门</category>
      
    </categories>
    
    
    <tags>
      
      <tag>音视频</tag>
      
      <tag>WebRTC</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>day11-【实战】视频编码/解码</title>
    <link href="/2022/06/04/%E9%9F%B3%E8%A7%86%E9%A2%91%E5%85%A5%E9%97%A8%E7%AC%AC%E4%B8%80%E5%AD%A3/day11%E8%A7%86%E9%A2%91%E7%BC%96%E8%A7%A3%E7%A0%81%E5%AE%9E%E6%88%98/"/>
    <url>/2022/06/04/%E9%9F%B3%E8%A7%86%E9%A2%91%E5%85%A5%E9%97%A8%E7%AC%AC%E4%B8%80%E5%AD%A3/day11%E8%A7%86%E9%A2%91%E7%BC%96%E8%A7%A3%E7%A0%81%E5%AE%9E%E6%88%98/</url>
    
    <content type="html"><![CDATA[<h2 id="一、认识SPS与PPS"><a href="#一、认识SPS与PPS" class="headerlink" title="一、认识SPS与PPS"></a>一、认识SPS与PPS</h2><h3 id="1、认识SPS？主要包含哪些信息？"><a href="#1、认识SPS？主要包含哪些信息？" class="headerlink" title="1、认识SPS？主要包含哪些信息？"></a>1、认识SPS？主要包含哪些信息？</h3><ul><li>SPS(Sequence Parameter Set)，序列参数集，作用于一串连续的视频图像。</li><li>比如：帧数、解码图像尺寸、参考帧数目</li></ul><img src="/2022/06/04/%E9%9F%B3%E8%A7%86%E9%A2%91%E5%85%A5%E9%97%A8%E7%AC%AC%E4%B8%80%E5%AD%A3/day11%E8%A7%86%E9%A2%91%E7%BC%96%E8%A7%A3%E7%A0%81%E5%AE%9E%E6%88%98/image-20220604191831321.png" class=""><img src="/2022/06/04/%E9%9F%B3%E8%A7%86%E9%A2%91%E5%85%A5%E9%97%A8%E7%AC%AC%E4%B8%80%E5%AD%A3/day11%E8%A7%86%E9%A2%91%E7%BC%96%E8%A7%A3%E7%A0%81%E5%AE%9E%E6%88%98/image-20220604191854932.png" class=""><img src="/2022/06/04/%E9%9F%B3%E8%A7%86%E9%A2%91%E5%85%A5%E9%97%A8%E7%AC%AC%E4%B8%80%E5%AD%A3/day11%E8%A7%86%E9%A2%91%E7%BC%96%E8%A7%A3%E7%A0%81%E5%AE%9E%E6%88%98/image-20220604195729151.png" class=""><h3 id="2、认识PPS？主要包含哪些信息？"><a href="#2、认识PPS？主要包含哪些信息？" class="headerlink" title="2、认识PPS？主要包含哪些信息？"></a>2、认识PPS？主要包含哪些信息？</h3><ul><li>PPS(Picture Parameter Set)，图像参数集，作用于视频序列中的图像</li><li>比如：熵编码选择标识、片组数目</li></ul><img src="/2022/06/04/%E9%9F%B3%E8%A7%86%E9%A2%91%E5%85%A5%E9%97%A8%E7%AC%AC%E4%B8%80%E5%AD%A3/day11%E8%A7%86%E9%A2%91%E7%BC%96%E8%A7%A3%E7%A0%81%E5%AE%9E%E6%88%98/image-20220604191808115.png" class=""><h3 id="3、掌握Profile"><a href="#3、掌握Profile" class="headerlink" title="3、掌握Profile"></a>3、掌握Profile</h3><ul><li>H264 Profile：对视频压缩特性的描述，Profile越高，说明采用了越高级的压缩特性</li></ul><img src="/2022/06/04/%E9%9F%B3%E8%A7%86%E9%A2%91%E5%85%A5%E9%97%A8%E7%AC%AC%E4%B8%80%E5%AD%A3/day11%E8%A7%86%E9%A2%91%E7%BC%96%E8%A7%A3%E7%A0%81%E5%AE%9E%E6%88%98/image-20220604195557564.png" class="" title="image-20220604195557564"><img src="/2022/06/04/%E9%9F%B3%E8%A7%86%E9%A2%91%E5%85%A5%E9%97%A8%E7%AC%AC%E4%B8%80%E5%AD%A3/day11%E8%A7%86%E9%A2%91%E7%BC%96%E8%A7%A3%E7%A0%81%E5%AE%9E%E6%88%98/image-20220604195603752.png" class="" title="image-20220604195603752"><h3 id="4、掌握H264-Level"><a href="#4、掌握H264-Level" class="headerlink" title="4、掌握H264 Level"></a>4、掌握H264 Level</h3><ul><li>H264 Level：是对视频的描述，Level越高，视频的码率，分辨率越高</li></ul><img src="/2022/06/04/%E9%9F%B3%E8%A7%86%E9%A2%91%E5%85%A5%E9%97%A8%E7%AC%AC%E4%B8%80%E5%AD%A3/day11%E8%A7%86%E9%A2%91%E7%BC%96%E8%A7%A3%E7%A0%81%E5%AE%9E%E6%88%98/image-20220604195655374.png" class="" title="image-20220604195655374"><h3 id="5、视频分析工具主流有哪些（说两个）？"><a href="#5、视频分析工具主流有哪些（说两个）？" class="headerlink" title="5、视频分析工具主流有哪些（说两个）？"></a>5、视频分析工具主流有哪些（说两个）？</h3><ul><li>Evecard Stream Eye</li><li>雷神开发的工具</li></ul><h3 id="二、H264编码实战"><a href="#二、H264编码实战" class="headerlink" title="二、H264编码实战"></a>二、H264编码实战</h3><h3 id="1、基本步骤，主要四步"><a href="#1、基本步骤，主要四步" class="headerlink" title="1、基本步骤，主要四步"></a>1、基本步骤，主要四步</h3><ul><li>打开编码器</li><li>转换NV12到YUV420P</li><li>准备编码数据 AVFrame</li><li>H264编码</li></ul><h3 id="2、口述下NV12转YUV420p的思路？"><a href="#2、口述下NV12转YUV420p的思路？" class="headerlink" title="2、口述下NV12转YUV420p的思路？"></a>2、口述下NV12转YUV420p的思路？</h3><ul><li>NV12数据存放结构：YYYYYYYYYYUVUVUV</li><li>YUV420p数据存放结构：YYYYYYYYYYUUUVVV</li><li><font color="red">从NV12中分别提取出Y、U、V数据，然后进行重新组合存放，即可。</font></li></ul><img src="/2022/06/04/%E9%9F%B3%E8%A7%86%E9%A2%91%E5%85%A5%E9%97%A8%E7%AC%AC%E4%B8%80%E5%AD%A3/day11%E8%A7%86%E9%A2%91%E7%BC%96%E8%A7%A3%E7%A0%81%E5%AE%9E%E6%88%98/image-20220605192735416.png" class=""><h3 id="3、在进行NV12转YUV420p时，由于手误向文件中写入了两次数据，播放文件，会出现什么现象？"><a href="#3、在进行NV12转YUV420p时，由于手误向文件中写入了两次数据，播放文件，会出现什么现象？" class="headerlink" title="3、在进行NV12转YUV420p时，由于手误向文件中写入了两次数据，播放文件，会出现什么现象？"></a>3、在进行NV12转YUV420p时，由于手误向文件中写入了两次数据，播放文件，会出现什么现象？</h3><img src="/2022/06/04/%E9%9F%B3%E8%A7%86%E9%A2%91%E5%85%A5%E9%97%A8%E7%AC%AC%E4%B8%80%E5%AD%A3/day11%E8%A7%86%E9%A2%91%E7%BC%96%E8%A7%A3%E7%A0%81%E5%AE%9E%E6%88%98/image-20220605182230483.png" class=""><h3 id=""><a href="#" class="headerlink" title=""></a></h3><ul><li>第一次写入NV12数据</li><li>第二次写入YUV420p数据</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><pre><code class="hljs sh">ffplay -video_size 640x480 -pixel_format yuv420p -framerate 25 420p.yuv<br></code></pre></td></tr></table></figure><ul><li>以上指令播放时，会出现<font color="red">录屏动作被放缓了两倍，并且视频颜色闪烁</font></li><li>原因：Y分量没问题，UV分量部分错位了，可以通过以下指令进行调试测试。</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">ffplay -video_size 640x480 -pixel_format yuv420p -framerate 25 -vf extractplanes=<span class="hljs-string">&#x27;y&#x27;</span> 420p.yuv<br></code></pre></td></tr></table></figure><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">ffplay -video_size 640x480 -pixel_format yuv420p -framerate 25 -vf extractplanes=<span class="hljs-string">&#x27;u&#x27;</span> 420p.yuv<br></code></pre></td></tr></table></figure><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">ffplay</span> -video_size <span class="hljs-number">640</span>x480 -pixel_format yuv420p -framerate <span class="hljs-number">25</span> -vf extractplanes=&#x27;v&#x27; <span class="hljs-number">420</span>p.yuv<br></code></pre></td></tr></table></figure><ul><li>通过上面指令，就可以明显看到u、v分量的闪烁效果。而 y分量的缺只是播放速度减慢了。</li></ul><h3 id="4、在编码H264的时候，如果少了下面图中两个步骤，会产生什么效果？"><a href="#4、在编码H264的时候，如果少了下面图中两个步骤，会产生什么效果？" class="headerlink" title="4、在编码H264的时候，如果少了下面图中两个步骤，会产生什么效果？"></a>4、在编码H264的时候，如果少了下面图中两个步骤，会产生什么效果？</h3><img src="/2022/06/04/%E9%9F%B3%E8%A7%86%E9%A2%91%E5%85%A5%E9%97%A8%E7%AC%AC%E4%B8%80%E5%AD%A3/day11%E8%A7%86%E9%A2%91%E7%BC%96%E8%A7%A3%E7%A0%81%E5%AE%9E%E6%88%98/image-20220605192501173.png" class=""><ul><li>注释一：会导致pts混乱，最终播放的h264文件，会有马赛克。</li><li>注释二：会导致最终h264文件少掉几帧数据，不完整，因为压缩缓冲区的数据没被刷出来。</li></ul><h3 id="5、H264编码完整代码如下"><a href="#5、H264编码完整代码如下" class="headerlink" title="5、H264编码完整代码如下"></a>5、H264编码完整代码如下</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br></pre></td><td class="code"><pre><code class="hljs C"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&quot;test.h&quot;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;unistd.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&quot;include/libavutil/avutil.h&quot;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&quot;include/libavdevice/avdevice.h&quot;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&quot;include/libavcodec/avcodec.h&quot;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&quot;include/libswresample/swresample.h&quot;</span></span><br><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;string.h&gt;</span></span><br><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> V_WIDTH 640</span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> V_HEIGHT 480</span><br><br><span class="hljs-type">static</span> <span class="hljs-type">int</span> rec_status = <span class="hljs-number">1</span>;<br><br><span class="hljs-type">void</span> <span class="hljs-title function_">set_status</span><span class="hljs-params">(<span class="hljs-type">int</span> status)</span>&#123;<br>    rec_status = status;<br>&#125;<br><br><span class="hljs-comment">///打开编码器</span><br><span class="hljs-type">static</span> <span class="hljs-type">void</span> <span class="hljs-title function_">open_encoder</span><span class="hljs-params">(<span class="hljs-type">int</span> width, <span class="hljs-type">int</span> height, AVCodecContext **enc_ctx)</span> &#123;<br>    <span class="hljs-type">int</span> ret = <span class="hljs-number">0</span>;<br>    <span class="hljs-type">const</span> AVCodec *codec = <span class="hljs-literal">NULL</span>;<br>    codec = avcodec_find_encoder_by_name(<span class="hljs-string">&quot;libx264&quot;</span>);<br>    <span class="hljs-keyword">if</span> (!codec) &#123;<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;lsp_error avcodec_find_encoder_by_name error \n&quot;</span>);<br>        <span class="hljs-built_in">exit</span>(<span class="hljs-number">1</span>);<br>    &#125;<br>    *enc_ctx = avcodec_alloc_context3(codec);<br>    <span class="hljs-keyword">if</span> (!enc_ctx) &#123;<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;lsp_error avcodec_alloc_context3 error \n&quot;</span>);<br>        <span class="hljs-built_in">exit</span>(<span class="hljs-number">1</span>);<br>    &#125;<br>    <br>    <span class="hljs-comment">//SPS、PPS</span><br>    (*enc_ctx)-&gt;profile = FF_PROFILE_H264_HIGH_444;<br>    (*enc_ctx)-&gt;level = <span class="hljs-number">50</span>; <span class="hljs-comment">//表示Level是5.0</span><br>    <br>    <span class="hljs-comment">//设置分辨率</span><br>    (*enc_ctx)-&gt;width = width;<br>    (*enc_ctx)-&gt;height = height;<br>    <br>    <span class="hljs-comment">//GOP</span><br>    (*enc_ctx)-&gt;gop_size = <span class="hljs-number">250</span>;<br>    (*enc_ctx)-&gt;keyint_min = <span class="hljs-number">25</span>; <span class="hljs-comment">//optional</span><br>    <br>    <span class="hljs-comment">//设置B帧数据</span><br>    (*enc_ctx)-&gt;max_b_frames = <span class="hljs-number">3</span>; <span class="hljs-comment">//optional</span><br>    (*enc_ctx)-&gt;has_b_frames = <span class="hljs-number">1</span>; <span class="hljs-comment">//optional</span><br>    <br>    <span class="hljs-comment">//参考帧的数量</span><br>    (*enc_ctx)-&gt;refs = <span class="hljs-number">3</span>; <span class="hljs-comment">//optional</span><br>    (*enc_ctx)-&gt;pix_fmt = AV_PIX_FMT_YUV420P;<br>    <br>    <span class="hljs-comment">//设置码率</span><br>    (*enc_ctx)-&gt;bit_rate = <span class="hljs-number">600000</span>; <span class="hljs-comment">//600kbps</span><br>    <br>    <span class="hljs-comment">//设置帧率</span><br>    (*enc_ctx)-&gt;time_base = (AVRational)&#123;<span class="hljs-number">1</span>, <span class="hljs-number">25</span>&#125;; <span class="hljs-comment">//帧与帧直接的间隔是time_base</span><br>    (*enc_ctx)-&gt;framerate = (AVRational)&#123;<span class="hljs-number">25</span>, <span class="hljs-number">1</span>&#125;; <span class="hljs-comment">//帧率，每秒 25 帧</span><br>    <br>    ret = avcodec_open2(*enc_ctx, codec, <span class="hljs-literal">NULL</span>);<br>    <span class="hljs-keyword">if</span> (ret &lt; <span class="hljs-number">0</span>) &#123;<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;lsp_error avcodec_open2 error \n&quot;</span>);<br>        <span class="hljs-built_in">exit</span>(<span class="hljs-number">1</span>);<br>    &#125;<br>&#125;<br><br><span class="hljs-comment">///创建AVFrame</span><br><span class="hljs-type">static</span> AVFrame* <span class="hljs-title function_">create_frame</span><span class="hljs-params">(<span class="hljs-type">int</span> width, <span class="hljs-type">int</span> height)</span> &#123;<br>    <span class="hljs-type">int</span> ret = <span class="hljs-number">0</span>;<br>    AVFrame *frame = av_frame_alloc();<br>    <span class="hljs-keyword">if</span> (!frame) &#123;<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;lsp_error av_frame_alloc error \n&quot;</span>);<br>        <span class="hljs-keyword">goto</span> __ERROR;<br>    &#125;<br>    <br>    <span class="hljs-comment">//设置参数</span><br>    frame-&gt;width = width;<br>    frame-&gt;height = height;<br>    frame-&gt;format = AV_PIX_FMT_YUV420P;<br>    <br>    <span class="hljs-comment">//alloc inner memory</span><br>    ret = av_frame_get_buffer(frame, <span class="hljs-number">32</span>); <span class="hljs-comment">//按32位对其（TODO）</span><br>    <span class="hljs-keyword">if</span> (ret &lt; <span class="hljs-number">0</span>) &#123;<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;lsp_error av_frame_get_buffer error \n&quot;</span>);<br>        <span class="hljs-keyword">goto</span> __ERROR;<br>    &#125;<br>    <span class="hljs-keyword">return</span> frame;<br>    <br>__ERROR:<br>    <span class="hljs-keyword">if</span> (frame) &#123;<br>        av_frame_free(&amp;frame);<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-literal">NULL</span>;<br>&#125;<br><br><span class="hljs-comment">///h264编码</span><br><span class="hljs-type">static</span> <span class="hljs-type">void</span> <span class="hljs-title function_">encode</span><span class="hljs-params">(AVCodecContext *enc_ctx, AVFrame *frame,AVPacket *newpkt,FILE *outfile)</span> &#123;<br>    <span class="hljs-type">int</span> ret = <span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">if</span> (!enc_ctx || !newpkt || !outfile) &#123; <span class="hljs-comment">//参数检查</span><br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;lsp_error encode 参数有误 \n&quot;</span>);<br>        <span class="hljs-built_in">exit</span>(<span class="hljs-number">1</span>);<br>    &#125;<br>    <br>    <span class="hljs-keyword">if</span> (frame) &#123;<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;send frame to encoder, pts=%lld \n&quot;</span>, frame-&gt;pts);<br>    &#125;<br>    <br>    ret = avcodec_send_frame(enc_ctx, frame);<br>    <span class="hljs-keyword">if</span> (ret &lt; <span class="hljs-number">0</span>) &#123;<br>        <span class="hljs-type">char</span> strErr[<span class="hljs-number">1024</span>];<br>        av_strerror(ret, strErr, <span class="hljs-number">1024</span>);<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;lsp_error avcodec_send_frame error , %s \n&quot;</span>, strErr);<br>        <span class="hljs-built_in">exit</span>(<span class="hljs-number">1</span>);<br>    &#125;<br>    <br>    <span class="hljs-keyword">while</span> (ret &gt;= <span class="hljs-number">0</span>) &#123;<br>        ret = avcodec_receive_packet(enc_ctx, newpkt);<br>        <span class="hljs-keyword">if</span> (ret == AVERROR(EAGAIN) || ret == AVERROR_EOF) &#123;<br>            <span class="hljs-keyword">return</span>;<br>        &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(ret &lt; <span class="hljs-number">0</span>) &#123;<br>            <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;lsp_error avcodec_receive_packet error \n&quot;</span>);<br>            <span class="hljs-built_in">exit</span>(<span class="hljs-number">1</span>);<br>        &#125;<br>        fwrite(newpkt-&gt;data, <span class="hljs-number">1</span>, newpkt-&gt;size, outfile);<br>        fflush(outfile);<br>    &#125;<br>&#125;<br><br><span class="hljs-comment">///录视频（主入口）</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">record_video</span><span class="hljs-params">(<span class="hljs-type">void</span>)</span> &#123;<br>    <span class="hljs-type">int</span> ret = <span class="hljs-number">0</span>;<br>    <span class="hljs-type">char</span> errors[<span class="hljs-number">1024</span>];<br>    <br>    <span class="hljs-comment">//ctx</span><br>    AVFormatContext *fmt_ctx = <span class="hljs-literal">NULL</span>;<br>    AVDictionary *options = <span class="hljs-literal">NULL</span>;<br>    AVCodecContext *enc_ctx = <span class="hljs-literal">NULL</span>;<br>    <br>    <span class="hljs-comment">//packet</span><br>    <span class="hljs-type">int</span> count = <span class="hljs-number">0</span>;<br>    AVPacket pkt;<br>    <br>    <span class="hljs-comment">// [video device]:[aduio device]</span><br>    <span class="hljs-type">char</span> *devicename = <span class="hljs-string">&quot;0&quot;</span>;<br>    <br>    <span class="hljs-comment">//register audio device</span><br>    avdevice_register_all();<br>    <br>    <span class="hljs-comment">//get format</span><br>    <span class="hljs-type">const</span> AVInputFormat *iformat = av_find_input_format(<span class="hljs-string">&quot;avfoundation&quot;</span>);<br>    <br>    av_dict_set(&amp;options, <span class="hljs-string">&quot;video_size&quot;</span>, <span class="hljs-string">&quot;640x480&quot;</span>, <span class="hljs-number">0</span>);<br>    av_dict_set(&amp;options, <span class="hljs-string">&quot;framerate&quot;</span>, <span class="hljs-string">&quot;30&quot;</span>, <span class="hljs-number">0</span>);<br>    av_dict_set(&amp;options, <span class="hljs-string">&quot;pixel_format&quot;</span>, <span class="hljs-string">&quot;nv12&quot;</span>, <span class="hljs-number">0</span>);<br>    <br>    <span class="hljs-comment">//打开编码器</span><br>    open_encoder(V_WIDTH, V_HEIGHT, &amp;enc_ctx);<br>    <br>    <span class="hljs-comment">//创建AVFrame、AVPacket</span><br>    AVFrame *frame = create_frame(V_WIDTH, V_HEIGHT);<br>    AVPacket *newpkt = av_packet_alloc();<br>    <span class="hljs-keyword">if</span> (!newpkt) &#123;<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;lsp_error av_packet_alloc&quot;</span>);<br>    &#125;<br>    <span class="hljs-type">int</span> basePts = <span class="hljs-number">1</span>;<br>    <br>    <span class="hljs-comment">//open device</span><br>    ret = avformat_open_input(&amp;fmt_ctx, devicename, iformat, &amp;options);<br>    <span class="hljs-keyword">if</span> (ret &lt; <span class="hljs-number">0</span>) &#123;<br>        av_strerror(ret, errors, <span class="hljs-number">1024</span>);<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;lsp_error avformat_open_input error \n&quot;</span>);<br>        <span class="hljs-keyword">return</span>;<br>    &#125;<br>    <br>    <span class="hljs-comment">//crate file</span><br>    <span class="hljs-type">char</span> *yuvPath = <span class="hljs-string">&quot;/Users/carrot/Desktop/MyCode/420p.yuv&quot;</span>;<br>    <span class="hljs-type">char</span> *outPath = <span class="hljs-string">&quot;/Users/carrot/Desktop/MyCode/420p.h264&quot;</span>;<br>    FILE *yuvFile = fopen(yuvPath, <span class="hljs-string">&quot;wb+&quot;</span>);<br>    FILE *outFile = fopen(outPath, <span class="hljs-string">&quot;wb+&quot;</span>);<br>    <span class="hljs-keyword">if</span> (yuvFile == <span class="hljs-literal">NULL</span>) &#123;<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;lsp_error yuvFile fopen failed \n&quot;</span>);<br>        <span class="hljs-keyword">return</span>;<br>    &#125;<br>    <span class="hljs-keyword">if</span> (outPath == <span class="hljs-literal">NULL</span>) &#123;<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;lsp_error outPath fopen failed \n&quot;</span>);<br>        <span class="hljs-keyword">return</span>;<br>    &#125;<br>    <br>    <span class="hljs-comment">//read data from device</span><br>    <span class="hljs-keyword">while</span> ((ret = av_read_frame(fmt_ctx, &amp;pkt)) == <span class="hljs-number">0</span> || rec_status == <span class="hljs-number">1</span>) &#123;<br>        usleep(<span class="hljs-number">100</span>);<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;ret %d&quot;</span>, ret);<br>        <span class="hljs-keyword">if</span> (pkt.size &gt; <span class="hljs-number">0</span>) &#123;<br>            <span class="hljs-comment">// (宽 * 高) * （yuv420=1.5 或 yuv422=2 或 yuv444=3）；nv12属于yuv420</span><br>            <span class="hljs-comment">// 640*480*1.5 = 460800</span><br>            <span class="hljs-comment">//fwrite(pkt.data, 460800, 1, yuvFile);</span><br>            <span class="hljs-comment">//fflush(yuvFile);</span><br>            <br>            <span class="hljs-comment">// NV12 转 YUV420p</span><br>            <span class="hljs-comment">//YYYYYYYYYYYUVUVUV NV12</span><br>            <span class="hljs-comment">//YYYYYYYYYYYUUUVVV YUV420P</span><br>            <span class="hljs-type">int</span> YDataSize = V_WIDTH * V_HEIGHT; <span class="hljs-comment">//307200</span><br>            <span class="hljs-built_in">memcpy</span>(frame-&gt;data[<span class="hljs-number">0</span>], pkt.data, YDataSize); <span class="hljs-comment">//copy Y data:</span><br>            <span class="hljs-comment">//307200之后是UV</span><br>            <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; YDataSize / <span class="hljs-number">4</span>; i++) &#123;<br>                frame-&gt;data[<span class="hljs-number">1</span>][i] = pkt.data[YDataSize + <span class="hljs-number">2</span>*i];<br>                frame-&gt;data[<span class="hljs-number">2</span>][i] = pkt.data[YDataSize + <span class="hljs-number">2</span>*i + <span class="hljs-number">1</span>];<br>            &#125;<br>            fwrite(frame-&gt;data[<span class="hljs-number">0</span>], <span class="hljs-number">1</span>, YDataSize, yuvFile);<br>            fwrite(frame-&gt;data[<span class="hljs-number">1</span>], <span class="hljs-number">1</span>, YDataSize / <span class="hljs-number">4</span>, yuvFile);<br>            fwrite(frame-&gt;data[<span class="hljs-number">2</span>], <span class="hljs-number">1</span>, YDataSize / <span class="hljs-number">4</span>, yuvFile);<br>            fflush(yuvFile);<br>            <br>            <span class="hljs-comment">//h264编码</span><br>            frame-&gt;pts = basePts++;<br>            encode(enc_ctx, frame, newpkt, outFile);<br>            <br>            <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;lsp_error packet size is %d(%p), count=%d \n&quot;</span>, pkt.size, pkt.data, count);<br>            av_packet_unref(&amp;pkt);<br>        &#125;<br>    &#125;<br>    <span class="hljs-comment">//将编码器缓冲区的数据刷出来，不然录制的视频会少掉1s左右的数据。</span><br>    encode(enc_ctx, <span class="hljs-literal">NULL</span>, newpkt, outFile);<br>    <br>    <span class="hljs-comment">//close device and release ctx</span><br>    avformat_close_input(&amp;fmt_ctx);<br>    <br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;lsp_error 运行结束\n&quot;</span>);<br>&#125;<br><br></code></pre></td></tr></table></figure><ul><li>注意：如果没有调用 <code>avcodec_open2</code> 会导致 <code>avcodec_send_frame</code> 报错：<font color="red"><a href="https://stackoverflow.com/questions/69643784/avcodec-send-frame-returns-invalid-argument">avcodec_send_frame returns “invalid argument”</a></font></li></ul><h2 id="三、x264参数详解、参考资料（暂时不看吧，只做记录）"><a href="#三、x264参数详解、参考资料（暂时不看吧，只做记录）" class="headerlink" title="三、x264参数详解、参考资料（暂时不看吧，只做记录）"></a>三、x264参数详解、参考资料（暂时不看吧，只做记录）</h2><img src="/2022/06/04/%E9%9F%B3%E8%A7%86%E9%A2%91%E5%85%A5%E9%97%A8%E7%AC%AC%E4%B8%80%E5%AD%A3/day11%E8%A7%86%E9%A2%91%E7%BC%96%E8%A7%A3%E7%A0%81%E5%AE%9E%E6%88%98/image-20220605193400253.png" class="" title="image-20220605193400253"><img src="/2022/06/04/%E9%9F%B3%E8%A7%86%E9%A2%91%E5%85%A5%E9%97%A8%E7%AC%AC%E4%B8%80%E5%AD%A3/day11%E8%A7%86%E9%A2%91%E7%BC%96%E8%A7%A3%E7%A0%81%E5%AE%9E%E6%88%98/image-20220605193427742.png" class="" title="image-20220605193427742"><img src="/2022/06/04/%E9%9F%B3%E8%A7%86%E9%A2%91%E5%85%A5%E9%97%A8%E7%AC%AC%E4%B8%80%E5%AD%A3/day11%E8%A7%86%E9%A2%91%E7%BC%96%E8%A7%A3%E7%A0%81%E5%AE%9E%E6%88%98/image-20220605193433084.png" class="" title="image-20220605193433084"><img src="/2022/06/04/%E9%9F%B3%E8%A7%86%E9%A2%91%E5%85%A5%E9%97%A8%E7%AC%AC%E4%B8%80%E5%AD%A3/day11%E8%A7%86%E9%A2%91%E7%BC%96%E8%A7%A3%E7%A0%81%E5%AE%9E%E6%88%98/image-20220605193440303.png" class="" title="image-20220605193440303"><img src="/2022/06/04/%E9%9F%B3%E8%A7%86%E9%A2%91%E5%85%A5%E9%97%A8%E7%AC%AC%E4%B8%80%E5%AD%A3/day11%E8%A7%86%E9%A2%91%E7%BC%96%E8%A7%A3%E7%A0%81%E5%AE%9E%E6%88%98/image-20220605193445364.png" class="" title="image-20220605193445364"><img src="/2022/06/04/%E9%9F%B3%E8%A7%86%E9%A2%91%E5%85%A5%E9%97%A8%E7%AC%AC%E4%B8%80%E5%AD%A3/day11%E8%A7%86%E9%A2%91%E7%BC%96%E8%A7%A3%E7%A0%81%E5%AE%9E%E6%88%98/image-20220605193450647.png" class="" title="image-20220605193450647"><img src="/2022/06/04/%E9%9F%B3%E8%A7%86%E9%A2%91%E5%85%A5%E9%97%A8%E7%AC%AC%E4%B8%80%E5%AD%A3/day11%E8%A7%86%E9%A2%91%E7%BC%96%E8%A7%A3%E7%A0%81%E5%AE%9E%E6%88%98/image-20220605193456071.png" class="" title="image-20220605193456071"><img src="/2022/06/04/%E9%9F%B3%E8%A7%86%E9%A2%91%E5%85%A5%E9%97%A8%E7%AC%AC%E4%B8%80%E5%AD%A3/day11%E8%A7%86%E9%A2%91%E7%BC%96%E8%A7%A3%E7%A0%81%E5%AE%9E%E6%88%98/image-20220605193501269.png" class="" title="image-20220605193501269">]]></content>
    
    
    <categories>
      
      <category>音视频入门课</category>
      
    </categories>
    
    
    <tags>
      
      <tag>音视频</tag>
      
      <tag>ffmpeg</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>day10-认识H264、H264压缩技术、码流分层NALU</title>
    <link href="/2022/06/04/%E9%9F%B3%E8%A7%86%E9%A2%91%E5%85%A5%E9%97%A8%E7%AC%AC%E4%B8%80%E5%AD%A3/day10H264%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86/"/>
    <url>/2022/06/04/%E9%9F%B3%E8%A7%86%E9%A2%91%E5%85%A5%E9%97%A8%E7%AC%AC%E4%B8%80%E5%AD%A3/day10H264%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86/</url>
    
    <content type="html"><![CDATA[<h2 id="一、认识H264"><a href="#一、认识H264" class="headerlink" title="一、认识H264"></a>一、认识H264</h2><h3 id="1、H264的压缩比是多少？"><a href="#1、H264的压缩比是多少？" class="headerlink" title="1、H264的压缩比是多少？"></a>1、H264的压缩比是多少？</h3><ul><li><p>约 <font color="red">1&#x2F;100</font></p></li><li><p>比如格式为YUV420、分辨率为640x480、帧率为15的码流是 <font color="red">55296kbps</font></p></li><li><p>经过H264压缩后，实际码流约：500kbps</p></li></ul><h3 id="2、比如720p，如何确定它的最近码流大概是多少？"><a href="#2、比如720p，如何确定它的最近码流大概是多少？" class="headerlink" title="2、比如720p，如何确定它的最近码流大概是多少？"></a>2、比如720p，如何确定它的最近码流大概是多少？</h3><ul><li>可以去 <font color="red">声网</font> 这种比较权威的网站查询，这些都是经验值，没有标准值。</li><li><a href="https://docs.agora.io/cn">https://docs.agora.io/cn</a></li></ul><h3 id="3、什么是GOP？一个GOP中可能存在多个I帧吗？"><a href="#3、什么是GOP？一个GOP中可能存在多个I帧吗？" class="headerlink" title="3、什么是GOP？一个GOP中可能存在多个I帧吗？"></a>3、什么是GOP？一个GOP中可能存在多个I帧吗？</h3><ul><li>GOP：Group Of Picture，图像组</li><li>在最新的H264标准中，一个GOP可以存在多个I帧。</li></ul><h4 id="4、什么是I帧？什么是IDR帧？"><a href="#4、什么是I帧？什么是IDR帧？" class="headerlink" title="4、什么是I帧？什么是IDR帧？"></a>4、什么是I帧？什么是IDR帧？</h4><ul><li><p>I帧，关键帧，采用帧内压缩技术，能独立解码出完整的一帧图片。</p></li><li><p>IDR，解码器立即刷新帧，清空参考帧队列，防止帧错误蔓延。</p></li><li><p><font color="red">IDR帧是特殊的I帧</font></p></li><li><p><font color="red">每个GOP中的第一帧就是IDR帧</font></p></li></ul><h3 id="5、什么是P帧？"><a href="#5、什么是P帧？" class="headerlink" title="5、什么是P帧？"></a>5、什么是P帧？</h3><ul><li>P帧，Forward Predicted Frame，向前参考帧，会参考前面的I帧或P帧。</li><li>采用帧间编码压缩技术。</li></ul><h3 id="6、什么是B帧？"><a href="#6、什么是B帧？" class="headerlink" title="6、什么是B帧？"></a>6、什么是B帧？</h3><ul><li>B帧，Bidirectionally predicted frame，双向参考帧。</li><li>会同时参考前面和后面的I帧或P帧。</li><li>采用帧间编码压缩技术。</li></ul><img src="/2022/06/04/%E9%9F%B3%E8%A7%86%E9%A2%91%E5%85%A5%E9%97%A8%E7%AC%AC%E4%B8%80%E5%AD%A3/day10H264%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86/image-20220604173715150.png" class=""><h2 id="二、H264压缩技术"><a href="#二、H264压缩技术" class="headerlink" title="二、H264压缩技术"></a>二、H264压缩技术</h2><h3 id="1、H264压缩主要四大技术，分别目标是什么？"><a href="#1、H264压缩主要四大技术，分别目标是什么？" class="headerlink" title="1、H264压缩主要四大技术，分别目标是什么？"></a>1、H264压缩主要四大技术，分别目标是什么？</h3><ul><li><font color="red">帧内压缩</font>：解决的是空域数据冗余问题</li><li><font color="red">帧间压缩</font>：解决的是时域数据冗余问题</li><li><font color="red">DCT变化</font>：整数离散余弦变换（DCT），将离散数据聚合，方便后续压缩</li><li><font color="red">CABAC压缩</font>：熵编码，属于无损压缩</li></ul><img src="/2022/06/04/%E9%9F%B3%E8%A7%86%E9%A2%91%E5%85%A5%E9%97%A8%E7%AC%AC%E4%B8%80%E5%AD%A3/day10H264%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86/image-20220604174439133.png" class=""><h3 id="2、视频花屏和卡顿的原因是什么？"><a href="#2、视频花屏和卡顿的原因是什么？" class="headerlink" title="2、视频花屏和卡顿的原因是什么？"></a>2、视频花屏和卡顿的原因是什么？</h3><ul><li><p><font color="red">花屏</font>：如果GOP分组中有帧丢失，会造成解码端的图像发生错误，这会出现马赛克(花屏)</p></li><li><p><font color="red">卡顿</font>：如果GOP解析错误，要等待下一个I帧到来，图像就静止了，这就出现的所谓的卡顿</p></li></ul><h3 id="三、H264码流分层"><a href="#三、H264码流分层" class="headerlink" title="三、H264码流分层"></a>三、H264码流分层</h3><h3 id="1、为什么要出现NAL层？"><a href="#1、为什么要出现NAL层？" class="headerlink" title="1、为什么要出现NAL层？"></a>1、为什么要出现NAL层？</h3><ul><li><font color="red">NAL</font>，Network Abstract Layer，视频数据网络抽象层</li><li>是为了解决网络传输过程中的<font color="red">丢包、乱序</font>等问题</li></ul><h3 id="2、什么VCL层？"><a href="#2、什么VCL层？" class="headerlink" title="2、什么VCL层？"></a>2、什么VCL层？</h3><ul><li>VCL，Video Coding Layer，视频数据编码层</li><li>帧内编码、帧间编码、DCT变换、熵编码最后出来的数据，就是VCL层数据</li></ul><h3 id="3、VCL结构关系？（从帧、片、宏块、子块）"><a href="#3、VCL结构关系？（从帧、片、宏块、子块）" class="headerlink" title="3、VCL结构关系？（从帧、片、宏块、子块）"></a>3、VCL结构关系？（从帧、片、宏块、子块）</h3><img src="/2022/06/04/%E9%9F%B3%E8%A7%86%E9%A2%91%E5%85%A5%E9%97%A8%E7%AC%AC%E4%B8%80%E5%AD%A3/day10H264%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86/image-20220604175228931.png" class=""><h3 id="4、SODB、RBSP、NALU-之间是什么关系？"><a href="#4、SODB、RBSP、NALU-之间是什么关系？" class="headerlink" title="4、SODB、RBSP、NALU 之间是什么关系？"></a>4、SODB、RBSP、NALU 之间是什么关系？</h3><ul><li><p><font color="red">SODB</font>，String Of Data BIts，原始数据<font color="blue">比特流</font>，长度不一定是8的倍数，故需要补齐</p></li><li><p><font color="red">RBSP</font>，Raw Byte Sequence Payload，是对SODB数据进行补齐后的<font color="blue">字节流</font>数据；RBSP &#x3D; SODB + trailing bits</p></li><li><p><font color="red">NALU</font>，Network Abstract Layer Unit，网络抽象层单元 &#x3D; NAL header + RBSP</p></li></ul><img src="/2022/06/04/%E9%9F%B3%E8%A7%86%E9%A2%91%E5%85%A5%E9%97%A8%E7%AC%AC%E4%B8%80%E5%AD%A3/day10H264%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86/image-20220604175734381.png" class=""><h3 id="5、整个码流分层图（本节最重要的图，要能默写）"><a href="#5、整个码流分层图（本节最重要的图，要能默写）" class="headerlink" title="5、整个码流分层图（本节最重要的图，要能默写）"></a>5、整个码流分层图（本节最重要的图，要能默写）</h3><img src="/2022/06/04/%E9%9F%B3%E8%A7%86%E9%A2%91%E5%85%A5%E9%97%A8%E7%AC%AC%E4%B8%80%E5%AD%A3/day10H264%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86/image-20220604180020055.png" class="">]]></content>
    
    
    <categories>
      
      <category>音视频入门课</category>
      
    </categories>
    
    
    <tags>
      
      <tag>音视频</tag>
      
      <tag>ffmpeg</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>day09-视频基础、认识YUV、采集摄像头YUV数据</title>
    <link href="/2022/06/04/%E9%9F%B3%E8%A7%86%E9%A2%91%E5%85%A5%E9%97%A8%E7%AC%AC%E4%B8%80%E5%AD%A3/day09%E8%A7%86%E9%A2%91%E5%9F%BA%E7%A1%80/"/>
    <url>/2022/06/04/%E9%9F%B3%E8%A7%86%E9%A2%91%E5%85%A5%E9%97%A8%E7%AC%AC%E4%B8%80%E5%AD%A3/day09%E8%A7%86%E9%A2%91%E5%9F%BA%E7%A1%80/</url>
    
    <content type="html"><![CDATA[<h2 id="一、视频基础知识"><a href="#一、视频基础知识" class="headerlink" title="一、视频基础知识"></a>一、视频基础知识</h2><h3 id="1、RGB888和RGBA分别占多少字节？"><a href="#1、RGB888和RGBA分别占多少字节？" class="headerlink" title="1、RGB888和RGBA分别占多少字节？"></a>1、RGB888和RGBA分别占多少字节？</h3><ul><li>RGB888 占 3个字节（24bit）</li><li>RGBA 占 4个字节（32bit）</li></ul><h3 id="2、RGB-和-BGR-是什么？"><a href="#2、RGB-和-BGR-是什么？" class="headerlink" title="2、RGB 和 BGR 是什么？"></a>2、RGB 和 BGR 是什么？</h3><ul><li>RGB 与 BGR 都是颜色格式，只是存储是R与B的位置不同。</li><li>BMP 使用的是BGR格式。</li></ul><h3 id="3、PPI是什么？DPI是什么？"><a href="#3、PPI是什么？DPI是什么？" class="headerlink" title="3、PPI是什么？DPI是什么？"></a>3、PPI是什么？DPI是什么？</h3><ul><li>PPI：Pixels per inch，每英寸展示的像素数</li><li>DPI：Dots per inch，每英寸展示的点数</li><li><font color="red">PPI &gt; 300 就属于视网膜级别</font></li><li><font color="red">基本上PPI就等于DPI</font></li></ul><h3 id="4、什么是分辨率？"><a href="#4、什么是分辨率？" class="headerlink" title="4、什么是分辨率？"></a>4、什么是分辨率？</h3><ul><li>X轴的像素个数  * Y轴的像素个数</li><li>常见的宽高比 16:9  、 4:3</li><li>360P&#x2F;720&#x2F;1K&#x2F;2K</li></ul><h3 id="5、什么是帧率？"><a href="#5、什么是帧率？" class="headerlink" title="5、什么是帧率？"></a>5、什么是帧率？</h3><ul><li><p>每秒钟采集&#x2F;播放图像的个数</p></li><li><p>动画的帧率是 25 帧&#x2F;s</p></li><li><p>常见的帧率是: 15帧&#x2F;s，30帧&#x2F;s，60帧&#x2F;s</p></li><li><p><font color="red">分辨率决定视频的清晰度，帧率决定视频的流畅度。</font></p></li></ul><h3 id="6、帧率25的720p视频，RGB码流是多少？"><a href="#6、帧率25的720p视频，RGB码流是多少？" class="headerlink" title="6、帧率25的720p视频，RGB码流是多少？"></a>6、帧率25的720p视频，RGB码流是多少？</h3><ul><li>25 * 720 *1280 * 3 * 8 &#x3D; 552.96Mbps</li></ul><h3 id="7、图像大小与显示区域大小有哪三种关系？（解决方案？）"><a href="#7、图像大小与显示区域大小有哪三种关系？（解决方案？）" class="headerlink" title="7、图像大小与显示区域大小有哪三种关系？（解决方案？）"></a>7、图像大小与显示区域大小有哪三种关系？（解决方案？）</h3><ul><li>图像等于显示区域，刚好展示。</li><li>图像小于显示区域，拉伸&#x2F;留白。</li><li>图像大于显示区域，缩小&#x2F;裁剪。</li></ul><h2 id="二、认识YUV"><a href="#二、认识YUV" class="headerlink" title="二、认识YUV"></a>二、认识YUV</h2><h3 id="1、YUV中的Y是什么？UV是什么？"><a href="#1、YUV中的Y是什么？UV是什么？" class="headerlink" title="1、YUV中的Y是什么？UV是什么？"></a>1、YUV中的Y是什么？UV是什么？</h3><ul><li>Y：表示明亮度。</li><li>UV：是描述影像色彩饱和度。</li><li>主要的采样格式有YUV420、YUV422、YUV444</li></ul><h3 id="2、RGB与YUV的关系是什么？"><a href="#2、RGB与YUV的关系是什么？" class="headerlink" title="2、RGB与YUV的关系是什么？"></a>2、RGB与YUV的关系是什么？</h3><ul><li><p>RGB和YUV都是颜色的存储方案，但是适用场景不相同</p></li><li><p>RGB：用于屏幕图像的展示</p></li><li><p>YUV：用于采集与编码</p></li></ul><img src="/2022/06/04/%E9%9F%B3%E8%A7%86%E9%A2%91%E5%85%A5%E9%97%A8%E7%AC%AC%E4%B8%80%E5%AD%A3/day09%E8%A7%86%E9%A2%91%E5%9F%BA%E7%A1%80/image-20220604103944297.png" class=""><img src="/2022/06/04/%E9%9F%B3%E8%A7%86%E9%A2%91%E5%85%A5%E9%97%A8%E7%AC%AC%E4%B8%80%E5%AD%A3/day09%E8%A7%86%E9%A2%91%E5%9F%BA%E7%A1%80/image-20220604103956016.png" class=""><h3 id="3、为什么要采用YUV这种颜色格式？"><a href="#3、为什么要采用YUV这种颜色格式？" class="headerlink" title="3、为什么要采用YUV这种颜色格式？"></a>3、为什么要采用YUV这种颜色格式？</h3><ul><li><p>①视频的发展历史是从黑白视频到彩色视频，这是历史原因的部分</p></li><li><p>②YUV由于人跟对Y分量敏感，对UV分量不敏感，所以YUV易于压缩。这是技术上的优势</p></li></ul><h3 id="4、YUV420p存储格式示意图"><a href="#4、YUV420p存储格式示意图" class="headerlink" title="4、YUV420p存储格式示意图"></a>4、YUV420p存储格式示意图</h3><img src="/2022/06/04/%E9%9F%B3%E8%A7%86%E9%A2%91%E5%85%A5%E9%97%A8%E7%AC%AC%E4%B8%80%E5%AD%A3/day09%E8%A7%86%E9%A2%91%E5%9F%BA%E7%A1%80/image-20220604105607839.png" class=""><img src="/2022/06/04/%E9%9F%B3%E8%A7%86%E9%A2%91%E5%85%A5%E9%97%A8%E7%AC%AC%E4%B8%80%E5%AD%A3/day09%E8%A7%86%E9%A2%91%E5%9F%BA%E7%A1%80/image-20220604105638912.png" class=""><h3 id="5、我们口头上常说的1兆带宽，是什么含义？"><a href="#5、我们口头上常说的1兆带宽，是什么含义？" class="headerlink" title="5、我们口头上常说的1兆带宽，是什么含义？"></a>5、我们口头上常说的1兆带宽，是什么含义？</h3><ul><li>这里的说的是1兆比特位，并非字节数</li><li>比如1兆的带宽，理论下载速度是 125KB&#x2F;s</li><li>所以我们计算码流大小的时候，通常也是用比特位来计算，也就是 <font color="red">比特位 &#x3D; 字节数 * 8</font></li></ul><h2 id="三、提取-x2F-录制YUV数据"><a href="#三、提取-x2F-录制YUV数据" class="headerlink" title="三、提取&#x2F;录制YUV数据"></a>三、提取&#x2F;录制YUV数据</h2><h3 id="1、如何从MP4中，提取YUV数据？"><a href="#1、如何从MP4中，提取YUV数据？" class="headerlink" title="1、如何从MP4中，提取YUV数据？"></a>1、如何从MP4中，提取YUV数据？</h3><ul><li>提取数据</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><pre><code class="hljs sh">ffmpeg -i raw.mp4 -an -c:v rawvideo -pix_fmt yuv420p yuv420p.yuv<br></code></pre></td></tr></table></figure><ul><li>播放yuv</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">ffplay -video_size 864x486 -pixel_format yuv420p -framerate 25 yuv420p.yuv<br></code></pre></td></tr></table></figure><ul><li>如果格式错误，会产生很有趣的现象，比如改成<font color="red">nv12</font>格式，会产生绿屏效果；如果尺寸错误，就会出现以前电视机的满屏马赛克，或者屏幕上或下移动的效果。</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">ffplay -video_size 864x486 -pixel_format nv12 yuv420p.yuv<br></code></pre></td></tr></table></figure><h3 id="2、如何从MP4中，提取分别提取Y、U、V数据？"><a href="#2、如何从MP4中，提取分别提取Y、U、V数据？" class="headerlink" title="2、如何从MP4中，提取分别提取Y、U、V数据？"></a>2、如何从MP4中，提取分别提取Y、U、V数据？</h3><ul><li>单独提取</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">ffmpeg -i raw.mp4 -filter_complex <span class="hljs-string">&#x27;extractplanes=y+u+v[y][u][v]&#x27;</span> -map <span class="hljs-string">&#x27;[y]&#x27;</span> y.yuv -map <span class="hljs-string">&#x27;[u]&#x27;</span> u.yuv -map <span class="hljs-string">&#x27;[v]&#x27;</span> v.yuv<br></code></pre></td></tr></table></figure><ul><li>单独播放Y数据</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">ffplay -video_size 864x486 -pixel_format gray y.yuv<br></code></pre></td></tr></table></figure><h3 id="3、代码录制YUV数据（和音频录制几乎一模一样）"><a href="#3、代码录制YUV数据（和音频录制几乎一模一样）" class="headerlink" title="3、代码录制YUV数据（和音频录制几乎一模一样）"></a>3、代码录制YUV数据（和音频录制几乎一模一样）</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><code class="hljs C"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&quot;test.h&quot;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;unistd.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&quot;include/libavdevice/avdevice.h&quot;</span></span><br><br><span class="hljs-comment">//录视频</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">record_video</span><span class="hljs-params">(<span class="hljs-type">void</span>)</span> &#123;<br>    <span class="hljs-type">int</span> ret = <span class="hljs-number">0</span>;<br>    <span class="hljs-type">char</span> errors[<span class="hljs-number">1024</span>];<br>    <br>    <span class="hljs-comment">//ctx</span><br>    AVFormatContext *fmt_ctx = <span class="hljs-literal">NULL</span>;<br>    AVDictionary *options = <span class="hljs-literal">NULL</span>;<br>    <br>    <span class="hljs-comment">//packet</span><br>    <span class="hljs-type">int</span> count = <span class="hljs-number">0</span>;<br>    AVPacket pkt;<br>    <br>    <span class="hljs-comment">// [video device]:[aduio device]</span><br>    <span class="hljs-type">char</span> *devicename = <span class="hljs-string">&quot;0&quot;</span>;<br>    <br>    <span class="hljs-comment">//register audio device</span><br>    avdevice_register_all();<br>    <br>    <span class="hljs-comment">//get format</span><br>    <span class="hljs-type">const</span> AVInputFormat *iformat = av_find_input_format(<span class="hljs-string">&quot;avfoundation&quot;</span>);<br>    <br>    av_dict_set(&amp;options, <span class="hljs-string">&quot;video_size&quot;</span>, <span class="hljs-string">&quot;640x480&quot;</span>, <span class="hljs-number">0</span>);<br>    av_dict_set(&amp;options, <span class="hljs-string">&quot;framerate&quot;</span>, <span class="hljs-string">&quot;30&quot;</span>, <span class="hljs-number">0</span>);<br>    av_dict_set(&amp;options, <span class="hljs-string">&quot;pixel_format&quot;</span>, <span class="hljs-string">&quot;nv12&quot;</span>, <span class="hljs-number">0</span>);<br>    <br>    <span class="hljs-comment">//open device</span><br>    ret = avformat_open_input(&amp;fmt_ctx, devicename, iformat, &amp;options);<br>    <span class="hljs-keyword">if</span> (ret &lt; <span class="hljs-number">0</span>) &#123;<br>        av_strerror(ret, errors, <span class="hljs-number">1024</span>);<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;avformat_open_input error&quot;</span>);<br>        <span class="hljs-keyword">return</span>;<br>    &#125;<br>    <br>    <span class="hljs-comment">//crate file</span><br>    <span class="hljs-type">char</span> *outPath = <span class="hljs-string">&quot;/Users/carrot/Desktop/MyCode/nv12.yuv&quot;</span>;<br>    FILE *outFile = fopen(outPath, <span class="hljs-string">&quot;wb+&quot;</span>);<br>    <span class="hljs-keyword">if</span> (outFile == <span class="hljs-literal">NULL</span>) &#123;<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;outFile fopen failed&quot;</span>);<br>        <span class="hljs-keyword">return</span>;<br>    &#125;<br>    <br>    <span class="hljs-comment">//read data from device</span><br>    <span class="hljs-keyword">while</span> ((ret = av_read_frame(fmt_ctx, &amp;pkt)) == <span class="hljs-number">0</span> || count++ &lt; <span class="hljs-number">20000</span>) &#123;<br>        usleep(<span class="hljs-number">100</span>);<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;ret %d&quot;</span>, ret);<br>        <span class="hljs-keyword">if</span> (pkt.size &gt; <span class="hljs-number">0</span>) &#123;<br>            <span class="hljs-comment">// (宽 * 高) * （yuv420=1.5 或 yuv422=2 或 yuv444=3）；nv12属于yuv420</span><br>            <span class="hljs-comment">// 640*480*1.5 = 460800</span><br>            fwrite(pkt.data, <span class="hljs-number">460800</span>, <span class="hljs-number">1</span>, outFile);<br>            fflush(outFile);<br>            <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;packet size is %d(%p), count=%d \n&quot;</span>, pkt.size, pkt.data, count);<br>            av_packet_unref(&amp;pkt);<br>        &#125;<br>    &#125;<br>    <br>    <span class="hljs-comment">//close device and release ctx</span><br>    avformat_close_input(&amp;fmt_ctx);<br>    <br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;运行结束\n&quot;</span>);<br>&#125;<br></code></pre></td></tr></table></figure><ul><li>播放刚刚录制的视频</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">ffplay -video_size 640x480 -pixel_format nv12 nv12.yuv<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>音视频入门课</category>
      
    </categories>
    
    
    <tags>
      
      <tag>音视频</tag>
      
      <tag>ffmpeg</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>day08-音频AAC编码实战(三)</title>
    <link href="/2022/05/29/%E9%9F%B3%E8%A7%86%E9%A2%91%E5%85%A5%E9%97%A8%E7%AC%AC%E4%B8%80%E5%AD%A3/day08%E9%9F%B3%E9%A2%91AAC%E7%BC%96%E7%A0%81%E5%AE%9E%E6%88%98/"/>
    <url>/2022/05/29/%E9%9F%B3%E8%A7%86%E9%A2%91%E5%85%A5%E9%97%A8%E7%AC%AC%E4%B8%80%E5%AD%A3/day08%E9%9F%B3%E9%A2%91AAC%E7%BC%96%E7%A0%81%E5%AE%9E%E6%88%98/</url>
    
    <content type="html"><![CDATA[<h2 id="一、AAC编码代码实战"><a href="#一、AAC编码代码实战" class="headerlink" title="一、AAC编码代码实战"></a>一、AAC编码代码实战</h2><h3 id="1、AVPacket、AVFrame这两个重要结构体一般存放什么数据？"><a href="#1、AVPacket、AVFrame这两个重要结构体一般存放什么数据？" class="headerlink" title="1、AVPacket、AVFrame这两个重要结构体一般存放什么数据？"></a>1、AVPacket、AVFrame这两个重要结构体一般存放什么数据？</h3><ul><li><p><font color="blue">AVFrame</font>：一般存放编码前的数据，对于音频数据来说，大部分情况下是PCM数据。</p></li><li><p><font color="blue">AVPacket</font>：一般存放编码后的数据，对于音频数据来说，大部分情况是压缩数据。</p></li></ul><h3 id="2、那为什么从麦克风读取的PCM数据，却是放在AVPacket呢？"><a href="#2、那为什么从麦克风读取的PCM数据，却是放在AVPacket呢？" class="headerlink" title="2、那为什么从麦克风读取的PCM数据，却是放在AVPacket呢？"></a>2、那为什么从麦克风读取的PCM数据，却是放在AVPacket呢？</h3><ul><li>因为ffmpeg认为麦克风是个外部多媒体文件（类似mp4），ffmpeg统一认为是编码后的AVPacket数据。</li></ul><h3 id="3、AAC编码的关键步骤"><a href="#3、AAC编码的关键步骤" class="headerlink" title="3、AAC编码的关键步骤"></a>3、AAC编码的关键步骤</h3><ul><li>找到编码器、创建上下文、打开编码器</li></ul><figure class="highlight c"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></div></td><td class="code"><pre><code class="hljs C">    <span class="hljs-comment">//找到libfdk编码器</span><br>    <span class="hljs-type">const</span> AVCodec *codec = avcodec_find_encoder_by_name(<span class="hljs-string">&quot;libfdk_aac&quot;</span>);<br>    <span class="hljs-keyword">if</span> (codec == <span class="hljs-literal">NULL</span>) &#123;<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;avcodec_find_encoder_by_name error&quot;</span>);<br>        <span class="hljs-keyword">return</span>;<br>    &#125;<br>    <br>    <span class="hljs-comment">//创建编码上下文</span><br>    AVCodecContext *codec_ctx = avcodec_alloc_context3(codec);<br>    codec_ctx-&gt;sample_fmt = AV_SAMPLE_FMT_S16;          <span class="hljs-comment">//输入音频的采样大小</span><br>    codec_ctx-&gt;channel_layout = AV_CH_LAYOUT_STEREO;    <span class="hljs-comment">//输入音频的channel layout</span><br>    codec_ctx-&gt;channels = <span class="hljs-number">2</span>;                            <span class="hljs-comment">//输入音频 channel 个数</span><br>    codec_ctx-&gt;sample_rate = <span class="hljs-number">44100</span>;                     <span class="hljs-comment">//输入音频的采样率</span><br><span class="hljs-comment">//    codec_ctx-&gt;bit_rate = 0; //AAC_LC:128K, AAC HE:64K, AAC HE V2:32K</span><br>    codec_ctx-&gt;profile = FF_PROFILE_AAC_HE; <span class="hljs-comment">//阅读 ffmpeg 代码，可知bit_rate 和 profile之间的设计关系</span><br>    <br>    <span class="hljs-comment">//打开编码器</span><br>    <span class="hljs-keyword">if</span> (avcodec_open2(codec_ctx, codec, <span class="hljs-literal">NULL</span>) &lt; <span class="hljs-number">0</span>) &#123;<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;avcodec_open2 error&quot;</span>);<br>        <span class="hljs-keyword">return</span>;<br>    &#125;<br></code></pre></td></tr></table></figure><ul><li>初始化输入和数据格式</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs C"><span class="hljs-comment">//初始化AAC编码前的数据载体</span><br>AVFrame *aac_frame = av_frame_alloc();<br><span class="hljs-keyword">if</span> (!aac_frame) &#123;<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;av_frame_alloc 失败&quot;</span>);<br>    <span class="hljs-keyword">return</span>;<br>&#125;<br>aac_frame-&gt;nb_samples           = <span class="hljs-number">512</span>;                  <span class="hljs-comment">//单通道一个音频帧的采样数</span><br>aac_frame-&gt;format               = AV_SAMPLE_FMT_S16;    <span class="hljs-comment">//每个采样大小</span><br>aac_frame-&gt;channel_layout       = AV_CH_LAYOUT_STEREO;  <span class="hljs-comment">//channel layout</span><br>av_frame_get_buffer(aac_frame, <span class="hljs-number">0</span>);                      <span class="hljs-comment">//512 * 2 * 2 = 2048 AVFrame的大小</span><br><span class="hljs-keyword">if</span> (!aac_frame-&gt;buf[<span class="hljs-number">0</span>]) &#123;<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;av_frame_get_buffer 失败&quot;</span>);<br>    <span class="hljs-keyword">return</span>;<br>&#125;<br><br><span class="hljs-comment">//初始化AAC编码后的数据载体</span><br>AVPacket *aac_packet = av_packet_alloc(); <span class="hljs-comment">//分配编码后的数据空间</span><br><span class="hljs-keyword">if</span> (!aac_packet) &#123;<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;av_packet_alloc 失败&quot;</span>);<br>    <span class="hljs-keyword">return</span>;<br>&#125;<br></code></pre></td></tr></table></figure><ul><li>双重循环，从编码器中去除编码后的数据</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><code class="hljs C"><span class="hljs-comment">//read data from device</span><br><span class="hljs-keyword">while</span> ((ret = av_read_frame(fmt_ctx, &amp;pkt)) == <span class="hljs-number">0</span> || count++ &lt; <span class="hljs-number">50000</span>) &#123;<br>    usleep(<span class="hljs-number">100</span>);<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;ret %d&quot;</span>, ret);<br>    <span class="hljs-keyword">if</span> (pkt.size &gt; <span class="hljs-number">0</span>) &#123;<br>        <span class="hljs-comment">//进行内存拷贝</span><br>        <span class="hljs-built_in">memcpy</span>(src_data[<span class="hljs-number">0</span>], pkt.data, pkt.size);<br>        <br>        <span class="hljs-comment">//重采样</span><br>        swr_convert(swr_ctx, dst_data, <span class="hljs-number">512</span>, (<span class="hljs-type">const</span> <span class="hljs-type">uint8_t</span> **)src_data, <span class="hljs-number">512</span>);<br>        <br>        <span class="hljs-comment">//将重采样的数据拷贝到frame中去</span><br>        <span class="hljs-built_in">memcpy</span>(aac_frame-&gt;data[<span class="hljs-number">0</span>], dst_data[<span class="hljs-number">0</span>], dst_linesize);<br>        <br>        <span class="hljs-comment">//将数据送编码器</span><br>        ret = avcodec_send_frame(codec_ctx, aac_frame);<br>        <br>        <span class="hljs-comment">//如果ret &gt;= 0 说明数据设置成功</span><br>        <span class="hljs-keyword">while</span> (ret &gt;= <span class="hljs-number">0</span>) &#123;<br>            <span class="hljs-comment">//获取编码后的音频数据，如果成功，则需要重复获取，直到失败为止</span><br>            ret = avcodec_receive_packet(codec_ctx, aac_packet);<br>            <span class="hljs-keyword">if</span> (ret &lt; <span class="hljs-number">0</span>) &#123;<br>                <span class="hljs-keyword">if</span> (ret == AVERROR(EAGAIN) || ret == AVERROR_EOF) &#123;<br>                    <span class="hljs-keyword">break</span>;<br>                &#125; <span class="hljs-keyword">else</span> &#123;<br>                    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;avcodec_receive_packet error&quot;</span>);<br>                    <span class="hljs-built_in">exit</span>(<span class="hljs-number">-1</span>);<br>                &#125;<br>            &#125;<br>            <br>            fwrite(aac_packet-&gt;data, aac_packet-&gt;size, <span class="hljs-number">1</span>, outFile);<br>            fflush(outFile);<br>        &#125;<br>        <br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;packet size is %d(%p), count=%d \n&quot;</span>, pkt.size, pkt.data, count);<br>        av_packet_unref(&amp;pkt);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="4、AAC编码的完整代码-还有bug"><a href="#4、AAC编码的完整代码-还有bug" class="headerlink" title="4、AAC编码的完整代码(还有bug)"></a>4、AAC编码的完整代码(还有bug)</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br></pre></td><td class="code"><pre><code class="hljs C"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&quot;test.h&quot;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;unistd.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&quot;include/libavutil/avutil.h&quot;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&quot;include/libavdevice/avdevice.h&quot;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&quot;include/libavcodec/avcodec.h&quot;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&quot;include/libswresample/swresample.h&quot;</span></span><br><br><span class="hljs-comment">//录音</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">record_audio</span><span class="hljs-params">(<span class="hljs-type">void</span>)</span> &#123;<br>    <span class="hljs-type">int</span> ret = <span class="hljs-number">0</span>;<br>    <span class="hljs-type">char</span> errors[<span class="hljs-number">1024</span>];<br>    <br>    <span class="hljs-comment">//ctx</span><br>    AVFormatContext *fmt_ctx = <span class="hljs-literal">NULL</span>;<br>    AVDictionary *options = <span class="hljs-literal">NULL</span>;<br>    SwrContext *swr_ctx = <span class="hljs-literal">NULL</span>;<br>    <br>    swr_ctx = swr_alloc_set_opts(<span class="hljs-literal">NULL</span>,<br>                                 AV_CH_LAYOUT_STEREO, AV_SAMPLE_FMT_S16, <span class="hljs-number">44100</span>,  <span class="hljs-comment">// 重采样输出音频三要素</span><br>                                 AV_CH_LAYOUT_STEREO, AV_SAMPLE_FMT_FLT, <span class="hljs-number">44100</span>,  <span class="hljs-comment">// 重采样输入音频三要数</span><br>                                 <span class="hljs-number">0</span>, <span class="hljs-literal">NULL</span>);<br>    <span class="hljs-keyword">if</span> (swr_ctx == <span class="hljs-literal">NULL</span>) &#123;<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;swr_alloc_set_opts error&quot;</span>);<br>        <span class="hljs-keyword">return</span>;<br>    &#125;<br>    <br>    ret = swr_init(swr_ctx);<br>    <span class="hljs-keyword">if</span> (ret != <span class="hljs-number">0</span>) &#123;<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;swr_init error&quot;</span>);<br>        <span class="hljs-keyword">return</span>;<br>    &#125;<br>    <br>    <span class="hljs-type">uint8_t</span> **src_data = <span class="hljs-literal">NULL</span>;<br>    <span class="hljs-type">int</span> src_linesize = <span class="hljs-number">0</span>;<br>    <span class="hljs-type">uint8_t</span> **dst_data = <span class="hljs-literal">NULL</span>;<br>    <span class="hljs-type">int</span> dst_linesize = <span class="hljs-number">0</span>;<br>    <br>    av_samples_alloc_array_and_samples(&amp;src_data, &amp;src_linesize, <span class="hljs-number">2</span>, <span class="hljs-number">512</span>, AV_SAMPLE_FMT_FLT, <span class="hljs-number">0</span>);<br>    av_samples_alloc_array_and_samples(&amp;dst_data, &amp;dst_linesize, <span class="hljs-number">2</span>, <span class="hljs-number">512</span>, AV_SAMPLE_FMT_S16, <span class="hljs-number">0</span>);<br>    <br>    <span class="hljs-comment">//packet</span><br>    <span class="hljs-type">int</span> count = <span class="hljs-number">0</span>;<br>    AVPacket pkt;<br>    <br>    <span class="hljs-comment">// [video device]:[aduio device]</span><br>    <span class="hljs-type">char</span> *devicename = <span class="hljs-string">&quot;:0&quot;</span>;<br>    <br>    <span class="hljs-comment">//register audio device</span><br>    avdevice_register_all();<br>    <br>    <span class="hljs-comment">//get format</span><br>    <span class="hljs-type">const</span> AVInputFormat *iformat = av_find_input_format(<span class="hljs-string">&quot;avfoundation&quot;</span>);<br>    <br>    <span class="hljs-comment">//open device</span><br>    ret = avformat_open_input(&amp;fmt_ctx, devicename, iformat, &amp;options);<br>    <span class="hljs-keyword">if</span> (ret &lt; <span class="hljs-number">0</span>) &#123;<br>        av_strerror(ret, errors, <span class="hljs-number">1024</span>);<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;avformat_open_input error&quot;</span>);<br>        <span class="hljs-keyword">return</span>;<br>    &#125;<br>    <br>    <span class="hljs-comment">//crate file</span><br>    <span class="hljs-type">char</span> *outPath = <span class="hljs-string">&quot;/Users/carrot/Desktop/MyCode/he_audio.aac&quot;</span>;<br>    FILE *outFile = fopen(outPath, <span class="hljs-string">&quot;wb+&quot;</span>);<br>    <span class="hljs-keyword">if</span> (outFile == <span class="hljs-literal">NULL</span>) &#123;<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;outFile fopen failed&quot;</span>);<br>        <span class="hljs-keyword">return</span>;<br>    &#125;<br>    <br>    <span class="hljs-comment">//找到libfdk编码器</span><br>    <span class="hljs-type">const</span> AVCodec *codec = avcodec_find_encoder_by_name(<span class="hljs-string">&quot;libfdk_aac&quot;</span>);<br>    <span class="hljs-keyword">if</span> (codec == <span class="hljs-literal">NULL</span>) &#123;<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;avcodec_find_encoder_by_name error&quot;</span>);<br>        <span class="hljs-keyword">return</span>;<br>    &#125;<br>    <br>    <span class="hljs-comment">//创建编码上下文</span><br>    AVCodecContext *codec_ctx = avcodec_alloc_context3(codec);<br>    codec_ctx-&gt;sample_fmt = AV_SAMPLE_FMT_S16;          <span class="hljs-comment">//输入音频的采样大小</span><br>    codec_ctx-&gt;channel_layout = AV_CH_LAYOUT_STEREO;    <span class="hljs-comment">//输入音频的channel layout</span><br>    codec_ctx-&gt;channels = <span class="hljs-number">2</span>;                            <span class="hljs-comment">//输入音频 channel 个数</span><br>    codec_ctx-&gt;sample_rate = <span class="hljs-number">44100</span>;                     <span class="hljs-comment">//输入音频的采样率</span><br><span class="hljs-comment">//    codec_ctx-&gt;bit_rate = 0; //AAC_LC:128K, AAC HE:64K, AAC HE V2:32K</span><br>    codec_ctx-&gt;profile = FF_PROFILE_AAC_HE; <span class="hljs-comment">//阅读 ffmpeg 代码，可知bit_rate 和 profile之间的设计关系</span><br>    <br>    <span class="hljs-comment">//打开编码器</span><br>    <span class="hljs-keyword">if</span> (avcodec_open2(codec_ctx, codec, <span class="hljs-literal">NULL</span>) &lt; <span class="hljs-number">0</span>) &#123;<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;avcodec_open2 error&quot;</span>);<br>        <span class="hljs-keyword">return</span>;<br>    &#125;<br>    <br>    <span class="hljs-comment">//初始化AAC编码前的数据载体</span><br>    AVFrame *aac_frame = av_frame_alloc();<br>    <span class="hljs-keyword">if</span> (!aac_frame) &#123;<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;av_frame_alloc 失败&quot;</span>);<br>        <span class="hljs-keyword">return</span>;<br>    &#125;<br>    aac_frame-&gt;nb_samples           = <span class="hljs-number">512</span>;                  <span class="hljs-comment">//单通道一个音频帧的采样数</span><br>    aac_frame-&gt;format               = AV_SAMPLE_FMT_S16;    <span class="hljs-comment">//每个采样大小</span><br>    aac_frame-&gt;channel_layout       = AV_CH_LAYOUT_STEREO;  <span class="hljs-comment">//channel layout</span><br>    av_frame_get_buffer(aac_frame, <span class="hljs-number">0</span>);                      <span class="hljs-comment">//512 * 2 * 2 = 2048 AVFrame的大小</span><br>    <span class="hljs-keyword">if</span> (!aac_frame-&gt;buf[<span class="hljs-number">0</span>]) &#123;<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;av_frame_get_buffer 失败&quot;</span>);<br>        <span class="hljs-keyword">return</span>;<br>    &#125;<br>    <br>    <span class="hljs-comment">//初始化AAC编码后的数据载体</span><br>    AVPacket *aac_packet = av_packet_alloc(); <span class="hljs-comment">//分配编码后的数据空间</span><br>    <span class="hljs-keyword">if</span> (!aac_packet) &#123;<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;av_packet_alloc 失败&quot;</span>);<br>        <span class="hljs-keyword">return</span>;<br>    &#125;<br>    <br>    <br>    <span class="hljs-comment">//read data from device</span><br>    <span class="hljs-keyword">while</span> ((ret = av_read_frame(fmt_ctx, &amp;pkt)) == <span class="hljs-number">0</span> || count++ &lt; <span class="hljs-number">50000</span>) &#123;<br>        usleep(<span class="hljs-number">100</span>);<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;ret %d&quot;</span>, ret);<br>        <span class="hljs-keyword">if</span> (pkt.size &gt; <span class="hljs-number">0</span>) &#123;<br>            <span class="hljs-comment">//进行内存拷贝</span><br>            <span class="hljs-built_in">memcpy</span>(src_data[<span class="hljs-number">0</span>], pkt.data, pkt.size);<br>            <br>            <span class="hljs-comment">//重采样</span><br>            swr_convert(swr_ctx, dst_data, <span class="hljs-number">512</span>, (<span class="hljs-type">const</span> <span class="hljs-type">uint8_t</span> **)src_data, <span class="hljs-number">512</span>);<br>            <br>            <span class="hljs-comment">//将重采样的数据拷贝到frame中去</span><br>            <span class="hljs-built_in">memcpy</span>(aac_frame-&gt;data[<span class="hljs-number">0</span>], dst_data[<span class="hljs-number">0</span>], dst_linesize);<br>            <br>            <span class="hljs-comment">//将数据送编码器</span><br>            ret = avcodec_send_frame(codec_ctx, aac_frame);<br>            <br>            <span class="hljs-comment">//如果ret &gt;= 0 说明数据设置成功</span><br>            <span class="hljs-keyword">while</span> (ret &gt;= <span class="hljs-number">0</span>) &#123;<br>                <span class="hljs-comment">//获取编码后的音频数据，如果成功，则需要重复获取，直到失败为止</span><br>                ret = avcodec_receive_packet(codec_ctx, aac_packet);<br>                <span class="hljs-keyword">if</span> (ret &lt; <span class="hljs-number">0</span>) &#123;<br>                    <span class="hljs-keyword">if</span> (ret == AVERROR(EAGAIN) || ret == AVERROR_EOF) &#123;<br>                        <span class="hljs-keyword">break</span>;<br>                    &#125; <span class="hljs-keyword">else</span> &#123;<br>                        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;avcodec_receive_packet error&quot;</span>);<br>                        <span class="hljs-built_in">exit</span>(<span class="hljs-number">-1</span>);<br>                    &#125;<br>                &#125;<br>                <br>                fwrite(aac_packet-&gt;data, aac_packet-&gt;size, <span class="hljs-number">1</span>, outFile);<br>                fflush(outFile);<br>            &#125;<br>            <br>            <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;packet size is %d(%p), count=%d \n&quot;</span>, pkt.size, pkt.data, count);<br>            av_packet_unref(&amp;pkt);<br>        &#125;<br>    &#125;<br>    <br>    <span class="hljs-comment">//close device and release ctx</span><br>    avformat_close_input(&amp;fmt_ctx);<br>    <br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;运行结束\n&quot;</span>);<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="5、借助ffplay播放编码后的aac文件"><a href="#5、借助ffplay播放编码后的aac文件" class="headerlink" title="5、借助ffplay播放编码后的aac文件"></a>5、借助ffplay播放编码后的aac文件</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">ffplay he_audio.aac<br></code></pre></td></tr></table></figure><h2 id="二、录音、重采样、aac编码代码抽取优化、完整代码"><a href="#二、录音、重采样、aac编码代码抽取优化、完整代码" class="headerlink" title="二、录音、重采样、aac编码代码抽取优化、完整代码"></a>二、录音、重采样、aac编码代码抽取优化、完整代码</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br></pre></td><td class="code"><pre><code class="hljs C"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&quot;test.h&quot;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;unistd.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&quot;include/libavutil/avutil.h&quot;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&quot;include/libavdevice/avdevice.h&quot;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&quot;include/libavcodec/avcodec.h&quot;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&quot;include/libswresample/swresample.h&quot;</span></span><br><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;string.h&gt;</span></span><br><br><span class="hljs-type">static</span> <span class="hljs-type">int</span> rec_status = <span class="hljs-number">0</span>;<br><br><span class="hljs-type">void</span> <span class="hljs-title function_">set_status</span><span class="hljs-params">(<span class="hljs-type">int</span> status)</span>&#123;<br>    rec_status = status;<br>&#125;<br><br><span class="hljs-comment">//[in]</span><br><span class="hljs-comment">//[out]</span><br><span class="hljs-comment">//ret</span><br><span class="hljs-comment">//@brief encode audio data</span><br><span class="hljs-type">static</span> <span class="hljs-type">void</span> <span class="hljs-title function_">encode</span><span class="hljs-params">(AVCodecContext *ctx,</span><br><span class="hljs-params">            AVFrame *frame,</span><br><span class="hljs-params">            AVPacket *pkt,</span><br><span class="hljs-params">            FILE *output)</span>&#123;<br>    <br>    <span class="hljs-type">int</span> ret = <span class="hljs-number">0</span>;<br>    <br>    <span class="hljs-comment">//将数据送编码器</span><br>    ret = avcodec_send_frame(ctx, frame);<br>    <br>    <span class="hljs-comment">//如果ret&gt;=0说明数据设置成功</span><br>    <span class="hljs-keyword">while</span>(ret &gt;= <span class="hljs-number">0</span>)&#123;<br>        <span class="hljs-comment">//获取编码后的音频数据,如果成功，需要重复获取，直到失败为止</span><br>        ret = avcodec_receive_packet(ctx, pkt);<br>        <br>        <span class="hljs-keyword">if</span>(ret == AVERROR(EAGAIN) || ret == AVERROR_EOF)&#123;<br>            <span class="hljs-keyword">return</span>;<br>        &#125;<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>( ret &lt; <span class="hljs-number">0</span>)&#123;<br>            <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;Error, encoding audio frame\n&quot;</span>);<br>            <span class="hljs-built_in">exit</span>(<span class="hljs-number">-1</span>);<br>        &#125;<br>        <br>        <span class="hljs-comment">//write file</span><br>        fwrite(pkt-&gt;data, <span class="hljs-number">1</span>, pkt-&gt;size, output);<br>        fflush(output);<br>    &#125;<br>    <br>    <span class="hljs-keyword">return</span>;<br>&#125;<br><br><span class="hljs-comment">//[in]</span><br><span class="hljs-comment">//[out]</span><br><span class="hljs-comment">//</span><br><span class="hljs-type">static</span> AVCodecContext* <span class="hljs-title function_">open_coder</span><span class="hljs-params">()</span>&#123;<br>    <br>    <span class="hljs-comment">//打开编码器</span><br>    <span class="hljs-comment">//avcodec_find_encoder(AV_CODEC_ID_AAC);</span><br>    AVCodec *codec = avcodec_find_encoder_by_name(<span class="hljs-string">&quot;libfdk_aac&quot;</span>);<br>    <br>    <span class="hljs-comment">//创建 codec 上下文</span><br>    AVCodecContext *codec_ctx = avcodec_alloc_context3(codec);<br>    <br>    codec_ctx-&gt;sample_fmt = AV_SAMPLE_FMT_S16;          <span class="hljs-comment">//输入音频的采样大小</span><br>    codec_ctx-&gt;channel_layout = AV_CH_LAYOUT_STEREO;    <span class="hljs-comment">//输入音频的channel layout</span><br>    codec_ctx-&gt;channels = <span class="hljs-number">2</span>;                            <span class="hljs-comment">//输入音频 channel 个数</span><br>    codec_ctx-&gt;sample_rate = <span class="hljs-number">44100</span>;                     <span class="hljs-comment">//输入音频的采样率</span><br>    codec_ctx-&gt;bit_rate = <span class="hljs-number">0</span>; <span class="hljs-comment">//AAC_LC: 128K, AAC HE: 64K, AAC HE V2: 32K</span><br>    codec_ctx-&gt;profile = FF_PROFILE_AAC_HE; <span class="hljs-comment">//阅读 ffmpeg 代码</span><br>    <br>    <span class="hljs-comment">//打开编码器</span><br>    <span class="hljs-keyword">if</span>(avcodec_open2(codec_ctx, codec, <span class="hljs-literal">NULL</span>)&lt;<span class="hljs-number">0</span>)&#123;<br>        <span class="hljs-comment">//</span><br>        <br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">NULL</span>;<br>    &#125;<br>    <br>    <span class="hljs-keyword">return</span> codec_ctx;<br>&#125;<br><br><span class="hljs-type">static</span><br>SwrContext* <span class="hljs-title function_">init_swr</span><span class="hljs-params">()</span>&#123;<br>    <br>    SwrContext *swr_ctx = <span class="hljs-literal">NULL</span>;<br>    <br>    <span class="hljs-comment">//channel, number/</span><br>    swr_ctx = swr_alloc_set_opts(<span class="hljs-literal">NULL</span>,                <span class="hljs-comment">//ctx</span><br>                                 AV_CH_LAYOUT_STEREO, <span class="hljs-comment">//输出channel布局</span><br>                                 AV_SAMPLE_FMT_S16,   <span class="hljs-comment">//输出的采样格式</span><br>                                 <span class="hljs-number">44100</span>,               <span class="hljs-comment">//采样率</span><br>                                 AV_CH_LAYOUT_STEREO, <span class="hljs-comment">//输入channel布局</span><br>                                 AV_SAMPLE_FMT_FLT,   <span class="hljs-comment">//输入的采样格式</span><br>                                 <span class="hljs-number">44100</span>,               <span class="hljs-comment">//输入的采样率</span><br>                                 <span class="hljs-number">0</span>, <span class="hljs-literal">NULL</span>);<br>    <br>    <span class="hljs-keyword">if</span>(!swr_ctx)&#123;<br>        <br>    &#125;<br>    <br>    <span class="hljs-keyword">if</span>(swr_init(swr_ctx) &lt; <span class="hljs-number">0</span>)&#123;<br>        <br>    &#125;<br>    <br>    <span class="hljs-keyword">return</span> swr_ctx;<br>&#125;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment">  * @brief open audio device</span><br><span class="hljs-comment">  * @return succ: AVFormatContext*, fail: NULL</span><br><span class="hljs-comment">  */</span><br><span class="hljs-type">static</span><br>AVFormatContext* <span class="hljs-title function_">open_dev</span><span class="hljs-params">()</span>&#123;<br>    <br>    <span class="hljs-type">int</span> ret = <span class="hljs-number">0</span>;<br>    <span class="hljs-type">char</span> errors[<span class="hljs-number">1024</span>] = &#123;<span class="hljs-number">0</span>, &#125;;<br>    <br>    <span class="hljs-comment">//ctx</span><br>    AVFormatContext *fmt_ctx = <span class="hljs-literal">NULL</span>;<br>    AVDictionary *options = <span class="hljs-literal">NULL</span>;<br>    <br>    <span class="hljs-comment">//[[video device]:[audio device]]</span><br>    <span class="hljs-type">char</span> *devicename = <span class="hljs-string">&quot;:0&quot;</span>;<br>    <br>    <span class="hljs-comment">//get format</span><br>    AVInputFormat *iformat = av_find_input_format(<span class="hljs-string">&quot;avfoundation&quot;</span>);<br>    <br>    <span class="hljs-comment">//open device</span><br>    <span class="hljs-keyword">if</span>((ret = avformat_open_input(&amp;fmt_ctx, devicename, iformat, &amp;options)) &lt; <span class="hljs-number">0</span> )&#123;<br>        av_strerror(ret, errors, <span class="hljs-number">1024</span>);<br>        <span class="hljs-built_in">fprintf</span>(<span class="hljs-built_in">stderr</span>, <span class="hljs-string">&quot;Failed to open audio device, [%d]%s\n&quot;</span>, ret, errors);<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">NULL</span>;<br>    &#125;<br>    <br>    <span class="hljs-keyword">return</span> fmt_ctx;<br>&#125;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * @brief xxxx</span><br><span class="hljs-comment"> * @return xxx</span><br><span class="hljs-comment"> */</span><br><span class="hljs-type">static</span><br>AVFrame* <span class="hljs-title function_">create_frame</span><span class="hljs-params">()</span>&#123;<br>    <br>    AVFrame *frame = <span class="hljs-literal">NULL</span>;<br>    <br>    <span class="hljs-comment">//音频输入数据</span><br>    frame = av_frame_alloc();<br>    <span class="hljs-keyword">if</span>(!frame)&#123;<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;Error, No Memory!\n&quot;</span>);<br>        <span class="hljs-keyword">goto</span> __ERROR;<br>    &#125;<br>    <br>    <span class="hljs-comment">//set parameters</span><br>    frame-&gt;nb_samples     = <span class="hljs-number">512</span>;                <span class="hljs-comment">//单通道一个音频帧的采样数</span><br>    frame-&gt;format         = AV_SAMPLE_FMT_S16;  <span class="hljs-comment">//每个采样的大小</span><br>    frame-&gt;channel_layout = AV_CH_LAYOUT_STEREO; <span class="hljs-comment">//channel layout</span><br>    <br>    <span class="hljs-comment">//alloc inner memory</span><br>    av_frame_get_buffer(frame, <span class="hljs-number">0</span>); <span class="hljs-comment">// 512 * 2 * = 2048</span><br>    <span class="hljs-keyword">if</span>(!frame-&gt;data[<span class="hljs-number">0</span>])&#123;<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;Error, Failed to alloc buf in frame!\n&quot;</span>);<br>        <span class="hljs-comment">//内存泄漏</span><br>        <span class="hljs-keyword">goto</span> __ERROR;<br>    &#125;<br>    <br>    <span class="hljs-keyword">return</span> frame;<br>    <br>__ERROR:<br>    <span class="hljs-keyword">if</span>(frame)&#123;<br>        av_frame_free(&amp;frame);<br>    &#125;<br>    <br>    <span class="hljs-keyword">return</span> <span class="hljs-literal">NULL</span>;<br>&#125;<br><br><span class="hljs-type">static</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">alloc_data_4_resample</span><span class="hljs-params">(<span class="hljs-type">uint8_t</span> ***src_data,</span><br><span class="hljs-params">                           <span class="hljs-type">int</span> *src_linesize,</span><br><span class="hljs-params">                           <span class="hljs-type">uint8_t</span> *** dst_data,</span><br><span class="hljs-params">                           <span class="hljs-type">int</span> *dst_linesize)</span>&#123;<br>    <span class="hljs-comment">//4096/4=1024/2=512</span><br>    <span class="hljs-comment">//创建输入缓冲区</span><br>    av_samples_alloc_array_and_samples(src_data,         <span class="hljs-comment">//输出缓冲区地址</span><br>                                       src_linesize,     <span class="hljs-comment">//缓冲区的大小</span><br>                                       <span class="hljs-number">2</span>,                 <span class="hljs-comment">//通道个数</span><br>                                       <span class="hljs-number">512</span>,               <span class="hljs-comment">//单通道采样个数</span><br>                                       AV_SAMPLE_FMT_FLT, <span class="hljs-comment">//采样格式</span><br>                                       <span class="hljs-number">0</span>);<br>    <br>    <span class="hljs-comment">//创建输出缓冲区</span><br>    av_samples_alloc_array_and_samples(dst_data,         <span class="hljs-comment">//输出缓冲区地址</span><br>                                       dst_linesize,     <span class="hljs-comment">//缓冲区的大小</span><br>                                       <span class="hljs-number">2</span>,                 <span class="hljs-comment">//通道个数</span><br>                                       <span class="hljs-number">512</span>,               <span class="hljs-comment">//单通道采样个数</span><br>                                       AV_SAMPLE_FMT_S16, <span class="hljs-comment">//采样格式</span><br>                                       <span class="hljs-number">0</span>);<br>&#125;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> */</span><br><span class="hljs-type">static</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">free_data_4_resample</span><span class="hljs-params">(<span class="hljs-type">uint8_t</span> **src_data, <span class="hljs-type">uint8_t</span> **dst_data)</span>&#123;<br>    <span class="hljs-comment">//释放输入输出缓冲区</span><br>    <span class="hljs-keyword">if</span>(src_data)&#123;<br>        av_freep(&amp;src_data[<span class="hljs-number">0</span>]);<br>    &#125;<br>    av_freep(&amp;src_data);<br>    <br>    <span class="hljs-keyword">if</span>(dst_data)&#123;<br>        av_freep(&amp;dst_data[<span class="hljs-number">0</span>]);<br>    &#125;<br>    av_freep(&amp;dst_data);<br>&#125;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> */</span><br><span class="hljs-type">static</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">read_data_and_encode</span><span class="hljs-params">(AVFormatContext *fmt_ctx, <span class="hljs-comment">//</span></span><br><span class="hljs-params">                          AVCodecContext *c_ctx,</span><br><span class="hljs-params">                          SwrContext* swr_ctx,</span><br><span class="hljs-params">                          FILE *outfile)</span>&#123;<br>    <br>    <span class="hljs-type">int</span> ret = <span class="hljs-number">0</span>;<br>    <br>    <span class="hljs-comment">//pakcet</span><br>    AVPacket pkt;<br>    AVFrame *frame = <span class="hljs-literal">NULL</span>;<br>    AVPacket *newpkt = <span class="hljs-literal">NULL</span>;<br>    <br>    <span class="hljs-comment">//重采样缓冲区</span><br>    <span class="hljs-type">uint8_t</span> **src_data = <span class="hljs-literal">NULL</span>;<br>    <span class="hljs-type">int</span> src_linesize = <span class="hljs-number">0</span>;<br>    <br>    <span class="hljs-type">uint8_t</span> **dst_data = <span class="hljs-literal">NULL</span>;<br>    <span class="hljs-type">int</span> dst_linesize = <span class="hljs-number">0</span>;<br><br>    frame = create_frame();<br>    <span class="hljs-keyword">if</span>(!frame)&#123;<br>        <span class="hljs-comment">//printf(...)</span><br>        <span class="hljs-keyword">goto</span> __ERROR;<br>    &#125;<br>    <br>    newpkt = av_packet_alloc(); <span class="hljs-comment">//分配编码后的数据空间</span><br>    <span class="hljs-keyword">if</span>(!newpkt)&#123;<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;Error, Failed to alloc buf in frame!\n&quot;</span>);<br>        <span class="hljs-keyword">goto</span> __ERROR;<br>    &#125;<br>    <br>    <span class="hljs-comment">//分配重采样输入/输出缓冲区</span><br>    alloc_data_4_resample(&amp;src_data, &amp;src_linesize, &amp;dst_data, &amp;dst_linesize);<br>    <br>    <span class="hljs-comment">//read data from device</span><br>    <span class="hljs-keyword">while</span>(rec_status) &#123;<br>        ret = av_read_frame(fmt_ctx, &amp;pkt);<br>        <br>        <span class="hljs-keyword">if</span> (pkt.size &lt;= <span class="hljs-number">0</span>) &#123;<br>            usleep(<span class="hljs-number">300</span>);<br>            <span class="hljs-keyword">continue</span>;<br>        &#125;<br>        <span class="hljs-comment">//进行内存拷贝，按字节拷贝的</span><br>        <span class="hljs-built_in">memcpy</span>((<span class="hljs-type">void</span>*)src_data[<span class="hljs-number">0</span>], (<span class="hljs-type">void</span>*)pkt.data, pkt.size);<br>        <br>        <span class="hljs-comment">//重采样</span><br>        swr_convert(swr_ctx,                    <span class="hljs-comment">//重采样的上下文</span><br>                    dst_data,                   <span class="hljs-comment">//输出结果缓冲区</span><br>                    <span class="hljs-number">512</span>,                        <span class="hljs-comment">//每个通道的采样数</span><br>                    (<span class="hljs-type">const</span> <span class="hljs-type">uint8_t</span> **)src_data, <span class="hljs-comment">//输入缓冲区</span><br>                    <span class="hljs-number">512</span>);                       <span class="hljs-comment">//输入单个通道的采样数</span><br>        <br>        <span class="hljs-comment">//将重采样的数据拷贝到 frame 中</span><br>        <span class="hljs-built_in">memcpy</span>((<span class="hljs-type">void</span> *)frame-&gt;data[<span class="hljs-number">0</span>], dst_data[<span class="hljs-number">0</span>], dst_linesize);<br>        <br>        <span class="hljs-comment">//encode</span><br>        encode(c_ctx, frame, newpkt, outfile);<br>        <br>        <span class="hljs-comment">//</span><br>        av_packet_unref(&amp;pkt); <span class="hljs-comment">//release pkt</span><br>    &#125;<br>    <br>    <span class="hljs-comment">//强制将编码器缓冲区中的音频进行编码输出</span><br>    encode(c_ctx, <span class="hljs-literal">NULL</span>, newpkt, outfile);<br><br>__ERROR:<br>    <span class="hljs-comment">//释放 AVFrame 和 AVPacket</span><br>    <span class="hljs-keyword">if</span>(frame)&#123;<br>        av_frame_free(&amp;frame);<br>    &#125;<br>    <br>    <span class="hljs-keyword">if</span>(newpkt)&#123;<br>        av_packet_free(&amp;newpkt);<br>    &#125;<br>    <br>    <span class="hljs-comment">//释放重采样缓冲区</span><br>    free_data_4_resample(src_data, dst_data);<br>&#125;<br><br><span class="hljs-type">void</span> <span class="hljs-title function_">rec_audio</span><span class="hljs-params">()</span> &#123;<br>  <br>    <span class="hljs-comment">//context</span><br>    AVFormatContext *fmt_ctx = <span class="hljs-literal">NULL</span>;<br>    AVCodecContext *c_ctx = <span class="hljs-literal">NULL</span>;<br>    SwrContext* swr_ctx = <span class="hljs-literal">NULL</span>;<br><br>    <span class="hljs-comment">//set log level</span><br>    av_log_set_level(AV_LOG_DEBUG);<br>    <br>    <span class="hljs-comment">//register audio device</span><br>    avdevice_register_all();<br>    <br>    <span class="hljs-comment">//start record</span><br>    rec_status = <span class="hljs-number">1</span>;<br>    <br>    <span class="hljs-comment">//create file</span><br>    <span class="hljs-comment">//char *out = &quot;/Users/lichao/Downloads/av_base/audio.pcm&quot;;</span><br>    <span class="hljs-type">char</span> *out = <span class="hljs-string">&quot;/Users/carrot/Desktop/MyCode/audio.aac&quot;</span>;<br>    FILE *outfile = fopen(out, <span class="hljs-string">&quot;wb+&quot;</span>);<br>    <span class="hljs-keyword">if</span>(!outfile)&#123;<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;Error, Failed to open file!\n&quot;</span>);<br>        <span class="hljs-keyword">goto</span> __ERROR;<br>    &#125;<br>    <br>    <span class="hljs-comment">//打开设备</span><br>    fmt_ctx = open_dev();<br>    <span class="hljs-keyword">if</span>(!fmt_ctx)&#123;<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;Error, Failed to open device!\n&quot;</span>);<br>        <span class="hljs-keyword">goto</span> __ERROR;<br>    &#125;<br><br>    <span class="hljs-comment">//打开编码器上下文</span><br>    c_ctx = open_coder();<br>    <span class="hljs-keyword">if</span>(!c_ctx)&#123;<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;...&quot;</span>);<br>        <span class="hljs-keyword">goto</span> __ERROR;<br>    &#125;<br><br>    <span class="hljs-comment">//初始化重采样上下文</span><br>    swr_ctx = init_swr();<br>    <span class="hljs-keyword">if</span>(!swr_ctx)&#123;<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;Error, Failed to alloc buf in frame!\n&quot;</span>);<br>        <span class="hljs-keyword">goto</span> __ERROR;<br>    &#125;<br>    <br>    <span class="hljs-comment">//encode</span><br>    read_data_and_encode(fmt_ctx, c_ctx, swr_ctx, outfile);<br><br>__ERROR:<br>    <span class="hljs-comment">//释放重采样的上下文</span><br>    <span class="hljs-keyword">if</span>(swr_ctx)&#123;<br>        swr_free(&amp;swr_ctx);<br>    &#125;<br><br>    <span class="hljs-keyword">if</span>(c_ctx)&#123;<br>        avcodec_free_context(&amp;c_ctx);<br>    &#125;<br>    <br>    <span class="hljs-comment">//close device and release ctx</span><br>    <span class="hljs-keyword">if</span>(fmt_ctx) &#123;<br>        avformat_close_input(&amp;fmt_ctx);<br>    &#125;<br>    <br>    <span class="hljs-keyword">if</span>(outfile)&#123;<br>        <span class="hljs-comment">//close file</span><br>        fclose(outfile);<br>    &#125;<br><br>    av_log(<span class="hljs-literal">NULL</span>, AV_LOG_DEBUG, <span class="hljs-string">&quot;finish!\n&quot;</span>);<br>    <br>    <span class="hljs-keyword">return</span>;<br>&#125;<br><br><span class="hljs-meta">#<span class="hljs-keyword">if</span> 0</span><br><span class="hljs-type">int</span> <span class="hljs-title function_">main</span><span class="hljs-params">(<span class="hljs-type">int</span> argc, <span class="hljs-type">char</span> *argv[])</span><br>&#123;<br>    rec_audio();<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br><span class="hljs-meta">#<span class="hljs-keyword">endif</span></span><br></code></pre></td></tr></table></figure><ul><li>播放上述录音</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">ffplay audio.aac<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>音视频入门课</category>
      
    </categories>
    
    
    <tags>
      
      <tag>音视频</tag>
      
      <tag>ffmpeg</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>day08-音频AAC编码理论(二)</title>
    <link href="/2022/05/29/%E9%9F%B3%E8%A7%86%E9%A2%91%E5%85%A5%E9%97%A8%E7%AC%AC%E4%B8%80%E5%AD%A3/day08%E9%9F%B3%E9%A2%91AAC%E7%BC%96%E7%A0%81/"/>
    <url>/2022/05/29/%E9%9F%B3%E8%A7%86%E9%A2%91%E5%85%A5%E9%97%A8%E7%AC%AC%E4%B8%80%E5%AD%A3/day08%E9%9F%B3%E9%A2%91AAC%E7%BC%96%E7%A0%81/</url>
    
    <content type="html"><![CDATA[<h2 id="一、音频编码理论基础"><a href="#一、音频编码理论基础" class="headerlink" title="一、音频编码理论基础"></a>一、音频编码理论基础</h2><h3 id="1、音频有损压缩主要从哪些方面进行压缩？"><a href="#1、音频有损压缩主要从哪些方面进行压缩？" class="headerlink" title="1、音频有损压缩主要从哪些方面进行压缩？"></a>1、音频<code>有损压缩</code>主要从哪些方面进行压缩？</h3><ul><li>时域遮蔽、频域遮蔽</li></ul><img src="/2022/05/29/%E9%9F%B3%E8%A7%86%E9%A2%91%E5%85%A5%E9%97%A8%E7%AC%AC%E4%B8%80%E5%AD%A3/day08%E9%9F%B3%E9%A2%91AAC%E7%BC%96%E7%A0%81/image-20220529103700600.png" class=""><h3 id="2、音频无损压缩有哪些有名的算法？"><a href="#2、音频无损压缩有哪些有名的算法？" class="headerlink" title="2、音频无损压缩有哪些有名的算法？"></a>2、音频<code>无损压缩</code>有哪些有名的算法？</h3><ul><li>哈夫曼算法</li><li>香农算法</li></ul><h3 id="3、常见的音频编码器？（例举三个）"><a href="#3、常见的音频编码器？（例举三个）" class="headerlink" title="3、常见的音频编码器？（例举三个）"></a>3、常见的音频编码器？（例举三个）</h3><ul><li>AAC：在直播系统中应用比较广泛</li><li>OPUS：是较新的音频编码器，WebRTC默认使用OPUS</li><li>G.711：一般在固话中使用</li></ul><h3 id="4、AAC有哪三种常见规格，简单描述下？"><a href="#4、AAC有哪三种常见规格，简单描述下？" class="headerlink" title="4、AAC有哪三种常见规格，简单描述下？"></a>4、AAC有哪三种常见规格，简单描述下？</h3><ul><li>AAC LC：<font color="red">(Low Complexity)</font> 低复杂度规格，<font color="blue">码流是128k左右</font>，音质好。</li><li>AAC HE：<font color="red">等于 AAC LC + SBR(Spectral Band Replication)</font>。其核心思想是按频谱保存。低频编码保存主要成分，高频单独放大编码保存音质。<font color="blue">码流在64k左右</font>。</li><li>AAC HE V2：等于<font color="red">AAC LC + SBR + PS(Parametric Stereo)</font>。其核心思想是双声道中的声音才在某种相似性，只需要存储一个声道的全部信息，然后花很少的字节用参数描述另一个声道和它不同的地方。<font color="blue">码流在48k左右。</font></li></ul><h3 id="5、AAC保存数据有两种格式，分别是什么？"><a href="#5、AAC保存数据有两种格式，分别是什么？" class="headerlink" title="5、AAC保存数据有两种格式，分别是什么？"></a>5、AAC保存数据有两种格式，分别是什么？</h3><ul><li>ADIF</li><li>ADTS</li></ul><img src="/2022/05/29/%E9%9F%B3%E8%A7%86%E9%A2%91%E5%85%A5%E9%97%A8%E7%AC%AC%E4%B8%80%E5%AD%A3/day08%E9%9F%B3%E9%A2%91AAC%E7%BC%96%E7%A0%81/image-20220529105427279.png" class=""><h3 id="6、ADTS结构详解？"><a href="#6、ADTS结构详解？" class="headerlink" title="6、ADTS结构详解？"></a>6、ADTS结构详解？</h3><img src="/2022/05/29/%E9%9F%B3%E8%A7%86%E9%A2%91%E5%85%A5%E9%97%A8%E7%AC%AC%E4%B8%80%E5%AD%A3/day08%E9%9F%B3%E9%A2%91AAC%E7%BC%96%E7%A0%81/image-20220529105523745.png" class=""><h3 id="7、通过ffmpeg命令生成aa文件"><a href="#7、通过ffmpeg命令生成aa文件" class="headerlink" title="7、通过ffmpeg命令生成aa文件"></a>7、通过ffmpeg命令生成aa文件</h3><figure class="highlight sh"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><pre><code class="hljs sh">ffmpeg -i raw_xxx.mp4 -vn -c:a libfdk_aac -ar 44100 -channels 2 -profile:a aac_he dst_xxx.aac<br></code></pre></td></tr></table></figure><h3 id="8、借助网站分析生成的aac文件"><a href="#8、借助网站分析生成的aac文件" class="headerlink" title="8、借助网站分析生成的aac文件"></a>8、借助网站分析生成的aac文件</h3><ul><li><a href="https://www.p23.nl/projects/aac-header/">https://www.p23.nl/projects/aac-header/</a></li></ul><img src="/2022/05/29/%E9%9F%B3%E8%A7%86%E9%A2%91%E5%85%A5%E9%97%A8%E7%AC%AC%E4%B8%80%E5%AD%A3/day08%E9%9F%B3%E9%A2%91AAC%E7%BC%96%E7%A0%81/image-20220529110152214.png" class="">]]></content>
    
    
    <categories>
      
      <category>音视频入门课</category>
      
    </categories>
    
    
    <tags>
      
      <tag>音视频</tag>
      
      <tag>ffmpeg</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>day08-音频重采样(一)</title>
    <link href="/2022/05/29/%E9%9F%B3%E8%A7%86%E9%A2%91%E5%85%A5%E9%97%A8%E7%AC%AC%E4%B8%80%E5%AD%A3/day08%E9%9F%B3%E9%A2%91%E9%87%8D%E9%87%87%E6%A0%B7/"/>
    <url>/2022/05/29/%E9%9F%B3%E8%A7%86%E9%A2%91%E5%85%A5%E9%97%A8%E7%AC%AC%E4%B8%80%E5%AD%A3/day08%E9%9F%B3%E9%A2%91%E9%87%8D%E9%87%87%E6%A0%B7/</url>
    
    <content type="html"><![CDATA[<h2 id="一、音频重采样"><a href="#一、音频重采样" class="headerlink" title="一、音频重采样"></a>一、音频重采样</h2><h3 id="1、什么是音频重采样？"><a href="#1、什么是音频重采样？" class="headerlink" title="1、什么是音频重采样？"></a>1、什么是音频重采样？</h3><img src="/2022/05/29/%E9%9F%B3%E8%A7%86%E9%A2%91%E5%85%A5%E9%97%A8%E7%AC%AC%E4%B8%80%E5%AD%A3/day08%E9%9F%B3%E9%A2%91%E9%87%8D%E9%87%87%E6%A0%B7/image-20220529110421107.png" class=""><h3 id="2、什么情况下需要进行音频重采样？"><a href="#2、什么情况下需要进行音频重采样？" class="headerlink" title="2、什么情况下需要进行音频重采样？"></a>2、什么情况下需要进行音频重采样？</h3><ul><li>情况一：从设备采集的音频数据与编码器要求的数据不一致</li><li>情况二：播放器要求的音频数据与要播放的音频数据不一致</li><li>情况三：要方便某些运算的时候</li></ul><h3 id="3、简述音频重采样主要三个步骤？"><a href="#3、简述音频重采样主要三个步骤？" class="headerlink" title="3、简述音频重采样主要三个步骤？"></a>3、简述音频重采样主要三个步骤？</h3><ul><li>设置重采样参数，并初始化重采样上下文。</li></ul><figure class="highlight c"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></div></td><td class="code"><pre><code class="hljs C">swr_ctx = swr_alloc_set_opts(<span class="hljs-literal">NULL</span>,<br>                             AV_CH_LAYOUT_STEREO, AV_SAMPLE_FMT_S16, <span class="hljs-number">44100</span>,  <span class="hljs-comment">// 重采样输出音频三要素</span><br>                             AV_CH_LAYOUT_STEREO, AV_SAMPLE_FMT_FLT, <span class="hljs-number">44100</span>,  <span class="hljs-comment">// 重采样输入音频三要数</span><br>                             <span class="hljs-number">0</span>, <span class="hljs-literal">NULL</span>);<br>ret = swr_init(swr_ctx);<br></code></pre></td></tr></table></figure><ul><li>设置重采样的输入和输出数据存放区</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs C"><span class="hljs-type">uint8_t</span> **src_data = <span class="hljs-literal">NULL</span>;<br><span class="hljs-type">int</span> src_linesize = <span class="hljs-number">0</span>;<br><span class="hljs-type">uint8_t</span> **dst_data = <span class="hljs-literal">NULL</span>;<br><span class="hljs-type">int</span> dst_linesize = <span class="hljs-number">0</span>;<br><br>av_samples_alloc_array_and_samples(&amp;src_data, &amp;src_linesize, <span class="hljs-number">2</span>, <span class="hljs-number">512</span>, AV_SAMPLE_FMT_FLT, <span class="hljs-number">0</span>);<br>av_samples_alloc_array_and_samples(&amp;dst_data, &amp;dst_linesize, <span class="hljs-number">2</span>, <span class="hljs-number">512</span>, AV_SAMPLE_FMT_S16, <span class="hljs-number">0</span>);<br></code></pre></td></tr></table></figure><ul><li>进行重采样</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs C"><span class="hljs-comment">// 进行内存拷贝</span><br><span class="hljs-built_in">memcpy</span>((<span class="hljs-type">void</span>*)src_data[<span class="hljs-number">0</span>], (<span class="hljs-type">void</span>*)pkt.data, pkt.size);<br><br><span class="hljs-comment">// 重采样</span><br>swr_convert(swr_ctx,                    <span class="hljs-comment">//重采样的上下文</span><br>            dst_data,                   <span class="hljs-comment">//输出结果缓冲区</span><br>            <span class="hljs-number">512</span>,                        <span class="hljs-comment">//输出单个通道的采样数</span><br>            (<span class="hljs-type">const</span> <span class="hljs-type">uint8_t</span> **)src_data, <span class="hljs-comment">//输入缓冲区</span><br>            <span class="hljs-number">512</span>);                       <span class="hljs-comment">//输入单个通道的采样数</span><br><br><br>fwrite(dst_data[<span class="hljs-number">0</span>], <span class="hljs-number">1</span>, dst_linesize, outFile);<br>fflush(outFile);<br></code></pre></td></tr></table></figure><h3 id="4、音频重采样完整代码如下"><a href="#4、音频重采样完整代码如下" class="headerlink" title="4、音频重采样完整代码如下"></a>4、音频重采样完整代码如下</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br></pre></td><td class="code"><pre><code class="hljs C"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&quot;test.h&quot;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;unistd.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&quot;include/libavutil/avutil.h&quot;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&quot;include/libavdevice/avdevice.h&quot;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&quot;include/libavcodec/avcodec.h&quot;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&quot;include/libswresample/swresample.h&quot;</span></span><br><br><span class="hljs-comment">//录音</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">record_audio</span><span class="hljs-params">(<span class="hljs-type">void</span>)</span> &#123;<br>    <span class="hljs-type">int</span> ret = <span class="hljs-number">0</span>;<br>    <span class="hljs-type">char</span> errors[<span class="hljs-number">1024</span>];<br>    <br>    <span class="hljs-comment">//ctx</span><br>    AVFormatContext *fmt_ctx = <span class="hljs-literal">NULL</span>;<br>    AVDictionary *options = <span class="hljs-literal">NULL</span>;<br>    SwrContext *swr_ctx = <span class="hljs-literal">NULL</span>;<br>    <br>    swr_ctx = swr_alloc_set_opts(<span class="hljs-literal">NULL</span>,<br>                                 AV_CH_LAYOUT_STEREO, AV_SAMPLE_FMT_S16, <span class="hljs-number">44100</span>,  <span class="hljs-comment">// 重采样输出音频三要素</span><br>                                 AV_CH_LAYOUT_STEREO, AV_SAMPLE_FMT_FLT, <span class="hljs-number">44100</span>,  <span class="hljs-comment">// 重采样输入音频三要数</span><br>                                 <span class="hljs-number">0</span>, <span class="hljs-literal">NULL</span>);<br>    <span class="hljs-keyword">if</span> (swr_ctx == <span class="hljs-literal">NULL</span>) &#123;<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;swr_alloc_set_opts error&quot;</span>);<br>        <span class="hljs-keyword">return</span>;<br>    &#125;<br>    <br>    ret = swr_init(swr_ctx);<br>    <span class="hljs-keyword">if</span> (ret != <span class="hljs-number">0</span>) &#123;<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;swr_init error&quot;</span>);<br>        <span class="hljs-keyword">return</span>;<br>    &#125;<br>    <br>    <span class="hljs-type">uint8_t</span> **src_data = <span class="hljs-literal">NULL</span>;<br>    <span class="hljs-type">int</span> src_linesize = <span class="hljs-number">0</span>;<br>    <span class="hljs-type">uint8_t</span> **dst_data = <span class="hljs-literal">NULL</span>;<br>    <span class="hljs-type">int</span> dst_linesize = <span class="hljs-number">0</span>;<br>    <br>    av_samples_alloc_array_and_samples(&amp;src_data, &amp;src_linesize, <span class="hljs-number">2</span>, <span class="hljs-number">512</span>, AV_SAMPLE_FMT_FLT, <span class="hljs-number">0</span>);<br>    av_samples_alloc_array_and_samples(&amp;dst_data, &amp;dst_linesize, <span class="hljs-number">2</span>, <span class="hljs-number">512</span>, AV_SAMPLE_FMT_S16, <span class="hljs-number">0</span>);<br>    <br>    <span class="hljs-comment">//packet</span><br>    <span class="hljs-type">int</span> count = <span class="hljs-number">0</span>;<br>    AVPacket pkt;<br>    <br>    <span class="hljs-comment">// [video device]:[aduio device]</span><br>    <span class="hljs-type">char</span> *devicename = <span class="hljs-string">&quot;:0&quot;</span>;<br>    <br>    <span class="hljs-comment">//register audio device</span><br>    avdevice_register_all();<br>    <br>    <span class="hljs-comment">//get format</span><br>    <span class="hljs-type">const</span> AVInputFormat *iformat = av_find_input_format(<span class="hljs-string">&quot;avfoundation&quot;</span>);<br>    <br>    <span class="hljs-comment">//open device</span><br>    ret = avformat_open_input(&amp;fmt_ctx, devicename, iformat, &amp;options);<br>    <span class="hljs-keyword">if</span> (ret &lt; <span class="hljs-number">0</span>) &#123;<br>        av_strerror(ret, errors, <span class="hljs-number">1024</span>);<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;avformat_open_input error&quot;</span>);<br>        <span class="hljs-keyword">return</span>;<br>    &#125;<br>    <br>    <span class="hljs-comment">//crate file</span><br>    <span class="hljs-type">char</span> *outPath = <span class="hljs-string">&quot;/Users/carrot/Desktop/MyCode/swr_audio.pcm&quot;</span>;<br>    FILE *outFile = fopen(outPath, <span class="hljs-string">&quot;wb+&quot;</span>);<br>    <span class="hljs-keyword">if</span> (outFile == <span class="hljs-literal">NULL</span>) &#123;<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;outFile fopen failed&quot;</span>);<br>        <span class="hljs-keyword">return</span>;<br>    &#125;<br>    <br>    <span class="hljs-comment">//read data from device</span><br>    <span class="hljs-keyword">while</span> ((ret = av_read_frame(fmt_ctx, &amp;pkt)) == <span class="hljs-number">0</span> || count++ &lt; <span class="hljs-number">50000</span>) &#123;<br>        usleep(<span class="hljs-number">100</span>);<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;ret %d&quot;</span>, ret);<br>        <span class="hljs-keyword">if</span> (pkt.size &gt; <span class="hljs-number">0</span>) &#123;<br>            <span class="hljs-comment">//进行内存拷贝</span><br>            <span class="hljs-built_in">memcpy</span>(src_data[<span class="hljs-number">0</span>], pkt.data, pkt.size);<br>            <br>            <span class="hljs-comment">//重采样</span><br>            swr_convert(swr_ctx, dst_data, <span class="hljs-number">512</span>, (<span class="hljs-type">const</span> <span class="hljs-type">uint8_t</span> **)src_data, <span class="hljs-number">512</span>);<br>            <br>            fwrite(dst_data[<span class="hljs-number">0</span>], dst_linesize, <span class="hljs-number">1</span>, outFile);<br>            fflush(outFile);<br>            <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;packet size is %d(%p), count=%d \n&quot;</span>, pkt.size, pkt.data, count);<br>            av_packet_unref(&amp;pkt);<br>        &#125;<br>    &#125;<br>    <br>    <span class="hljs-comment">//close device and release ctx</span><br>    avformat_close_input(&amp;fmt_ctx);<br>    <br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;运行结束\n&quot;</span>);<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="5、借助ffplay播放重采样的数据"><a href="#5、借助ffplay播放重采样的数据" class="headerlink" title="5、借助ffplay播放重采样的数据"></a>5、借助ffplay播放重采样的数据</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs SH">ffplay -ar 44100 -f s16le -ac 2 swr_audio.pcm <br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>音视频入门课</category>
      
    </categories>
    
    
    <tags>
      
      <tag>音视频</tag>
      
      <tag>ffmpeg</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>day07-ffmpeg集成、音频采集</title>
    <link href="/2022/05/28/%E9%9F%B3%E8%A7%86%E9%A2%91%E5%85%A5%E9%97%A8%E7%AC%AC%E4%B8%80%E5%AD%A3/day07%E9%9F%B3%E9%A2%91%E9%87%87%E9%9B%86/"/>
    <url>/2022/05/28/%E9%9F%B3%E8%A7%86%E9%A2%91%E5%85%A5%E9%97%A8%E7%AC%AC%E4%B8%80%E5%AD%A3/day07%E9%9F%B3%E9%A2%91%E9%87%87%E9%9B%86/</url>
    
    <content type="html"><![CDATA[<h2 id="一、集成FFmpeg到MacApp项目"><a href="#一、集成FFmpeg到MacApp项目" class="headerlink" title="一、集成FFmpeg到MacApp项目"></a>一、集成FFmpeg到MacApp项目</h2><h3 id="1、创建一个mac的App应用，语言选择swift。"><a href="#1、创建一个mac的App应用，语言选择swift。" class="headerlink" title="1、创建一个mac的App应用，语言选择swift。"></a>1、创建一个mac的App应用，语言选择swift。</h3><img src="/2022/05/28/%E9%9F%B3%E8%A7%86%E9%A2%91%E5%85%A5%E9%97%A8%E7%AC%AC%E4%B8%80%E5%AD%A3/day07%E9%9F%B3%E9%A2%91%E9%87%87%E9%9B%86/image-20220528190434270.png" class="" title="image-20220528190917242"><h3 id="2、将ffmpeg目录下的-lib-和-include-拷贝到项目中。"><a href="#2、将ffmpeg目录下的-lib-和-include-拷贝到项目中。" class="headerlink" title="2、将ffmpeg目录下的 lib 和 include 拷贝到项目中。"></a>2、将ffmpeg目录下的 <code>lib</code> 和 <code>include</code> 拷贝到项目中。</h3><img src="/2022/05/28/%E9%9F%B3%E8%A7%86%E9%A2%91%E5%85%A5%E9%97%A8%E7%AC%AC%E4%B8%80%E5%AD%A3/day07%E9%9F%B3%E9%A2%91%E9%87%87%E9%9B%86/image-20220528190702809.png" class="" title="image-20220528190917242"><h3 id="3、将ffmpeg库引入项目中"><a href="#3、将ffmpeg库引入项目中" class="headerlink" title="3、将ffmpeg库引入项目中"></a>3、将ffmpeg库引入项目中</h3><img src="/2022/05/28/%E9%9F%B3%E8%A7%86%E9%A2%91%E5%85%A5%E9%97%A8%E7%AC%AC%E4%B8%80%E5%AD%A3/day07%E9%9F%B3%E9%A2%91%E9%87%87%E9%9B%86/image-20220528190917242.png" class="" title="image-20220528190917242"><h3 id="4、引入ffmpeg头文件"><a href="#4、引入ffmpeg头文件" class="headerlink" title="4、引入ffmpeg头文件"></a>4、引入ffmpeg头文件</h3><img src="/2022/05/28/%E9%9F%B3%E8%A7%86%E9%A2%91%E5%85%A5%E9%97%A8%E7%AC%AC%E4%B8%80%E5%AD%A3/day07%E9%9F%B3%E9%A2%91%E9%87%87%E9%9B%86/image-20220528192359166.png" class="" title="image-20220528192359166"><h3 id="5、加入代码测试"><a href="#5、加入代码测试" class="headerlink" title="5、加入代码测试"></a>5、加入代码测试</h3><ul><li>test.h</li></ul><figure class="highlight c"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></div></td><td class="code"><pre><code class="hljs C"><span class="hljs-meta">#<span class="hljs-keyword">ifndef</span> test_h</span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> test_h</span><br><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&quot;include/libavutil/avutil.h&quot;</span></span><br><br><span class="hljs-type">void</span> <span class="hljs-title function_">record_audio</span><span class="hljs-params">(<span class="hljs-type">void</span>)</span>;<br><br><span class="hljs-meta">#<span class="hljs-keyword">endif</span> <span class="hljs-comment">/* test_h */</span></span><br></code></pre></td></tr></table></figure><ul><li>test.c</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&quot;test.h&quot;</span></span><br><br><span class="hljs-type">void</span> <span class="hljs-title function_">record_audio</span><span class="hljs-params">(<span class="hljs-type">void</span>)</span> &#123;<br>    <span class="hljs-comment">// set log level</span><br>    av_log_set_level(AV_LOG_DEBUG);<br>    <span class="hljs-comment">// test ffmpeg</span><br>    <span class="hljs-type">const</span> <span class="hljs-type">char</span> *info = av_version_info();<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%s \n&quot;</span>, info);<br>    <br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;运行结束\n&quot;</span>);<br>&#125;<br></code></pre></td></tr></table></figure><ul><li>ViewController.swift</li></ul><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs swift"><span class="hljs-keyword">import</span> Cocoa<br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">ViewController</span>: <span class="hljs-title class_">NSViewController</span> &#123;<br><br>    <span class="hljs-keyword">override</span> <span class="hljs-keyword">func</span> <span class="hljs-title function_">viewDidLoad</span>() &#123;<br>        <span class="hljs-keyword">super</span>.viewDidLoad()<br><br>        <span class="hljs-comment">// Do any additional setup after loading the view.</span><br>        <span class="hljs-keyword">self</span>.startRecordAudio();<br>    &#125;<br><br>    <span class="hljs-keyword">override</span> <span class="hljs-keyword">var</span> representedObject: <span class="hljs-keyword">Any</span><span class="hljs-operator">?</span> &#123;<br>        <span class="hljs-keyword">didSet</span> &#123;<br>        <span class="hljs-comment">// Update the view, if already loaded.</span><br>        &#125;<br>    &#125;<br><br>    <span class="hljs-keyword">@objc</span> <span class="hljs-keyword">func</span> <span class="hljs-title function_">startRecordAudio</span>() &#123;<br>        record_audio()<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><ul><li>FFmpegLearn-Bridging-Header.h 桥接c和swift的文件</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs C"><span class="hljs-meta">#import <span class="hljs-string">&quot;test.h&quot;</span></span><br></code></pre></td></tr></table></figure><ul><li>打印出ffmpeg版本号</li></ul><img src="/2022/05/28/%E9%9F%B3%E8%A7%86%E9%A2%91%E5%85%A5%E9%97%A8%E7%AC%AC%E4%B8%80%E5%AD%A3/day07%E9%9F%B3%E9%A2%91%E9%87%87%E9%9B%86/image-20220528192952597.png" class="" title="image-20220528192952597"><h2 id="二、通过代码采集音频"><a href="#二、通过代码采集音频" class="headerlink" title="二、通过代码采集音频"></a>二、通过代码采集音频</h2><h3 id="1、如何通过ffmpeg命令采集音频？"><a href="#1、如何通过ffmpeg命令采集音频？" class="headerlink" title="1、如何通过ffmpeg命令采集音频？"></a>1、如何通过ffmpeg命令采集音频？</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">ffmpeg -f avfoundation -i :0 out.wav<br>ffplay out.wav<br></code></pre></td></tr></table></figure><h3 id="2、通过ffmpeg代码采集音频的关键三个步骤是什么？"><a href="#2、通过ffmpeg代码采集音频的关键三个步骤是什么？" class="headerlink" title="2、通过ffmpeg代码采集音频的关键三个步骤是什么？"></a>2、通过ffmpeg代码采集音频的关键三个步骤是什么？</h3><ul><li><div class="code-wrapper"><pre><code class="sh"># 注册所有设备avdevice_register_all(); <figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div></td><td class="code"><pre><code class="hljs reasonml"><br>- ```sh<br>  # 打开指定设备<br>  ret = avformat<span class="hljs-constructor">_open_input(&amp;<span class="hljs-params">fmt_ctx</span>, <span class="hljs-params">devicename</span>, <span class="hljs-params">iformat</span>, &amp;<span class="hljs-params">options</span>)</span>;<br></code></pre></td></tr></table></figure></code></pre></li><li><p>&#96;&#96;&#96;sh</p><h1 id="循环从打开设备的上下文中读取数据"><a href="#循环从打开设备的上下文中读取数据" class="headerlink" title="循环从打开设备的上下文中读取数据"></a>循环从打开设备的上下文中读取数据</h1><p>while ((ret &#x3D; av_read_frame(fmt_ctx, &amp;pkt)) &#x3D;&#x3D; 0)</p><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><code class="hljs arduino"><br><br><br>### <span class="hljs-number">3</span>、在通过写代码采集音频之前，需要对macApp项目做如下两个配置<br><br>- 关闭沙箱`App Sanbox`功能，才能读取mac本地目录<br>- 在 `info.plist` 文件夹中，配置麦克风访问权限说明，才能打开麦克风<br><br>&#123;% asset_img image<span class="hljs-number">-20220529095509767.</span>png image<span class="hljs-number">-20220529095509767</span> %&#125;<br><br><br><br>### <span class="hljs-number">4</span>、完整代码<br><br>```c<br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&quot;test.h&quot;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;unistd.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&quot;include/libavutil/avutil.h&quot;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&quot;include/libavdevice/avdevice.h&quot;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&quot;include/libavcodec/avcodec.h&quot;</span></span><br><br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">record_audio</span><span class="hljs-params">(<span class="hljs-type">void</span>)</span> </span>&#123;<br>    <span class="hljs-type">int</span> ret = <span class="hljs-number">0</span>;<br>    <span class="hljs-type">char</span> errors[<span class="hljs-number">1024</span>];<br>    <br>    <span class="hljs-comment">//ctx</span><br>    AVFormatContext *fmt_ctx = <span class="hljs-literal">NULL</span>;<br>    AVDictionary *options = <span class="hljs-literal">NULL</span>;<br>    <br>    <span class="hljs-comment">//packet</span><br>    <span class="hljs-type">int</span> count = <span class="hljs-number">0</span>;<br>    AVPacket pkt;<br>    <br>    <span class="hljs-comment">// [video device]:[aduio device]</span><br>    <span class="hljs-type">char</span> *devicename = <span class="hljs-string">&quot;:0&quot;</span>;<br>    <br>    <span class="hljs-comment">//register audio device</span><br>    <span class="hljs-built_in">avdevice_register_all</span>();<br>    <br>    <span class="hljs-comment">//get format</span><br>    <span class="hljs-type">const</span> AVInputFormat *iformat = <span class="hljs-built_in">av_find_input_format</span>(<span class="hljs-string">&quot;avfoundation&quot;</span>);<br>    <br>    <span class="hljs-comment">//open device</span><br>    ret = <span class="hljs-built_in">avformat_open_input</span>(&amp;fmt_ctx, devicename, iformat, &amp;options);<br>    <span class="hljs-keyword">if</span> (ret &lt; <span class="hljs-number">0</span>) &#123;<br>        <span class="hljs-built_in">av_strerror</span>(ret, errors, <span class="hljs-number">1024</span>);<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;avformat_open_input error&quot;</span>);<br>        <span class="hljs-keyword">return</span>;<br>    &#125;<br>    <br>    <span class="hljs-comment">//crate file</span><br>    <span class="hljs-type">char</span> *outPath = <span class="hljs-string">&quot;/Users/carrot/Desktop/MyCode/audio.pcm&quot;</span>;<br>    FILE *outFile = <span class="hljs-built_in">fopen</span>(outPath, <span class="hljs-string">&quot;wb+&quot;</span>);<br>    <span class="hljs-keyword">if</span> (outFile == <span class="hljs-literal">NULL</span>) &#123;<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;outFile fopen failed&quot;</span>);<br>        <span class="hljs-keyword">return</span>;<br>    &#125;<br>    <br>    <span class="hljs-comment">//read data from device</span><br>    <span class="hljs-keyword">while</span> ((ret = <span class="hljs-built_in">av_read_frame</span>(fmt_ctx, &amp;pkt)) == <span class="hljs-number">0</span> || count++ &lt; <span class="hljs-number">50000</span>) &#123;<br>        <span class="hljs-built_in">usleep</span>(<span class="hljs-number">100</span>);<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;ret %d&quot;</span>, ret);<br>        <span class="hljs-keyword">if</span> (pkt.size &gt; <span class="hljs-number">0</span>) &#123;<br>            <span class="hljs-built_in">fwrite</span>(pkt.data, pkt.size, <span class="hljs-number">1</span>, outFile);<br>            <span class="hljs-built_in">fflush</span>(outFile);<br>            <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;packet size is %d(%p), count=%d \n&quot;</span>, pkt.size, pkt.data, count);<br>            <span class="hljs-built_in">av_packet_unref</span>(&amp;pkt);<br>        &#125;<br>    &#125;<br>    <br>    <span class="hljs-comment">//close device and release ctx</span><br>    <span class="hljs-built_in">avformat_close_input</span>(&amp;fmt_ctx);<br>    <br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;运行结束\n&quot;</span>);<br>&#125;<br></code></pre></td></tr></table></figure></li></ul><h3 id="5、播放录制的pcm文件-MacBook-Pro-Retina-15-inch-Mid-2015"><a href="#5、播放录制的pcm文件-MacBook-Pro-Retina-15-inch-Mid-2015" class="headerlink" title="5、播放录制的pcm文件(MacBook Pro (Retina, 15-inch, Mid 2015))"></a>5、播放录制的pcm文件(MacBook Pro (Retina, 15-inch, Mid 2015))</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs c">ffplay -ar <span class="hljs-number">44100</span> -f f32le -ac <span class="hljs-number">2</span> audio.pcm <br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>音视频入门课</category>
      
    </categories>
    
    
    <tags>
      
      <tag>音视频</tag>
      
      <tag>ffmpeg</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>day06-ffmpeg编译</title>
    <link href="/2022/05/28/%E9%9F%B3%E8%A7%86%E9%A2%91%E5%85%A5%E9%97%A8%E7%AC%AC%E4%B8%80%E5%AD%A3/day06%E6%89%8B%E5%8A%A8%E7%BC%96%E8%AF%91ffmpeg/"/>
    <url>/2022/05/28/%E9%9F%B3%E8%A7%86%E9%A2%91%E5%85%A5%E9%97%A8%E7%AC%AC%E4%B8%80%E5%AD%A3/day06%E6%89%8B%E5%8A%A8%E7%BC%96%E8%AF%91ffmpeg/</url>
    
    <content type="html"><![CDATA[<h2 id="一、手动编译ffmpeg"><a href="#一、手动编译ffmpeg" class="headerlink" title="一、手动编译ffmpeg"></a>一、手动编译ffmpeg</h2><h3 id="1、目标"><a href="#1、目标" class="headerlink" title="1、目标"></a>1、目标</h3><p>这里先提前说明一下，最后希望达到的效果：</p><ul><li>编译出ffmpeg、ffprobe、ffplay三个命令行工具</li><li>只产生动态库，不产生静态库</li><li>将 fdk-aac、x264、x265集成到FFmpeg中</li></ul><h3 id="2、下载源码"><a href="#2、下载源码" class="headerlink" title="2、下载源码"></a>2、下载源码</h3><p>下载源码<a href="https://ffmpeg.org/releases/ffmpeg-4.3.2.tar.xz">ffmpeg-4.3.2.tar.xz</a>，然后解压。</p><img src="/2022/05/28/%E9%9F%B3%E8%A7%86%E9%A2%91%E5%85%A5%E9%97%A8%E7%AC%AC%E4%B8%80%E5%AD%A3/day06%E6%89%8B%E5%8A%A8%E7%BC%96%E8%AF%91ffmpeg/497279-20210410211902005-744008601-20220528181822420.png" class="" title="FFmpeg源码结构"><h3 id="3、安装依赖库"><a href="#3、安装依赖库" class="headerlink" title="3、安装依赖库"></a>3、安装依赖库</h3><ul><li>brew install yasm<ul><li>ffmpeg的编译过程依赖yasm</li><li>若未安装yasm会出现错误：nasm&#x2F;yasm not found or too old. Use –disable-x86asm for a crippled build.</li></ul></li><li>brew install sdl2<ul><li>ffplay依赖于sdl2</li><li>如果缺少sdl2，就无法编译出ffplay</li></ul></li><li>brew install fdk-aac<ul><li>不然会出现错误：ERROR: libfdk_aac not found</li></ul></li><li>brew install x264<ul><li>不然会出现错误：ERROR: libx264 not found</li></ul></li><li>brew install x265<ul><li>不然会出现错误：ERROR: libx265 not found</li></ul></li></ul><p>其实x264、x265、sdl2都在曾经执行<em>brew install ffmpeg</em>的时候安装过了。</p><ul><li>可以通过 brew list 的结果查看是否安装过<ul><li><em>brew list | grep fdk</em></li><li><em>brew list | grep x26</em></li><li><em>brew list | grep -E ‘fdk|x26’</em></li></ul></li><li>如果已经安装过，可以不用再执行<em>brew install</em></li></ul><h4 id="4、configure"><a href="#4、configure" class="headerlink" title="4、configure"></a>4、configure</h4><p>首先进入源码目录。</p><figure class="highlight sh"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><pre><code class="hljs SH"><span class="hljs-comment"># 我的源码放在了Downloads目录下</span><br><span class="hljs-built_in">cd</span> ~/Downloads/ffmpeg-4.3.2<br></code></pre></td></tr></table></figure><p>然后执行源码目录下的<code>configure</code>脚本，设置一些编译参数，做一些编译前的准备工作。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">./configure --prefix=/usr/local/ffmpeg --enable-shared --disable-static --enable-gpl  --enable-nonfree --enable-libfdk-aac --enable-libx264 --enable-libx265<br></code></pre></td></tr></table></figure><ul><li><em>–prefix</em><ul><li>用以指定编译好的FFmpeg安装到哪个目录</li><li>一般放到&#x2F;usr&#x2F;local&#x2F;ffmpeg中即可</li></ul></li><li><em>–enable-shared</em><ul><li>生成动态库</li></ul></li><li><em>–disable-static</em><ul><li>不生成静态库</li></ul></li><li><em>–enable-libfdk-aac</em><ul><li>将fdk-aac内置到FFmpeg中</li></ul></li><li><em>–enable-libx264</em><ul><li>将x264内置到FFmpeg中</li></ul></li><li><em>–enable-libx265</em><ul><li>将x265内置到FFmpeg中</li></ul></li><li><em>–enable-gpl</em><ul><li>x264、x265要求开启<a href="https://www.gnu.org/licenses/gpl-3.0.html">GPL License</a></li></ul></li><li><em>–enable-nonfree</em><ul><li><a href="https://github.com/FFmpeg/FFmpeg/blob/master/LICENSE.md">fdk-aac与GPL不兼容</a>，需要通过开启nonfree进行配置</li></ul></li></ul><p>你可以通过<em>configure –help</em>命令查看每一个配置项的作用。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs sh">./configure --<span class="hljs-built_in">help</span> | grep static <br><br><span class="hljs-comment"># 结果如下所示</span><br>--disable-static         <span class="hljs-keyword">do</span> not build static libraries [no]<br></code></pre></td></tr></table></figure><h3 id="5、编译"><a href="#5、编译" class="headerlink" title="5、编译"></a>5、编译</h3><p>接下来开始解析源代码目录中的Makefile文件，进行编译。*-j8*表示允许同时执行8个编译任务。</p><figure class="highlight gauss"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs gauss"><span class="hljs-built_in">make</span> -j8<br></code></pre></td></tr></table></figure><p>对于经常在类Unix系统下接触C&#x2F;C++开发的小伙伴来说，Makefile必然是不陌生的。这里给不了解Makefile的小伙伴简单科普一下：</p><ul><li>Makefile描述了整个项目的编译和链接等规则<ul><li>比如哪些文件需要编译？哪些文件不需要编译？哪些文件需要先编译？哪些文件需要后编译？等等</li></ul></li><li>Makefile可以使项目的编译变得自动化，不需要每次都手动输入一堆源文件和参数<ul><li>比如原来需要这么写：<em>gcc test1.c test2.c test3.c -o test</em></li></ul></li></ul><h3 id="6、安装"><a href="#6、安装" class="headerlink" title="6、安装"></a>6、安装</h3><p>将编译好的库安装到指定的位置：&#x2F;usr&#x2F;local&#x2F;ffmpeg。</p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cmake">make <span class="hljs-keyword">install</span><br></code></pre></td></tr></table></figure><p>安装完毕后，&#x2F;usr&#x2F;local&#x2F;ffmpeg的目录结构如下所示。</p><img src="/2022/05/28/%E9%9F%B3%E8%A7%86%E9%A2%91%E5%85%A5%E9%97%A8%E7%AC%AC%E4%B8%80%E5%AD%A3/day06%E6%89%8B%E5%8A%A8%E7%BC%96%E8%AF%91ffmpeg/497279-20210410215351652-254888592.png" class="" title="FFmpeg目录结构"><h3 id="7、配置PATH"><a href="#7、配置PATH" class="headerlink" title="7、配置PATH"></a>7、配置PATH</h3><p>为了让bin目录中的ffmpeg、ffprobe、ffplay在任意位置都能够使用，需要先将bin目录配置到环境变量PATH中。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-comment"># 编辑.zprofile</span><br>vim ~/.zprofile <br><br><span class="hljs-comment"># .zprofile文件中写入以下内容</span><br><span class="hljs-built_in">export</span> PATH=/usr/local/ffmpeg/bin:<span class="hljs-variable">$PATH</span> <br><br><span class="hljs-comment"># 让.zprofile生效</span><br><span class="hljs-built_in">source</span> ~/.zprofile<br></code></pre></td></tr></table></figure><p>如果你用的是bash，而不是zsh，只需要将上面的.zprofile换成.bash_profile。</p><h3 id="8、验证"><a href="#8、验证" class="headerlink" title="8、验证"></a>8、验证</h3><p>接下来，在命令行上进行验证。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs sh">ffmpeg -version <br><br><span class="hljs-comment"># 结果如下所示</span><br><br>ffmpeg version 4.3.2 Copyright (c) 2000-2021 the FFmpeg developers<br>built with Apple clang version 12.0.0 (clang-1200.0.32.29)<br>configuration: --prefix=/usr/local/ffmpeg --enable-shared --disable-static --enable-gpl --enable-nonfree --enable-libfdk-aac --enable-libx264 --enable-libx265<br>libavutil      56. 51.100 / 56. 51.100<br>libavcodec     58. 91.100 / 58. 91.100<br>libavformat    58. 45.100 / 58. 45.100<br>libavdevice    58. 10.100 / 58. 10.100<br>libavfilter     7. 85.100 /  7. 85.100<br>libswscale      5.  7.100 /  5.  7.100<br>libswresample   3.  7.100 /  3.  7.100<br>libpostproc    55.  7.100 / 55.  7.100<br></code></pre></td></tr></table></figure><p>此时，你完全可以通过<code>brew uninstall ffmpeg</code>卸载以前安装的FFmpeg。</p>]]></content>
    
    
    <categories>
      
      <category>音视频入门课</category>
      
    </categories>
    
    
    <tags>
      
      <tag>音视频</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>day05-音频基础篇</title>
    <link href="/2022/05/28/%E9%9F%B3%E8%A7%86%E9%A2%91%E5%85%A5%E9%97%A8%E7%AC%AC%E4%B8%80%E5%AD%A3/day05%E9%9F%B3%E9%A2%91%E5%9F%BA%E7%A1%80%E7%AF%87/"/>
    <url>/2022/05/28/%E9%9F%B3%E8%A7%86%E9%A2%91%E5%85%A5%E9%97%A8%E7%AC%AC%E4%B8%80%E5%AD%A3/day05%E9%9F%B3%E9%A2%91%E5%9F%BA%E7%A1%80%E7%AF%87/</url>
    
    <content type="html"><![CDATA[<h2 id="一、音频基础知识"><a href="#一、音频基础知识" class="headerlink" title="一、音频基础知识"></a>一、音频基础知识</h2><h3 id="1、从共享端和观看端来大致分析直播流程？"><a href="#1、从共享端和观看端来大致分析直播流程？" class="headerlink" title="1、从共享端和观看端来大致分析直播流程？"></a>1、从共享端和观看端来大致分析直播流程？</h3><img src="/2022/05/28/%E9%9F%B3%E8%A7%86%E9%A2%91%E5%85%A5%E9%97%A8%E7%AC%AC%E4%B8%80%E5%AD%A3/day05%E9%9F%B3%E9%A2%91%E5%9F%BA%E7%A1%80%E7%AF%87/image-20220528172645179.png" class=""><h3 id="2、什么是赫兹？人类听觉范围是多少？"><a href="#2、什么是赫兹？人类听觉范围是多少？" class="headerlink" title="2、什么是赫兹？人类听觉范围是多少？"></a>2、什么是赫兹？人类听觉范围是多少？</h3><ul><li>声音一秒振动的次数叫做赫兹，英文简称 <font color="red">Hz</font></li><li>20Hz ~ 20000Hz</li></ul><img src="/2022/05/28/%E9%9F%B3%E8%A7%86%E9%A2%91%E5%85%A5%E9%97%A8%E7%AC%AC%E4%B8%80%E5%AD%A3/day05%E9%9F%B3%E9%A2%91%E5%9F%BA%E7%A1%80%E7%AF%87/image-20220528173322566.png" class=""><h3 id="3、分别解释音调、音量、音色分别由什么决定？"><a href="#3、分别解释音调、音量、音色分别由什么决定？" class="headerlink" title="3、分别解释音调、音量、音色分别由什么决定？"></a>3、分别解释音调、音量、音色分别由什么决定？</h3><ul><li>音调：声音频率的高低</li><li>音量：声音振幅的大小</li><li>音色：谐波组合而成</li></ul><h3 id="4、音频播放的三要素是什么？"><a href="#4、音频播放的三要素是什么？" class="headerlink" title="4、音频播放的三要素是什么？"></a>4、音频播放的三要素是什么？</h3><ul><li>采样率：采样频率8k、16k、32k、44.1k、48k</li><li>采样格式：一个采样用多少bit存放。通常是16bit</li><li>声道数：单声道、双声道、多声道</li></ul><h3 id="5、WAV头部信息分析？（TODO后面有空在回看）"><a href="#5、WAV头部信息分析？（TODO后面有空在回看）" class="headerlink" title="5、WAV头部信息分析？（TODO后面有空在回看）"></a>5、WAV头部信息分析？（TODO后面有空在回看）</h3><img src="/2022/05/28/%E9%9F%B3%E8%A7%86%E9%A2%91%E5%85%A5%E9%97%A8%E7%AC%AC%E4%B8%80%E5%AD%A3/day05%E9%9F%B3%E9%A2%91%E5%9F%BA%E7%A1%80%E7%AF%87/image-20220528173749399.png" class=""><img src="/2022/05/28/%E9%9F%B3%E8%A7%86%E9%A2%91%E5%85%A5%E9%97%A8%E7%AC%AC%E4%B8%80%E5%AD%A3/day05%E9%9F%B3%E9%A2%91%E5%9F%BA%E7%A1%80%E7%AF%87/image-20220528173803520.png" class="">]]></content>
    
    
    <categories>
      
      <category>音视频入门课</category>
      
    </categories>
    
    
    <tags>
      
      <tag>音视频</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>day01-入门基础篇</title>
    <link href="/2022/05/28/%E9%9F%B3%E8%A7%86%E9%A2%91%E5%85%A5%E9%97%A8%E7%AC%AC%E4%B8%80%E5%AD%A3/day01%E5%85%A5%E9%97%A8%E5%9F%BA%E7%A1%80%E7%AF%87/"/>
    <url>/2022/05/28/%E9%9F%B3%E8%A7%86%E9%A2%91%E5%85%A5%E9%97%A8%E7%AC%AC%E4%B8%80%E5%AD%A3/day01%E5%85%A5%E9%97%A8%E5%9F%BA%E7%A1%80%E7%AF%87/</url>
    
    <content type="html"><![CDATA[<h2 id="一、Mac终端命令"><a href="#一、Mac终端命令" class="headerlink" title="一、Mac终端命令"></a>一、Mac终端命令</h2><h3 id="1、如果电脑上有多个ffmpeg，如何知道当前执行的ffmpeg命令是哪个安装包下的？"><a href="#1、如果电脑上有多个ffmpeg，如何知道当前执行的ffmpeg命令是哪个安装包下的？" class="headerlink" title="1、如果电脑上有多个ffmpeg，如何知道当前执行的ffmpeg命令是哪个安装包下的？"></a>1、如果电脑上有多个ffmpeg，如何知道当前执行的ffmpeg命令是哪个安装包下的？</h3><ul><li>借助 <font color="red">which</font> 命令</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><pre><code class="hljs sh">$ <span class="hljs-built_in">which</span> ffmpeg<br>/usr/local/ffmpeg/bin/ffmpeg<br></code></pre></td></tr></table></figure><h3 id="2、借助命令行如何知道C语言的函数，比如-malloc-函数属于哪个库？"><a href="#2、借助命令行如何知道C语言的函数，比如-malloc-函数属于哪个库？" class="headerlink" title="2、借助命令行如何知道C语言的函数，比如 malloc 函数属于哪个库？"></a>2、借助命令行如何知道C语言的函数，比如 <font color="red">malloc</font> 函数属于哪个库？</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">$ man malloc<br></code></pre></td></tr></table></figure><img src="/2022/05/28/%E9%9F%B3%E8%A7%86%E9%A2%91%E5%85%A5%E9%97%A8%E7%AC%AC%E4%B8%80%E5%AD%A3/day01%E5%85%A5%E9%97%A8%E5%9F%BA%E7%A1%80%E7%AF%87/image-20220528133251618.png" class="" title="image-20220528133251618"><h3 id="3、env-命令有什么用？"><a href="#3、env-命令有什么用？" class="headerlink" title="3、env 命令有什么用？"></a>3、<code>env</code> 命令有什么用？</h3><ul><li>可以查看当前mac电脑的环境变量</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs sh">$ <span class="hljs-built_in">env</span> | grep PATH<br>MANPATH=/usr/local/share/man:<br>PATH=/usr/local/ffmpeg/bin:/usr/local/bin:/usr/local/sbin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/Library/Apple/usr/bin<br>INFOPATH=/usr/local/share/info:<br></code></pre></td></tr></table></figure><h2 id="二、C语言回顾"><a href="#二、C语言回顾" class="headerlink" title="二、C语言回顾"></a>二、C语言回顾</h2><h3 id="1、C语言中的数组长度与其他高级语言有什么不同？"><a href="#1、C语言中的数组长度与其他高级语言有什么不同？" class="headerlink" title="1、C语言中的数组长度与其他高级语言有什么不同？"></a>1、C语言中的<font color="red">数组长度</font>与其他高级语言有什么不同？</h3><ul><li>C语言中的数组长度，必须指定，无法自动扩容。</li><li>C语言中的数组存储数据的长度，需要开发者自己维护，不可直接对数组进行获取。</li></ul><h3 id="2、指针的实际作用？"><a href="#2、指针的实际作用？" class="headerlink" title="2、指针的实际作用？"></a>2、指针的实际作用？</h3><ul><li>①在参数传递时，不需要真的带着一大堆的数据，可以传递指针，提高程序执行效率。</li><li>②指针可以指向任何地址，所以灵活性很高</li></ul><h3 id="3、指针的定义？"><a href="#3、指针的定义？" class="headerlink" title="3、指针的定义？"></a>3、指针的定义？</h3><ul><li>指向内存所在地址的变量，就是指针。</li></ul><h3 id="4、对指针的操作可以分为哪两大方向？"><a href="#4、对指针的操作可以分为哪两大方向？" class="headerlink" title="4、对指针的操作可以分为哪两大方向？"></a>4、对指针的操作可以分为哪两大方向？</h3><ul><li>对指针本身进行操作</li><li>对指针指向的内容操作</li></ul><h3 id="5、借助以下代码，思考为什么要养成指针释放后需要置空的编码好习惯？"><a href="#5、借助以下代码，思考为什么要养成指针释放后需要置空的编码好习惯？" class="headerlink" title="5、借助以下代码，思考为什么要养成指针释放后需要置空的编码好习惯？"></a>5、借助以下代码，思考为什么要养成指针释放后需要置空的编码好习惯？</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdlib.h&gt;</span></span><br><br><span class="hljs-type">int</span> <span class="hljs-title function_">main</span><span class="hljs-params">(<span class="hljs-type">int</span> argc, <span class="hljs-type">const</span> <span class="hljs-type">char</span> * argv[])</span> &#123;<br>    <span class="hljs-comment">// insert code here...</span><br>    <br>    <span class="hljs-type">char</span> *p = (<span class="hljs-type">char</span>*)<span class="hljs-built_in">malloc</span>(<span class="hljs-number">10</span>);<br>    *p = <span class="hljs-string">&#x27;a&#x27;</span>;<br>    *(p+<span class="hljs-number">1</span>) = <span class="hljs-string">&#x27;b&#x27;</span>;<br>    *(p+<span class="hljs-number">2</span>) = <span class="hljs-string">&#x27;c&#x27;</span>;<br>    <span class="hljs-built_in">free</span>(p);<br><span class="hljs-comment">//    p = NULL; (如果没有这句代码的保护，接下来对p的使用就是野指针，容易造成不可预知的错误)</span><br>    *p = <span class="hljs-string">&#x27;d&#x27;</span>;<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%s\n&quot;</span>, p);<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="6、什么是函数？什么是函数指针？最好自己先代码练一下。"><a href="#6、什么是函数？什么是函数指针？最好自己先代码练一下。" class="headerlink" title="6、什么是函数？什么是函数指针？最好自己先代码练一下。"></a>6、什么是函数？什么是函数指针？最好自己先代码练一下。</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs C"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-type">int</span> <span class="hljs-title function_">main</span><span class="hljs-params">(<span class="hljs-type">int</span> argc, <span class="hljs-type">const</span> <span class="hljs-type">char</span> * argv[])</span> &#123;<br>    <span class="hljs-type">int</span> <span class="hljs-title function_">sum</span><span class="hljs-params">(<span class="hljs-type">int</span>, <span class="hljs-type">int</span>)</span>;          <span class="hljs-comment">//函数声明</span><br>    <span class="hljs-type">int</span> (*func)(<span class="hljs-type">int</span>, <span class="hljs-type">int</span>);      <span class="hljs-comment">//函数指针</span><br>    func = sum;<br>    <span class="hljs-type">int</span> result = func(<span class="hljs-number">1</span>, <span class="hljs-number">2</span>);<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%i\n&quot;</span>, result);<br>    <br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br><span class="hljs-type">int</span> <span class="hljs-title function_">sum</span><span class="hljs-params">(<span class="hljs-type">int</span> a, <span class="hljs-type">int</span> b)</span> &#123;<br>    <span class="hljs-keyword">return</span> a + b;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="7、usleep函数的作用是什么？单位是什么？"><a href="#7、usleep函数的作用是什么？单位是什么？" class="headerlink" title="7、usleep函数的作用是什么？单位是什么？"></a>7、<font color="red">usleep</font>函数的作用是什么？单位是什么？</h3><ul><li>usleep的函数是让线程阻塞一段时间</li><li>usleep的单位是<font color="red">微秒</font></li><li><code>usleep(1000000); </code> 就是阻塞1s钟</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs C"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;unistd.h&gt;</span></span><br><span class="hljs-type">int</span> <span class="hljs-title function_">main</span><span class="hljs-params">(<span class="hljs-type">int</span> argc, <span class="hljs-type">const</span> <span class="hljs-type">char</span> * argv[])</span> &#123;<br>    <span class="hljs-type">static</span> <span class="hljs-type">int</span> count = <span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">while</span> (count &lt; <span class="hljs-number">10</span>) &#123;<br>        usleep(<span class="hljs-number">1000000</span>);<br>        count ++;<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%i \n&quot;</span>, count);<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="8、C语言中如何打开一个文件，如何读取文件，如何关闭文件？（一定要多代码练习）"><a href="#8、C语言中如何打开一个文件，如何读取文件，如何关闭文件？（一定要多代码练习）" class="headerlink" title="8、C语言中如何打开一个文件，如何读取文件，如何关闭文件？（一定要多代码练习）"></a>8、C语言中如何打开一个文件，如何读取文件，如何关闭文件？（一定要多代码练习）</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdio.h&gt;</span></span><br><br><span class="hljs-type">void</span> <span class="hljs-title function_">writeFile</span><span class="hljs-params">(<span class="hljs-type">const</span> <span class="hljs-type">char</span>* filePath)</span> &#123;<br>    FILE *file = fopen(filePath, <span class="hljs-string">&quot;w&quot;</span>);<br>    <span class="hljs-keyword">if</span> (file == <span class="hljs-literal">NULL</span>) &#123;<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;打开文件失败(%s)\n&quot;</span>, filePath);<br>        <span class="hljs-keyword">return</span>;<br>    &#125;<br>    <span class="hljs-type">size_t</span> wLen = fwrite(<span class="hljs-string">&quot;0123456789&quot;</span>, <span class="hljs-number">1</span>, <span class="hljs-number">10</span>, file);<br>    <span class="hljs-keyword">if</span> (wLen &lt; <span class="hljs-number">0</span>) &#123;<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;写入文件失败(%zu)\n&quot;</span>, wLen);<br>        <span class="hljs-keyword">return</span>;<br>    &#125;<br>    fclose(file);<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;写入成功\n&quot;</span>);<br>&#125;<br><br><span class="hljs-type">void</span> <span class="hljs-title function_">readFile</span><span class="hljs-params">(<span class="hljs-type">const</span> <span class="hljs-type">char</span>* filePath)</span> &#123;<br>    FILE *file = fopen(filePath, <span class="hljs-string">&quot;r&quot;</span>);<br>    <span class="hljs-keyword">if</span> (file == <span class="hljs-literal">NULL</span>) &#123;<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;打开文件失败(%s)\n&quot;</span>, filePath);<br>        <span class="hljs-keyword">return</span>;<br>    &#125;<br>    <span class="hljs-type">char</span> data[<span class="hljs-number">20</span>];<br>    <span class="hljs-type">size_t</span> rLen = fread(data, <span class="hljs-keyword">sizeof</span>(<span class="hljs-type">char</span>), <span class="hljs-number">10</span>, file);<br>    <span class="hljs-keyword">if</span> (rLen &lt; <span class="hljs-number">0</span>) &#123;<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;读取文件失败(%zu)\n&quot;</span>, rLen);<br>        <span class="hljs-keyword">return</span>;<br>    &#125;<br>    fclose(file);<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;读取成功（%s）\n&quot;</span>, data);<br>&#125;<br><br><span class="hljs-type">int</span> <span class="hljs-title function_">main</span><span class="hljs-params">(<span class="hljs-type">int</span> argc, <span class="hljs-type">const</span> <span class="hljs-type">char</span> * argv[])</span> &#123;<br>    <span class="hljs-type">const</span> <span class="hljs-type">char</span>* filePath = <span class="hljs-string">&quot;/Users/carrot/Documents/Code_Template_iOS/01_音视频/10_李超/01_第一季/CDemo/Data/readFileName.txt&quot;</span>;<br>    writeFile(filePath);<br>    readFile(filePath);<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>音视频入门课</category>
      
    </categories>
    
    
    <tags>
      
      <tag>音视频</tag>
      
      <tag>Mac命令</tag>
      
      <tag>C语言</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>GitHub搭建个人博客</title>
    <link href="/2022/04/25/%E6%9D%82%E8%B0%88/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    <url>/2022/04/25/%E6%9D%82%E8%B0%88/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/</url>
    
    <content type="html"><![CDATA[<h2 id="一、开启GitHub的homepage功能"><a href="#一、开启GitHub的homepage功能" class="headerlink" title="一、开启GitHub的homepage功能"></a>一、开启GitHub的homepage功能</h2><h3 id="1、注册GitHub账号，并创建一个项目，对仓库名字有严格要求。"><a href="#1、注册GitHub账号，并创建一个项目，对仓库名字有严格要求。" class="headerlink" title="1、注册GitHub账号，并创建一个项目，对仓库名字有严格要求。"></a>1、注册GitHub账号，并创建一个项目，对仓库名字有严格要求。</h3><img src="/2022/04/25/%E6%9D%82%E8%B0%88/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/image-20220425074530893.png" class="" title="image-20220425074530893"><h3 id="2、在项目中创建一个-index-html-文件，并填入以下内容。"><a href="#2、在项目中创建一个-index-html-文件，并填入以下内容。" class="headerlink" title="2、在项目中创建一个 index.html 文件，并填入以下内容。"></a>2、在项目中创建一个 <code>index.html</code> 文件，并填入以下内容。</h3><figure class="highlight html"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></div></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span> /&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">http-equiv</span>=<span class="hljs-string">&quot;X-UA-Compatible&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;IE=edge&quot;</span> /&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;viewport&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>Document<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>    Hello World<br>  <span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><h3 id="3、访问页面，表示这个阶段成功了。"><a href="#3、访问页面，表示这个阶段成功了。" class="headerlink" title="3、访问页面，表示这个阶段成功了。"></a>3、访问页面，表示这个阶段成功了。</h3><img src="/2022/04/25/%E6%9D%82%E8%B0%88/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/image-20220425075606389.png" class="" title="image-20220425075606389"><h2 id="二、本地搭建hexo博客"><a href="#二、本地搭建hexo博客" class="headerlink" title="二、本地搭建hexo博客"></a>二、本地搭建hexo博客</h2><h3 id="1、安装Hexo（依赖nodejs环境，自行安装）"><a href="#1、安装Hexo（依赖nodejs环境，自行安装）" class="headerlink" title="1、安装Hexo（依赖nodejs环境，自行安装）"></a>1、安装Hexo（依赖nodejs环境，自行安装）</h3><p> <a href="https://hexo.io/zh-cn/docs/">Hexo 官方安装文档</a> </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">npm install -g hexo-cli<br></code></pre></td></tr></table></figure><p>查看版本</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">hexo -v<br></code></pre></td></tr></table></figure><p>创建一个 <code>hexo-blog</code> 并初始化</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">hexo init hexo-blog<br>cd hexo-blog<br>npm install<br></code></pre></td></tr></table></figure><p>本地启动</p><figure class="highlight axapta"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs axapta">hexo g<br>hexo <span class="hljs-keyword">server</span><br></code></pre></td></tr></table></figure><p>浏览器访问 <a href="http://localhost:4000/">http://localhost:4000</a> ，页面默认主图风格如下</p><img src="/2022/04/25/%E6%9D%82%E8%B0%88/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3lhb3JvbmdrZQ==,size_16,color_FFFFFF,t_70.png" class="" title="请添加图片描述"><h3 id="2、更换hexo主题（个人比较喜欢Fluid）"><a href="#2、更换hexo主题（个人比较喜欢Fluid）" class="headerlink" title="2、更换hexo主题（个人比较喜欢Fluid）"></a>2、更换hexo主题（个人比较喜欢Fluid）</h3><p><a href="https://github.com/fluid-dev/hexo-theme-fluid">官方安装文档</a></p><h3 id="1、方式一："><a href="#1、方式一：" class="headerlink" title="1、方式一："></a>1、<strong>方式一：</strong></h3><p>Hexo 5.0.0 版本以上，推荐通过 npm 直接安装，进入博客目录执行命令：</p><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ada">npm install <span class="hljs-comment">--save hexo-theme-fluid</span><br></code></pre></td></tr></table></figure><p>然后在博客目录下创建 <code>_config.fluid.yml</code>，将主题的 <a href="https://github.com/fluid-dev/hexo-theme-fluid/blob/master/_config.yml">_config.yml</a> 内容复制进去。</p><h3 id="2、方式二："><a href="#2、方式二：" class="headerlink" title="2、方式二："></a>2、<strong>方式二：</strong></h3><p>下载 <a href="https://github.com/fluid-dev/hexo-theme-fluid/releases">最新 release 版本</a> 解压到 themes 目录，并将解压出的文件夹重命名为 <code>fluid</code>。</p><p>如下修改 Hexo 博客目录中的 <code>_config.yml</code>：</p><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs avrasm"><span class="hljs-symbol">theme:</span> fluid  <span class="hljs-meta"># 指定主题</span><br><br><span class="hljs-symbol">language:</span> <span class="hljs-built_in">zh</span>-CN  <span class="hljs-meta"># 指定语言，会影响主题显示的语言，按需修改</span><br></code></pre></td></tr></table></figure><h3 id="3、创建「关于页」"><a href="#3、创建「关于页」" class="headerlink" title="3、创建「关于页」"></a>3、<strong>创建「关于页」</strong></h3><p>首次使用主题的「关于页」需要手动创建：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">hexo new page about<br></code></pre></td></tr></table></figure><p>创建成功后，编辑博客目录下 <code>/source/about/index.md</code>，添加 <code>layout</code> 属性。</p><p>修改后的文件示例如下：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs markdown">---<br>title: about<br>date: 2020-02-23 19:20:33<br><span class="hljs-section">layout: about</span><br><span class="hljs-section">---</span><br><br>这里写关于页的正文，支持 Markdown, HTML<br></code></pre></td></tr></table></figure><h3 id="4、启动测试"><a href="#4、启动测试" class="headerlink" title="4、启动测试"></a>4、启动测试</h3><p><strong>本地启动</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">hexo g -d<br>hexo s<br></code></pre></td></tr></table></figure><p>浏览器访问 <a href="http://localhost:4000，`Fluid`主题风格页面如下">http://localhost:4000，`Fluid`主题风格页面如下</a></p><img src="/2022/04/25/%E6%9D%82%E8%B0%88/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3lhb3JvbmdrZQ==,size_16,color_FFFFFF,t_70-20220426063940880.png" class="" title="请添加图片描述"><h3 id="5、创建文章"><a href="#5、创建文章" class="headerlink" title="5、创建文章"></a>5、创建文章</h3><p>如下修改 Hexo 博客目录中的 <code>_config.yml</code>，打开这个配置是为了在生成文章的时候生成一个同名的资源目录用于存放图片文件。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">post_asset_folder: <span class="hljs-literal">true</span><br></code></pre></td></tr></table></figure><p>执行如下命令创建一篇新文章，名为《测试文章》</p><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs livecodeserver">hexo <span class="hljs-built_in">new</span> <span class="hljs-built_in">post</span> <span class="hljs-comment">--path 测试1/测试文章1</span><br></code></pre></td></tr></table></figure><p>执行完成后在<code>source\_posts</code>目录下生成了一个md文件和一个同名的资源目录(用于存放图片)</p><img src="/2022/04/25/%E6%9D%82%E8%B0%88/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/image-20220426064448766-0926693.png" class="" title="image-20220426064448766"><h3 id="6、借助-Typora-软件编写文章"><a href="#6、借助-Typora-软件编写文章" class="headerlink" title="6、借助 Typora 软件编写文章"></a>6、借助 Typora 软件编写文章</h3><p>对于图片资源的管理比较麻烦，这里 <a href="https://moeci.com/posts/hexo-typora/">推荐方案</a></p><p>配置typora，图片文件保存路径: <code>./$&#123;filename&#125;</code> 即保存到与 当前正在编辑的文件名 相同的同级文件夹下</p><img src="/2022/04/25/%E6%9D%82%E8%B0%88/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/image-20201128093318078.png" class="" title="img"><img src="/2022/04/25/%E6%9D%82%E8%B0%88/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/image-20201128093433709.png" class="" title="img"><p>配置给hexo-blog项目配置插件</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css">npm install hexo-asset-<span class="hljs-selector-tag">img</span> <span class="hljs-attr">--save</span><br></code></pre></td></tr></table></figure><h2 id="三、发布到GitHub-Pages"><a href="#三、发布到GitHub-Pages" class="headerlink" title="三、发布到GitHub Pages"></a>三、发布到GitHub Pages</h2><h3 id="1、安装-hexo-deployer-git-发布插件"><a href="#1、安装-hexo-deployer-git-发布插件" class="headerlink" title="1、安装  hexo-deployer-git 发布插件"></a>1、安装  <code>hexo-deployer-git</code> 发布插件</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">npm install hexo-deployer-git --save<br></code></pre></td></tr></table></figure><h3 id="2、修改根目录下的-config-yml，配置-GitHub-相关信息"><a href="#2、修改根目录下的-config-yml，配置-GitHub-相关信息" class="headerlink" title="2、修改根目录下的 _config.yml，配置 GitHub 相关信息"></a>2、修改根目录下的 <code>_config.yml</code>，配置 <code>GitHub</code> 相关信息</h3><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs json"># Deployment<br>## Docs<span class="hljs-punctuation">:</span> https<span class="hljs-punctuation">:</span><span class="hljs-comment">//hexo.io/docs/one-command-deployment</span><br>deploy<span class="hljs-punctuation">:</span><br>  type<span class="hljs-punctuation">:</span> git<br>  repo<span class="hljs-punctuation">:</span> git@github.com<span class="hljs-punctuation">:</span>carrotlsp/carrotlsp.github.io.git<br>  branch<span class="hljs-punctuation">:</span> main<br></code></pre></td></tr></table></figure><h3 id="3、配置建立本地电脑和GitHub的ssh-key连接"><a href="#3、配置建立本地电脑和GitHub的ssh-key连接" class="headerlink" title="3、配置建立本地电脑和GitHub的ssh-key连接"></a>3、配置建立本地电脑和GitHub的ssh-key连接</h3><p>就是把自己 <code>cd ~/.ssh/ </code> 目录下的公钥给到GitHub配置中</p><h3 id="4、发布"><a href="#4、发布" class="headerlink" title="4、发布"></a>4、发布</h3><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">hexo g</span><br><span class="hljs-attribute">hexo d</span><br></code></pre></td></tr></table></figure><p>访问 <code>https://carrotlsp.github.io/</code> 即可看到效果</p><img src="/2022/04/25/%E6%9D%82%E8%B0%88/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/image-20220426065418218.png" class="" title="image-20220426065418218"><h2 id="四、一些小技巧"><a href="#四、一些小技巧" class="headerlink" title="四、一些小技巧"></a>四、一些小技巧</h2><h3 id="1、如何把关键字标红？"><a href="#1、如何把关键字标红？" class="headerlink" title="1、如何把关键字标红？"></a>1、如何把关键字标红？</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs markdown"><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">font</span> <span class="hljs-attr">color</span>=<span class="hljs-string">&quot;red&quot;</span>&gt;</span></span>红色字体<span class="language-xml"><span class="hljs-tag">&lt;/<span class="hljs-name">font</span>&gt;</span></span><br></code></pre></td></tr></table></figure><p>但是每次敲这个HTML语法过于繁杂，我们可以借助 <code>输入法</code> 的快捷指令即可，如下图</p><img src="/2022/04/25/%E6%9D%82%E8%B0%88/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/image-20220426065638524.png" class="" title="image-20220426065638524"><h3 id="2、平时写文章常用命令？"><a href="#2、平时写文章常用命令？" class="headerlink" title="2、平时写文章常用命令？"></a>2、平时写文章常用命令？</h3><ul><li>创建文件结构</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">hexo new post --path 文章目录/文章名字<br></code></pre></td></tr></table></figure><ul><li>生成文章</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">hexo g<br></code></pre></td></tr></table></figure><ul><li>发布文章</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">hexo d<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>杂谈</category>
      
    </categories>
    
    
    <tags>
      
      <tag>博客搭建</tag>
      
      <tag>hexo</tag>
      
      <tag>GitHub</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>day01指针关键知识点</title>
    <link href="/2022/04/25/C%E8%AF%AD%E8%A8%80/day01/"/>
    <url>/2022/04/25/C%E8%AF%AD%E8%A8%80/day01/</url>
    
    <content type="html"><![CDATA[<h2 id="day01指针关键知识点"><a href="#day01指针关键知识点" class="headerlink" title="day01指针关键知识点"></a>day01指针关键知识点</h2><h3 id="1、什么是地址（如何定义）？"><a href="#1、什么是地址（如何定义）？" class="headerlink" title="1、什么是地址（如何定义）？"></a>1、什么是地址（如何定义）？</h3><ul><li>【定义】内存中字节的编号称为地址。</li></ul><h3 id="2、变量名、函数名、字符串名、数组名，它们都是地址的助记符，但是在编码过程中，这些名字的含义分别是什么？"><a href="#2、变量名、函数名、字符串名、数组名，它们都是地址的助记符，但是在编码过程中，这些名字的含义分别是什么？" class="headerlink" title="2、变量名、函数名、字符串名、数组名，它们都是地址的助记符，但是在编码过程中，这些名字的含义分别是什么？"></a>2、变量名、函数名、字符串名、数组名，它们都是<font color="red">地址的助记符</font>，但是在<font color="red">编码</font>过程中，这些名字的含义分别是什么？</h3><ul><li>【变量名】在编码过程中，表示的是数据本身。</li><li>【函数名、字符串名、数组名】在编码过程中，表示的是代码块或数据块的首地址。</li></ul><h3 id="3、什么是指针变量？"><a href="#3、什么是指针变量？" class="headerlink" title="3、什么是指针变量？"></a>3、什么是指针变量？</h3><ul><li>数据在内存中的地址也称为指针，如果一个变量存储了一份数据的指针，我们就称它问指针变量。</li></ul><h3 id="4、使用指针变量的时候，什么时候需带-号？什么时候不能带-号"><a href="#4、使用指针变量的时候，什么时候需带-号？什么时候不能带-号" class="headerlink" title="4、使用指针变量的时候，什么时候需带*号？什么时候不能带*号?"></a>4、使用指针变量的时候，什么时候需带<font color="red">*号</font>？什么时候不能带<font color="red">*号</font>?</h3><ul><li>【需带<font color="red">*号</font>】① 在定义指针变量时，为了和普通变量区分开来，需要使用<font color="red">*号</font> ②获取指针变量所指向数据时，需要使用<font color="red">*号</font> </li><li>【不能带<font color="red">*号</font>】在非定义表达式中，对指针进行赋值，改变其指向时不能使用<font color="red">*号</font> 。</li></ul><h3 id="5、-号在定义和使用指针变量时，含义一样吗？"><a href="#5、-号在定义和使用指针变量时，含义一样吗？" class="headerlink" title="5、*号在定义和使用指针变量时，含义一样吗？"></a>5、<font color="red">*号</font>在定义和使用指针变量时，含义一样吗？</h3><ul><li>【<font color="red">*号</font>定义时】*号可以用在指针变量的定义中，表明这是一个指针变量，以和普通变量区分开</li><li>【<font color="red">*号</font>使用时】使用指针变量时再前面加*号，表示获取指针指向的数据，或者说表示的是指针指向的数据本身。</li><li>也就是说，<strong>定义指针变量时的*号</strong>和<strong>使用指针变量时的*号</strong>意义完全不同</li></ul><h3 id="6、-号总共有几种用法？"><a href="#6、-号总共有几种用法？" class="headerlink" title="6、*号总共有几种用法？"></a>6、<font color="red">*号</font>总共有几种用法？</h3><ul><li>①用于乘法表达式中</li><li>②用于定义指针变量</li><li>③用于获取指针变量所指向的数据</li></ul>]]></content>
    
    
    <categories>
      
      <category>C语言</category>
      
    </categories>
    
    
    <tags>
      
      <tag>指针</tag>
      
      <tag>地址</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
